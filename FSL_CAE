{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":12867975,"sourceType":"datasetVersion","datasetId":8139765}],"dockerImageVersionId":31090,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-09-04T12:54:19.697435Z","iopub.execute_input":"2025-09-04T12:54:19.697600Z","iopub.status.idle":"2025-09-04T12:54:25.473466Z","shell.execute_reply.started":"2025-09-04T12:54:19.697583Z","shell.execute_reply":"2025-09-04T12:54:25.472719Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195734.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195801.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192237.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192312.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191605.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193039.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194148.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195829.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194413.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192014.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_190848.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193631.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194215.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195034.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193138.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194526.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193531.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192532.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193906.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195931.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191325.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192746.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200318.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193609.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193120.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195857.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195656.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195401.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194302.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194748.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193433.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192758.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193447.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191944.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192520.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193734.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193022.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191927.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195650.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192102.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191959.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194539.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192749.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194934.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192643.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192056.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192218.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193612.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195922.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194723.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192909.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195223.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193626.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195432.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191936.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191534.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194646.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200143.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193211.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191519.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191751.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195927.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195744.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195707.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200149.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192211.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195435.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192135.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195613.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192404.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192804.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193127.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192445.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193220.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191742.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192527.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193549.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191333.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200214.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192156.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192953.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192354.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194736.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200522.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193143.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192459.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191908.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193546.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194609.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195524.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191931.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200203.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192509.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193839.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191525.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193553.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193113.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200311.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191956.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193541.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192602.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195330.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200254.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194554.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195541.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193102.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192752.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195326.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193019.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192207.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192127.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192550.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192506.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194623.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194709.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193817.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194400.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193718.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193711.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192021.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195755.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200031.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195448.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195059.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193215.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192905.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200221.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193013.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193535.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195257.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191225.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194139.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195047.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193757.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194320.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193706.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194249.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193422.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194316.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192845.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192524.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200540.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193027.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194931.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192118.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195425.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192108.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192332.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191657.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194631.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195604.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192702.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192742.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192739.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200405.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193559.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192429.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195943.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194741.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195421.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193901.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193409.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192026.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193401.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194404.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200037.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195352.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192050.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192638.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_190945.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194543.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194532.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192202.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191911.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194914.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195454.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194727.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191208.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194653.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192606.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192324.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_190853.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193429.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192040.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200348.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194613.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194338.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192706.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191859.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195439.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195903.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194909.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195807.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193726.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194519.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193819.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195700.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194927.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192736.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191947.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191342.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194346.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_190900.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192258.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195936.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192948.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192631.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194246.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194617.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193007.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191640.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192514.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191853.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194637.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192008.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194859.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194703.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194352.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195444.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192319.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200441.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194919.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193406.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193751.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193250.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200355.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195557.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192659.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200437.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192254.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194153.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195109.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193851.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195307.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200233.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194349.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191543.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194224.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200018.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193855.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192413.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193107.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192411.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200158.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194144.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192345.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195536.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191726.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191316.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193714.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193510.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195025.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192853.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200307.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200509.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200315.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194523.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194516.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192536.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194627.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194649.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193835.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194306.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195041.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192722.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200358.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194325.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192031.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200132.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195245.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195029.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195406.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_190843.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195951.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200303.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193240.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200341.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192709.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192230.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200249.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192725.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194718.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200344.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195501.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195055.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191850.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192147.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194200.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195345.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193916.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195253.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195552.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200023.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193413.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200534.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194238.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194903.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200245.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194552.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194924.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191205.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193436.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193426.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200300.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192623.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195417.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192444.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195050.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195249.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191440.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193527.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192649.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200027.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_190905.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192558.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191456.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194242.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192013.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192635.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195910.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191633.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192646.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191920.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193451.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192302.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192338.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192422.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192455.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195749.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192730.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192004.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195312.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191857.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193001.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192241.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192546.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191804.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195813.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193740.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191744.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193502.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194603.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193643.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195609.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200041.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195357.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195822.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192151.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193812.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200519.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200048.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195302.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200238.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192222.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191951.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192651.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194329.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191214.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195619.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200054.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194220.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191413.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200527.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194343.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193418.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_194657.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_190950.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192625.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195428.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191627.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193234.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192438.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_190938.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200225.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193254.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192503.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192609.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193305.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200208.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192613.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191502.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193226.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_190910.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200447.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192418.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200136.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191409.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191622.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200336.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193920.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193617.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191256.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192349.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195741.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195241.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191202.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195411.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191939.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192618.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192714.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193110.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191846.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_200153.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195547.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_192036.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195337.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_195624.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_193832.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/label/IMG_20190726_191221.png\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192324.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195302.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193549.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195619.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192635.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200300.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195041.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192649.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191936.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191850.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192905.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195439.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193113.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194741.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193906.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191225.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192524.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195700.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200048.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193734.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193643.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195307.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193433.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193240.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191744.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191413.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195922.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195249.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194320.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191214.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192004.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200023.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192706.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194302.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195857.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191221.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195253.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192429.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195257.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192118.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193617.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192422.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192013.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192332.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195650.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193110.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192659.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195749.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195707.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195541.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194220.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195927.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194859.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192459.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191939.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193305.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200221.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195345.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194552.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193413.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195829.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200143.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191857.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192026.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192609.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200355.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195050.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192021.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195406.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193215.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192411.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194919.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194924.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200153.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195025.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193426.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200233.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195604.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193120.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200315.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193711.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193527.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192618.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194718.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200136.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195034.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192338.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194657.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200358.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195547.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192008.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195432.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191859.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193107.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192151.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195330.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194631.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192546.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200225.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192218.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194637.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194325.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200336.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192258.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192108.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191456.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195903.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194249.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191633.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_190938.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195744.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193740.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192230.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193546.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193510.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200405.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195524.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192631.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200447.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195223.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200249.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192730.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195656.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_190905.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200203.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193022.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192156.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195055.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191502.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195910.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191519.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193612.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193250.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192725.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194144.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194609.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200534.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192532.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191316.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193559.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194909.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194200.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192102.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192736.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200318.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194623.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195047.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192207.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200527.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194627.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194903.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193226.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200522.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193451.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191853.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193626.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191920.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200540.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191640.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192345.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195609.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194539.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193027.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193406.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192031.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200519.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195312.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195552.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192056.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193855.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194329.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191208.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191911.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195822.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192312.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191931.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191325.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_190848.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193819.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191944.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200344.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195428.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192302.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194238.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192702.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193631.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191804.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195059.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195801.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_190945.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195734.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192643.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192651.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191622.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195807.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195624.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193714.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194526.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200437.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192746.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_190900.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191202.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200509.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_190910.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191409.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195951.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191908.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193757.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_190950.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192606.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195444.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194215.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195417.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191627.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192222.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195029.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192354.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192623.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200303.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192558.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193401.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195536.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194242.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193447.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191951.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193436.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193718.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194352.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191657.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191959.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200027.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200208.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200031.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194723.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195245.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193254.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193531.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193013.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193835.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192147.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194343.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192550.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191947.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192254.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194709.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192602.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193211.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194653.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193234.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194603.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194306.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192520.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193609.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191605.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194617.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192413.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192739.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194338.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192455.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192503.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192418.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200037.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193007.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193418.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191956.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195421.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194349.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194736.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200054.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194404.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194523.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193541.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192536.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194703.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192036.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195943.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192948.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195755.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200238.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193839.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192752.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194646.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195454.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191256.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194224.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193429.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192638.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200245.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192050.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194931.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195357.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192709.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195501.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194413.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193127.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191846.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191440.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192953.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194927.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200018.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194914.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194519.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192444.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193502.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191726.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193220.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200214.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191927.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200149.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192742.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191751.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192625.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192404.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193920.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195109.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191342.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194400.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200132.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192514.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194139.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195411.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191525.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195337.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194346.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193409.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_190843.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194613.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194316.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193916.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191333.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192909.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193706.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192319.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192804.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193102.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200348.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194246.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192135.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192613.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191742.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200311.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192237.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192211.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193138.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193726.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200158.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195326.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194649.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192127.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191543.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192202.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193553.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194554.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192749.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191534.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193039.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_190853.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192014.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192438.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195813.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195241.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193535.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194153.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200341.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194934.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_191205.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200441.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193422.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195936.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195401.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194543.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193812.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192509.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193019.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192722.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192714.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194148.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195425.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194532.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195931.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194748.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195741.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193901.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193832.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200254.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192646.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193851.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192445.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194516.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193001.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_194727.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195557.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192527.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193817.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192349.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193751.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192241.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_193143.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192506.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192845.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195613.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200307.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192758.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_200041.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195448.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195352.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_195435.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192040.jpg\n/kaggle/input/apple-dataset/ATLDSD/Healthy leaf/image/IMG_20190726_192853.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004035.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000514.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000750.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000546.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000505.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000444.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000461.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000748.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000808.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000436.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000715.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004111.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000683.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004091.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000769.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000756.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000722.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004069.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000477.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000427.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004093.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000545.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000426.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000787.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000467.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000535.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004021.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000778.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000522.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000818.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000443.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000464.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000784.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004095.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000712.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000473.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000529.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000515.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000460.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000799.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000731.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000431.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004087.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000687.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000664.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000503.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000782.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000423.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000749.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000801.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000742.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004085.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000450.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000466.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000774.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000549.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000707.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000501.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000537.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000496.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000425.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000552.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000764.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000454.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004115.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000694.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000779.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000451.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000711.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004121.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004029.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000511.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000781.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004053.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000743.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000803.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000481.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004047.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000754.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000757.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000456.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004051.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004083.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000816.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000730.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000728.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000741.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000738.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000718.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000739.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000795.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000504.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004103.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000766.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000433.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004079.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000553.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004011.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004033.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000498.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000517.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000468.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004061.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000753.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000449.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000717.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000716.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004049.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000726.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000530.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004005.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000558.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000519.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000413.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000512.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000708.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000429.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000420.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000765.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000796.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000773.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000524.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004075.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004031.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000732.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000488.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000706.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004101.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004077.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000531.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000759.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000453.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000820.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000810.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000780.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000474.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000747.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000421.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000771.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000518.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000735.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000737.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000814.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000751.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004107.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000733.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000534.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000435.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000506.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000475.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000661.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000817.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000673.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004043.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000775.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000559.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000560.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004097.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000709.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000701.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000725.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000719.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004023.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000772.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000472.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004009.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000822.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000768.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004037.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000439.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004003.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004081.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000543.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000510.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000783.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000434.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000526.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000478.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000807.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004105.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004019.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000663.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000418.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000484.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000791.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000699.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000438.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000690.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000767.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000520.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000414.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000761.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000508.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000685.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000494.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004109.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000493.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000744.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004055.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000441.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004007.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000763.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000798.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000507.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000705.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000536.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004073.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000521.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004015.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000544.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000513.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000819.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000502.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000500.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004039.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000785.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004025.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000721.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000697.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000462.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000693.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000686.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000509.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000495.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000525.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000527.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004041.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000479.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000672.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000448.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004071.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000734.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004017.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000499.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000539.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000797.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000445.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000452.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004057.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000523.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000457.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000776.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000422.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000770.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000497.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000788.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000446.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000459.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000702.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000736.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000532.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004001.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000665.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004067.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000432.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004059.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000430.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004027.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000455.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000416.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004045.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000777.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000762.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000760.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000800.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000813.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000415.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004099.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000740.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000792.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000424.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000659.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004013.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000417.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000555.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000755.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/000729.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/label/004089.png\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000780.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000705.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000748.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000813.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000456.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000763.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000737.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000446.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000518.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000507.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000545.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004067.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000685.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004091.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004105.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000699.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004097.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004041.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000452.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000521.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000785.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000774.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000770.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000717.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000493.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000455.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004071.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004009.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000756.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000478.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000796.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000694.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004027.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000544.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000754.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000472.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000423.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004099.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000474.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000822.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000771.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000414.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000739.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000721.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000772.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004035.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000552.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000690.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000765.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000445.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000460.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000464.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000435.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004055.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000514.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000505.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000729.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000426.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000543.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000511.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000759.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004043.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000707.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000747.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000814.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000422.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000773.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000441.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004081.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000421.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004075.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000418.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000709.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004087.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000462.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000459.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000466.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004121.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000782.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000477.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000433.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000799.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004053.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000461.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000512.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000519.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004015.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000741.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000750.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000683.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000431.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004007.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004103.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000663.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004051.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000467.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000495.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000416.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000420.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004073.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000450.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000769.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000499.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004101.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000775.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004023.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004013.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000778.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000436.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000701.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000498.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000496.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000549.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000736.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000425.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000686.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000725.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000468.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000697.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000760.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000762.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000664.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000687.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000722.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000711.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000788.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000728.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000532.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000524.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000712.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000718.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000525.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000820.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000738.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000523.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004045.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004079.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000784.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000726.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000693.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000751.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000787.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000453.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004095.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000488.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000742.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000753.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000539.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000665.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000661.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004019.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000509.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004059.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000731.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004057.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000659.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000764.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004025.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000513.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004107.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000818.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000536.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000558.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004003.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000749.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000766.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000819.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000522.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000530.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004029.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000475.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004011.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000503.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004085.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000413.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000517.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000439.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004111.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000515.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000444.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000797.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000740.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000777.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000537.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000520.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000448.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000424.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000733.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000730.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000415.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000808.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000454.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000817.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000502.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000803.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000553.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000501.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000434.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000743.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000719.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004093.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000527.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000531.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000504.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000810.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004083.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000481.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000816.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000559.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000560.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004037.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004005.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000800.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000791.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000500.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004017.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000457.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004021.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000767.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000801.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000473.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004077.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000757.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000430.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000449.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000417.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004049.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000807.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000526.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004033.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000755.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000451.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000497.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004039.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000734.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000708.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000546.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004061.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000529.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004089.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000716.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004031.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000798.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000744.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000732.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000432.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000429.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000783.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000781.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000672.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004115.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000715.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000779.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000761.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000706.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000555.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000443.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004001.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004109.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000535.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000792.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000510.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004069.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000484.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000795.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000776.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000702.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000479.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000768.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000534.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000427.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000508.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/004047.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000735.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000438.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000506.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000494.jpg\n/kaggle/input/apple-dataset/ATLDSD/Alternaria leaf spot/image/000673.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_162731.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164357.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004779.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004191.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004317.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164151.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004185.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004241.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163204.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004303.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004127.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004733.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004609.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004541.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004673.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004443.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004385.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004263.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163140.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004761.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163918.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004835.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004503.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004285.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004559.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163717.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004173.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004635.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004401.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_162917.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163706.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004721.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004663.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004737.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004223.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004409.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004527.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163736.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164331.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004793.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004685.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004625.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004791.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004419.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004847.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163919.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004573.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164025.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004343.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004867.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163558.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_162809.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_162703.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004705.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163950.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163642.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163643.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_162655.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004165.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004431.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004237.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004371.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004815.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004557.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004757.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004261.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004407.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164038.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004515.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004599.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004143.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004581.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004707.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163517.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004633.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004831.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004373.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004229.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004415.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004735.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004475.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163245.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004561.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004161.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004853.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004837.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004179.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004811.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004595.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004615.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004289.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_162823.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004141.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164116.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004651.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163805.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004417.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004861.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004381.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163406.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004563.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163726.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004209.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163407.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163059.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004297.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004695.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164334.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004199.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004271.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004197.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_162752.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004437.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004655.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163753.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164133.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004753.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004315.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004767.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004235.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004569.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004567.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004857.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004533.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163727.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163234.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004395.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004641.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_162710.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_162740.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004183.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004327.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004875.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004781.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164421.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004661.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004457.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004719.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004221.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_162905.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163825.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004565.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164239.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004265.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004523.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004543.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004627.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_162723.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004519.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004833.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004467.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164018.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004843.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164439.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004323.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004747.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164137.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004427.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004397.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004333.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004749.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164419.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004145.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163112.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004653.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004745.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163029.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004617.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004429.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004649.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004301.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_162846.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004869.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004647.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004169.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004551.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004525.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163347.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163953.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004637.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163213.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163631.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163607.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004809.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163652.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004803.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164242.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004433.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164455.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004855.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163906.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164105.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004295.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004755.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004681.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004175.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004621.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004711.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004769.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004299.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004603.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004167.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004851.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163357.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004827.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004287.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_162857.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004353.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004535.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_162937.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004435.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004341.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004239.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164433.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004253.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004785.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004773.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004321.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004693.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004799.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004825.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004677.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004859.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004591.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004451.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004367.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163907.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004281.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163931.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004829.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163153.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004439.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004631.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163716.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004871.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004177.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004479.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004703.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004717.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004513.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004601.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004359.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004355.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163929.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004131.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004645.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004379.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004509.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004683.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004133.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004473.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004255.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004189.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004375.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004461.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163850.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163018.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004135.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004813.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004723.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164104.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164211.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004447.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004345.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004477.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163503.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163628.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164300.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_162759.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004497.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004787.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004819.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004469.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004845.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004501.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163854.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_162836.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004485.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004483.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004493.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004171.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004795.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163123.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004783.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164305.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004823.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163426.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004639.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163225.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004403.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004259.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004481.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004839.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004499.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004357.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004129.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004445.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163805_1.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004873.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163735.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164400.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163653.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004205.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163705.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163613.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004629.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163835.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004505.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004181.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004363.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004665.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004383.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004777.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004863.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004643.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004751.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004865.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004227.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163339.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004389.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004163.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004309.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004667.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004463.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004807.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004739.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004583.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004291.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004325.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004571.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004659.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163358.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004441.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004759.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004369.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163009.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004517.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004207.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004805.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004547.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_164042.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004187.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/004679.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/label/IMG_20190727_163438.png\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004633.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004221.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_162917.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164018.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004663.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004705.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004781.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004833.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004197.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164211.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004419.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163059.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004723.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163825.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163835.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164455.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004561.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004127.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004373.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004367.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004773.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004309.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004183.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004851.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004803.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004747.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004503.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004509.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004807.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004655.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004375.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004603.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004427.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004343.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004679.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163558.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004253.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004395.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004191.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004829.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004501.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004869.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004133.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004397.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004647.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163213.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163123.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004297.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004831.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004357.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004223.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163613.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004533.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004475.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_162740.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004651.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004469.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163717.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004617.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004745.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004749.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163438.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164357.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004547.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_162703.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004681.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004479.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163225.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163426.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004813.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004739.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004783.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163009.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004301.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004447.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164419.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004819.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004815.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004177.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163029.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004259.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004205.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004769.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004837.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004401.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004859.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163850.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004371.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004599.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004861.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004241.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163716.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_162731.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004711.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004591.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004855.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004759.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004477.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163918.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004263.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004437.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163906.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163953.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163652.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164239.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004317.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004513.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163854.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163653.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004643.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004661.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163642.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004515.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004665.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004385.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004187.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004131.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004795.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004811.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004835.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004777.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004169.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004457.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004207.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163406.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004865.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004355.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004717.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163407.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004261.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004653.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163245.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004165.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_162846.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004787.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163726.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164242.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004843.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163517.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004525.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004559.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004527.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004631.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004235.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_162905.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164439.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004431.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004565.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004857.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163919.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_162752.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164104.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004707.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004451.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004847.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004383.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_162937.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004791.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004785.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004291.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004135.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004793.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004695.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004493.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004685.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163929.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004379.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004265.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004827.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004551.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004255.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163735.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164133.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004693.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004519.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004757.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_162809.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004341.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004823.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004615.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163907.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004175.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004499.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163018.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004637.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004535.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_162836.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163347.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004285.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004345.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163736.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004463.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004429.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004805.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004733.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163234.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004325.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164334.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004505.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163705.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004271.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004761.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_162857.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004641.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004417.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_162710.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004583.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004237.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004721.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004415.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004673.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004523.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004719.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004353.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004229.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004181.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163643.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004659.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004315.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004129.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004571.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004737.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004481.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164151.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004369.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004287.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004767.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004433.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004141.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004189.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004517.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004825.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164137.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164116.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004483.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164400.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163339.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004303.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004635.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164025.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163931.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004541.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004209.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004873.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004445.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004363.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004333.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004167.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163607.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163631.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004289.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163727.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004281.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004621.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004645.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004609.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163950.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004239.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004389.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004143.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004755.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004703.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004845.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_162723.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004323.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004441.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004407.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004409.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004595.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004867.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163112.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163358.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004381.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_162823.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004321.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164421.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004581.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004161.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004403.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004735.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164038.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004227.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004473.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004809.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004677.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004683.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004649.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164042.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164300.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004629.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004667.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004839.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_162759.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004485.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004443.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004299.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004751.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004295.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164305.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163204.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163805_1.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004753.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164331.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004467.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163357.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004497.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163753.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004563.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163140.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004359.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163503.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004171.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004573.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004627.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004871.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164105.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004875.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163805.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004639.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004435.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163628.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163706.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004601.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004179.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004461.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004853.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004145.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004799.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004439.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_164433.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004863.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004199.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004567.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_163153.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004185.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004569.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004163.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004173.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004779.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004557.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004625.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004543.JPG\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/IMG_20190727_162655.jpg\n/kaggle/input/apple-dataset/ATLDSD/Rust/image/004327.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003065.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_191938.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/001593.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003141.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003053.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003679.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003025.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003395.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003035.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003293.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003029.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150741.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150443.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003491.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003009.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003161.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003275.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003585.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003233.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003153.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150513.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_193204.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150730.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003735.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003287.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003043.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003697.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003541.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003163.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003169.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003019.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003121.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003105.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003345.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_193644.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150753.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_193829.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003729.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003397.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003157.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003097.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003143.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003375.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_192153.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003323.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003483.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003069.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003125.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003183.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003241.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003289.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003547.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003645.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003373.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150713.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003357.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_194718.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003147.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_195205.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_195216.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003629.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003571.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003329.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003641.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003699.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003577.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150531.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_191742.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003227.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003501.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_194647.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003545.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003117.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003307.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003083.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003511.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003581.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003027.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003587.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003493.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003075.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150329.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003667.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003727.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_193256.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003713.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_194422.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003261.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003017.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003103.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150525.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003197.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003085.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_195538.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003337.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003673.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003353.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003127.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003257.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003145.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003305.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003245.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003131.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003079.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150700.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_194856.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/001651.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003495.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_193551.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003339.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003499.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150808.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003669.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003643.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003563.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003031.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003589.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003315.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150437.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150747.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003555.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003625.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_193032.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003513.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/001649.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003619.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003319.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003621.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003047.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003717.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_194819.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003201.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003685.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003583.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_192606.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003509.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003149.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003341.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003159.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003347.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003591.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003255.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003239.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_192320.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003049.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003111.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003497.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003725.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003539.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003535.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003723.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003187.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003061.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003177.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003661.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003091.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003055.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003099.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003655.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003487.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003095.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150735.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_194807.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003185.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003719.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_191326.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003705.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003051.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003529.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150719.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003171.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003067.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003333.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/001591.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003151.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003205.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003677.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_191943.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003087.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003687.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003003.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150614.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003115.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003295.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003595.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003559.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003063.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003609.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_193116.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003615.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003077.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003277.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003575.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_195119.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003283.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003247.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003265.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003711.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003273.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003701.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003317.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150538.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003605.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003179.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_192316.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150324.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003573.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003607.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003707.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003689.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003119.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003523.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003349.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003093.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003715.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003569.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_193832.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003015.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150501.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003133.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003107.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003733.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003071.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003253.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003401.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003057.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003637.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003703.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003011.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003311.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/001587.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_194424.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003517.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003543.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150520.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003731.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003737.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003611.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003631.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003137.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003647.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003683.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003331.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003533.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003109.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150725.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003695.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003657.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003531.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003175.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003299.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003519.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003479.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150706.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003369.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003557.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003023.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003527.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003671.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003313.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003481.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003209.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003039.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003129.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003355.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003113.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003189.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003649.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003359.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_193640.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003165.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003635.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003211.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003221.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003549.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003155.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003217.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003485.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003089.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_194526.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003251.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003281.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003659.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003691.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003335.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003603.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003191.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003351.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003363.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003199.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003537.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003267.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003243.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003279.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003007.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003059.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003521.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003231.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003633.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003477.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003665.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003207.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003681.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003343.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003181.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003193.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003203.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150427.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003041.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003377.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003639.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003475.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003399.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003237.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003327.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003173.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_194855.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003561.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003249.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003215.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_193300.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003551.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003167.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003325.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003045.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003101.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003271.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003073.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003263.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003195.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_192208.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003709.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_194956.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003309.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003553.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003627.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150758.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003259.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_194643.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003135.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003303.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150627.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003567.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003081.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003013.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003301.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003225.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003599.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003033.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003235.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003223.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003321.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_193202.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_193548.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003721.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150553.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_194553.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003613.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_195415.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003021.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003371.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_191501.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003219.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/20190726_191406.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003593.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003739.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150803.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003489.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003565.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003139.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003651.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003693.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003623.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003503.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003123.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003291.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003617.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150841.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003653.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003663.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003285.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/001589.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003229.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003297.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003505.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003269.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003037.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003525.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003579.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003675.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003597.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150602.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003365.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/IMG_20190727_150541.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/label/003361.png\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003113.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_195415.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003331.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003321.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150614.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003479.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003081.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003509.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003691.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_191938.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003111.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003315.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003319.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003251.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003353.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003549.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003725.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003569.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003333.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003311.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_194718.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003129.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_194807.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003347.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003027.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003567.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003619.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003611.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_194553.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003253.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003233.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003127.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150747.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003475.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003087.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003727.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003363.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150735.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003199.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003151.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003133.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_192153.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003037.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003179.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003719.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150741.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003689.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003477.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003109.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003369.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/001593.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150329.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003329.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003071.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150713.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003141.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003211.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003563.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003499.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003057.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/001591.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003505.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003323.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003139.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003033.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003137.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003259.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150541.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003035.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003491.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003185.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003309.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150706.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_191943.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003077.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003241.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003697.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_191742.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003239.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003721.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003631.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003377.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003295.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003639.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003591.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003225.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003533.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003189.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003299.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003115.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003135.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003305.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_192606.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150627.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_193300.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003317.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003267.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003313.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003527.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_195216.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003681.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003173.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003243.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150803.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003677.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003067.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003223.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003343.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003693.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_194855.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003003.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003613.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003013.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003039.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003101.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003701.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003009.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150753.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003019.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003053.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003335.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150758.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003147.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003143.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_193640.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_194956.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003657.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003117.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150841.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003155.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_191501.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150602.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003557.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003577.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_192320.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003061.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_194856.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003257.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_192316.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003553.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003617.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003497.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003673.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003007.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003373.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_193548.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003641.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003643.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003519.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003683.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003551.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003625.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003595.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150538.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003531.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003075.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_194643.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150437.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003149.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150513.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150719.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003165.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003487.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003095.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/001587.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003565.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003161.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003635.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003045.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003107.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150427.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_191326.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003123.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003621.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003227.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003493.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003021.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003703.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003687.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003671.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003247.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003193.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003597.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003529.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_191406.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003209.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003269.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003359.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003051.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003605.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003523.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003069.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_193832.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_194819.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003503.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003581.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003025.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003157.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003297.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003249.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003285.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003649.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003207.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003623.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003181.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_193032.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003583.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003609.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150700.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_193644.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_195538.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003665.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003593.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003675.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003235.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003203.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003229.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003729.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003361.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150553.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003273.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003575.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003349.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003645.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003733.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003395.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003539.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003055.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003125.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003599.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003525.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003201.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003653.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150324.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150501.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150531.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003355.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003659.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003511.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_193116.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003041.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003093.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003277.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003661.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003589.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003481.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003177.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003607.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003255.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003739.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003171.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003301.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003485.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003221.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003215.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003183.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003265.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003327.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003119.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003063.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003231.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150525.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003555.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003669.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003495.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_195205.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003145.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003397.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003365.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_194422.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003099.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150520.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003283.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003337.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003291.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003103.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003287.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150443.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003263.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003191.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003091.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003587.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003351.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150725.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_193829.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003345.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003325.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003083.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003559.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003627.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003195.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003017.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003541.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003279.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003603.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003043.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003711.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003307.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003169.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003713.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/001651.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003293.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003399.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003175.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003647.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003059.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003023.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003655.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003489.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003015.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003163.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003705.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003047.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003513.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003031.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003573.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003561.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003521.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003371.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003261.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003073.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003187.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003275.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003049.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003271.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_195119.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_193204.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003715.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003571.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003517.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003029.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003159.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_193256.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003707.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003545.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003217.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003401.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003281.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003651.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003615.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003121.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003629.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003537.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_192208.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003079.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003205.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/001589.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003699.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003547.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003685.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003737.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003633.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_193202.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003339.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003105.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003011.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003303.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003543.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003483.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003585.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003375.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003723.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003219.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003709.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003717.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003663.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003097.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003085.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003357.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003579.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003237.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003637.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003341.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003131.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/001649.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_194647.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_193551.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003245.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150730.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/IMG_20190727_150808.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003065.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003695.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003501.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003535.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003679.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003667.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_194526.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/20190726_194424.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003731.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003153.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003197.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003289.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003167.JPG\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003735.jpg\n/kaggle/input/apple-dataset/ATLDSD/Gray spot/image/003089.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001669.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001537.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001493.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001791.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001427.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001781.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001849.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001207.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001869.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001091.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001081.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001123.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001251.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001245.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001079.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001813.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001225.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190726_193647.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001161.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001715.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001665.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001435.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001763.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001469.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001019.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001517.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001023.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001859.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001411.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001511.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001275.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001497.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/褐斑病IMG_20190726_190344.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190726_192821.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001279.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001529.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_165707.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001793.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001231.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001845.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001239.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001711.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001343.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_165313.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001481.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001475.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001015.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/褐斑病IMG_20190726_191215.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_165227.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001073.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001751.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001855.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001765.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_165034.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001521.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001235.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001803.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001857.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_170259.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001297.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001187.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001817.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001173.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001153.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001189.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001577.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001005.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001203.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001513.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001861.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001053.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001531.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001093.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001215.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001219.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_165110.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001157.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001491.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_165528.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001057.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001449.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001267.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001503.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001601.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001749.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_170532.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_165814.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_165721.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_164757.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001423.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/褐斑病IMG_20190726_191100.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001181.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001489.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001217.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_165330.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001597.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_165626.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001473.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001167.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190726_192719.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001119.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001061.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001075.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001843.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001779.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001209.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001095.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001825.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_170020.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001617.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/褐斑病IMG_20190726_191340.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001865.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_165025.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001011.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001441.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001021.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001229.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001255.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_164718.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_165858.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001821.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001545.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001729.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001527.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001673.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001835.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/褐斑病IMG_20190726_193906.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001213.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001063.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001459.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001829.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_164647.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001541.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001629.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001505.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001447.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/褐斑病IMG_20190726_193224.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001125.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001515.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190726_192637.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001643.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001709.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001519.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001797.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001099.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_165139.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001575.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001175.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001223.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001247.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001611.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_165759.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001811.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_165259.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001795.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001639.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001831.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001501.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001221.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_165250.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001237.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001867.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001289.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001171.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001179.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001641.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001723.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001323.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001785.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001455.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001087.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001263.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/褐斑病IMG_20190726_190315.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/褐斑病IMG_20190726_192226.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001145.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001653.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001027.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001819.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001333.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001233.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_164929.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001815.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001681.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001733.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001571.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001699.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001677.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001273.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001241.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001375.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001097.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001471.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001573.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001277.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001543.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001159.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001799.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001265.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001827.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001737.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001025.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001805.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_164743.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001467.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_165053.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001485.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_165554.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001783.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001331.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001847.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001839.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/褐斑病IMG_20190726_191634.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001443.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/IMG_20190727_165213.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/label/001687.png\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001229.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_165139.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001643.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001441.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001797.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001545.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001215.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001521.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001279.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001273.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001781.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001505.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190726_192719.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001231.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001081.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001123.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001161.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001825.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_170532.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001475.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001025.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001629.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001093.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001063.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001119.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001709.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001543.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001575.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_165250.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001529.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001447.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001869.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001485.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001641.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001711.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_165554.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001861.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001427.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001537.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001245.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001267.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001763.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001097.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001213.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001217.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001785.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001513.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001835.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001157.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001597.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_164743.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001481.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001783.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001175.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190726_192637.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001061.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001027.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001019.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001503.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001179.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001803.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_165528.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001005.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001601.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001459.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001237.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001795.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001517.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001223.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_164718.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001225.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_164929.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001265.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001669.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_165721.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001021.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/褐斑病IMG_20190726_192226.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001233.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001423.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001531.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001145.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001289.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001331.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001729.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001677.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001831.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001159.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001489.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/褐斑病IMG_20190726_190315.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001239.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001087.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_165110.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001075.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001811.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_165034.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001541.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001817.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001611.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001411.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001171.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001091.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001251.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001497.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001187.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_170020.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_165814.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001799.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001865.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001515.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001333.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001653.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001073.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001571.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_165313.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001733.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001827.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001737.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001435.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001501.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/褐斑病IMG_20190726_191634.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/褐斑病IMG_20190726_191340.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_165053.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_165025.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001167.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001855.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001791.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001829.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_165213.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001765.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001857.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/褐斑病IMG_20190726_191100.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001805.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001749.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001839.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001053.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190726_192821.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001821.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001125.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_170259.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001493.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_165858.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001819.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001491.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001469.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001203.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001173.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001153.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001443.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001859.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001573.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001813.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001219.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001011.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001221.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001665.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001867.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001843.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001079.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/褐斑病IMG_20190726_190344.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001015.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001779.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001577.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001699.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001527.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001467.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/褐斑病IMG_20190726_193224.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001323.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001681.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001715.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001673.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190726_193647.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001849.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001511.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001751.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001275.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001343.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001255.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001639.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001473.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001277.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001023.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_165330.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001723.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/褐斑病IMG_20190726_193906.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001189.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001181.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001793.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001241.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001095.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_164757.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_165759.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001263.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_165227.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001815.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_165626.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001207.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001455.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001519.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_165259.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001235.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001099.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001209.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001471.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/褐斑病IMG_20190726_191215.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001247.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001297.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001617.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_165707.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001057.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001687.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001449.JPG\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001845.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001847.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/IMG_20190727_164647.jpg\n/kaggle/input/apple-dataset/ATLDSD/Brown spot/image/001375.JPG\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"# =========================================================\n# Apple Leaf Image Reconstruction using Convolutional Autoencoder (CAE)\n# Dataset split: 70% Train, 15% Validation, 15% Test\n# =========================================================\nimport os\nos.environ[\"TF_CPP_MIN_LOG_LEVEL\"] = \"2\"\nos.environ[\"TF_ENABLE_ONEDNN_OPTS\"] = \"0\"\nos.environ[\"TF_DISABLE_PROFILER\"] = \"1\"\n\nimport cv2\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom tqdm import tqdm\nfrom sklearn.model_selection import train_test_split\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nimport pandas as pd\nimport time\nimport random\n\n# ============ Configuration ============\nBASE_DIR = \"/kaggle/input/apple-dataset/ATLDSD\"  # Change this to your dataset path\nIMG_SIZE = 224\nBATCH_SIZE = 32  # As specified in requirements\nEPOCHS = 500     # As specified in requirements\nPATIENCE = 20    # Early stopping patience as specified\nSEED = 2025\n\nOUTDIR = \"cae_outputs\"\nos.makedirs(OUTDIR, exist_ok=True)\n\n# Set random seeds for reproducibility\nrandom.seed(SEED)\nnp.random.seed(SEED)\ntf.random.set_seed(SEED)\n\n# ============ GPU Setup ============\ndef set_gpu_growth():\n    try:\n        gpus = tf.config.list_physical_devices('GPU')\n        if gpus:\n            for g in gpus:\n                tf.config.experimental.set_memory_growth(g, True)\n            print(f\"GPU found: {len(gpus)}; memory growth enabled\")\n        else:\n            print(\"No GPU detected; running on CPU\")\n    except Exception as e:\n        print(\"GPU mem-growth not set:\", e)\n\nset_gpu_growth()\n\n# ============ Custom NRMSE Loss Function ============\ndef nrmse_loss(y_true, y_pred):\n    \"\"\"\n    Normalized Root Mean Square Error (NRMSE) loss function\n    NRMSE = RMSE / (max(y_true) - min(y_true))\n    \"\"\"\n    mse = tf.reduce_mean(tf.square(y_true - y_pred))\n    rmse = tf.sqrt(mse)\n    \n    # Calculate normalization factor (range of true values)\n    y_max = tf.reduce_max(y_true)\n    y_min = tf.reduce_min(y_true)\n    normalization_factor = y_max - y_min + 1e-8  # Add small epsilon to avoid division by zero\n    \n    nrmse = rmse / normalization_factor\n    return nrmse\n\n# ============ Dataset Loading ============\nclass AppleLeafDataset:\n    IMG_EXTS = (\".png\", \".jpg\", \".jpeg\", \".bmp\", \".tif\", \".tiff\")\n    \n    def __init__(self, base_dir, image_size=224):\n        self.base_dir = base_dir\n        self.image_size = image_size\n        self.image_paths = self._discover_images()\n        print(f\"Total images found: {len(self.image_paths)}\")\n\n    def _list_images(self, d):\n        acc = []\n        for r, _, fs in os.walk(d):\n            for f in fs:\n                if f.lower().endswith(self.IMG_EXTS):\n                    acc.append(os.path.join(r, f))\n        return acc\n\n    def _discover_images(self):\n        \"\"\"Discover all images in the dataset directory\"\"\"\n        imgs = []\n        if not os.path.exists(self.base_dir):\n            raise FileNotFoundError(f\"Base dir not found: {self.base_dir}\")\n        \n        for cls_folder in sorted(os.listdir(self.base_dir)):\n            cpath = os.path.join(self.base_dir, cls_folder)\n            if not os.path.isdir(cpath):\n                continue\n            \n            # Look for image folder\n            img_dir = os.path.join(cpath, \"image\")\n            if os.path.exists(img_dir):\n                img_files = self._list_images(img_dir)\n                imgs.extend(img_files)\n                print(f\"{cls_folder:20} | images: {len(img_files):4d}\")\n        \n        return imgs\n\n    def load(self):\n        \"\"\"Load and preprocess all images\"\"\"\n        X = []\n        valid_paths = []\n        \n        for img_path in tqdm(self.image_paths, desc=\"Loading images\"):\n            img = cv2.imread(img_path, cv2.IMREAD_COLOR)\n            if img is None:\n                continue\n                \n            # Convert BGR to RGB\n            img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n            \n            # Resize image\n            img = cv2.resize(img, (self.image_size, self.image_size), \n                           interpolation=cv2.INTER_AREA)\n            \n            # Normalize to [0, 1]\n            img = img.astype(np.float32) / 255.0\n            \n            X.append(img)\n            valid_paths.append(img_path)\n        \n        return np.array(X, dtype=np.float32), valid_paths\n\n# ============ CAE Model Architecture ============\ndef build_cae_model(input_shape=(224, 224, 3)):\n    \"\"\"\n    Build Convolutional Autoencoder model with ReLU activation\n    \"\"\"\n    inputs = keras.Input(shape=input_shape)\n    \n    # ============ Encoder ============\n    # Block 1\n    x = layers.Conv2D(64, (3, 3), activation='relu', padding='same')(inputs)\n    x = layers.Conv2D(64, (3, 3), activation='relu', padding='same')(x)\n    x = layers.MaxPooling2D((2, 2), padding='same')(x)  # 112x112\n    \n    # Block 2\n    x = layers.Conv2D(128, (3, 3), activation='relu', padding='same')(x)\n    x = layers.Conv2D(128, (3, 3), activation='relu', padding='same')(x)\n    x = layers.MaxPooling2D((2, 2), padding='same')(x)  # 56x56\n    \n    # Block 3\n    x = layers.Conv2D(256, (3, 3), activation='relu', padding='same')(x)\n    x = layers.Conv2D(256, (3, 3), activation='relu', padding='same')(x)\n    x = layers.MaxPooling2D((2, 2), padding='same')(x)  # 28x28\n    \n    # Block 4 (Bottleneck)\n    x = layers.Conv2D(512, (3, 3), activation='relu', padding='same')(x)\n    encoded = layers.Conv2D(512, (3, 3), activation='relu', padding='same')(x)  # 28x28x512\n    \n    # ============ Decoder ============\n    # Block 5\n    x = layers.Conv2D(512, (3, 3), activation='relu', padding='same')(encoded)\n    x = layers.Conv2D(256, (3, 3), activation='relu', padding='same')(x)\n    x = layers.UpSampling2D((2, 2))(x)  # 56x56\n    \n    # Block 6\n    x = layers.Conv2D(256, (3, 3), activation='relu', padding='same')(x)\n    x = layers.Conv2D(128, (3, 3), activation='relu', padding='same')(x)\n    x = layers.UpSampling2D((2, 2))(x)  # 112x112\n    \n    # Block 7\n    x = layers.Conv2D(128, (3, 3), activation='relu', padding='same')(x)\n    x = layers.Conv2D(64, (3, 3), activation='relu', padding='same')(x)\n    x = layers.UpSampling2D((2, 2))(x)  # 224x224\n    \n    # Block 8 (Output)\n    x = layers.Conv2D(64, (3, 3), activation='relu', padding='same')(x)\n    x = layers.Conv2D(32, (3, 3), activation='relu', padding='same')(x)\n    decoded = layers.Conv2D(3, (3, 3), activation='sigmoid', padding='same')(x)  # 224x224x3\n    \n    # Create model\n    autoencoder = keras.Model(inputs, decoded, name='ConvAutoencoder')\n    return autoencoder\n\n# ============ Data Preparation and Splitting ============\ndef prepare_data():\n    \"\"\"Load and split data into 70:15:15 ratio\"\"\"\n    print(\"Loading dataset...\")\n    dataset = AppleLeafDataset(BASE_DIR, IMG_SIZE)\n    X, image_paths = dataset.load()\n    \n    print(f\"Total samples loaded: {len(X)}\")\n    \n    # First split: 70% train, 30% temp\n    X_train, X_temp, paths_train, paths_temp = train_test_split(\n        X, image_paths, test_size=0.30, random_state=SEED, shuffle=True\n    )\n    \n    # Second split: 15% validation, 15% test from the 30% temp\n    X_val, X_test, paths_val, paths_test = train_test_split(\n        X_temp, paths_temp, test_size=0.50, random_state=SEED, shuffle=True\n    )\n    \n    print(f\"Data split completed:\")\n    print(f\"  Training samples: {len(X_train)} ({len(X_train)/len(X)*100:.1f}%)\")\n    print(f\"  Validation samples: {len(X_val)} ({len(X_val)/len(X)*100:.1f}%)\")\n    print(f\"  Test samples: {len(X_test)} ({len(X_test)/len(X)*100:.1f}%)\")\n    \n    # Save split information\n    split_info = {\n        'total_samples': len(X),\n        'train_samples': len(X_train),\n        'val_samples': len(X_val),\n        'test_samples': len(X_test),\n        'train_ratio': len(X_train)/len(X)*100,\n        'val_ratio': len(X_val)/len(X)*100,\n        'test_ratio': len(X_test)/len(X)*100\n    }\n    \n    split_df = pd.DataFrame([split_info])\n    split_df.to_csv(os.path.join(OUTDIR, 'data_split_info.csv'), index=False)\n    \n    return X_train, X_val, X_test, paths_train, paths_val, paths_test\n\n# ============ Training Function ============\ndef train_cae_model(X_train, X_val):\n    \"\"\"Train the CAE model with specified parameters\"\"\"\n    print(\"\\n🚀 Building and training CAE model...\")\n    \n    # Build model\n    model = build_cae_model((IMG_SIZE, IMG_SIZE, 3))\n    \n    # Print model summary\n    model.summary()\n    \n    # Compile model with Adam optimizer and NRMSE loss\n    model.compile(\n        optimizer=keras.optimizers.Adam(learning_rate=0.001),\n        loss=nrmse_loss,\n        metrics=['mse', 'mae']\n    )\n    \n    # Define callbacks\n    callbacks = [\n        keras.callbacks.EarlyStopping(\n            monitor='val_loss',\n            patience=PATIENCE,\n            restore_best_weights=True,\n            verbose=1\n        ),\n        keras.callbacks.ModelCheckpoint(\n            os.path.join(OUTDIR, 'cae_best_weights.h5'),\n            monitor='val_loss',\n            save_best_only=True,\n            save_weights_only=False,\n            verbose=1\n        ),\n        keras.callbacks.ReduceLROnPlateau(\n            monitor='val_loss',\n            factor=0.5,\n            patience=10,\n            min_lr=1e-7,\n            verbose=1\n        ),\n        keras.callbacks.CSVLogger(\n            os.path.join(OUTDIR, 'training_log.csv')\n        )\n    ]\n    \n    print(f\"Starting training with:\")\n    print(f\"  Batch size: {BATCH_SIZE}\")\n    print(f\"  Epochs: {EPOCHS}\")\n    print(f\"  Early stopping patience: {PATIENCE}\")\n    print(f\"  Optimizer: Adam\")\n    print(f\"  Loss function: NRMSE\")\n    \n    # Train the model\n    start_time = time.time()\n    history = model.fit(\n        X_train, X_train,  # Autoencoder: input = target\n        validation_data=(X_val, X_val),\n        batch_size=BATCH_SIZE,\n        epochs=EPOCHS,\n        callbacks=callbacks,\n        verbose=1,\n        shuffle=True\n    )\n    \n    training_time = time.time() - start_time\n    print(f\"\\nTraining completed in {training_time/60:.2f} minutes\")\n    \n    return model, history\n\n# ============ Visualization Functions ============\ndef plot_training_history(history):\n    \"\"\"Plot training history with loss and accuracy metrics\"\"\"\n    fig, axes = plt.subplots(2, 2, figsize=(15, 10))\n    \n    # Plot training and validation loss\n    axes[0, 0].plot(history.history['loss'], label='Training Loss (NRMSE)', color='blue')\n    axes[0, 0].plot(history.history['val_loss'], label='Validation Loss (NRMSE)', color='red')\n    axes[0, 0].set_title('Model Loss (NRMSE)')\n    axes[0, 0].set_xlabel('Epoch')\n    axes[0, 0].set_ylabel('NRMSE Loss')\n    axes[0, 0].legend()\n    axes[0, 0].grid(True)\n    \n    # Plot MSE\n    axes[0, 1].plot(history.history['mse'], label='Training MSE', color='blue')\n    axes[0, 1].plot(history.history['val_mse'], label='Validation MSE', color='red')\n    axes[0, 1].set_title('Mean Squared Error')\n    axes[0, 1].set_xlabel('Epoch')\n    axes[0, 1].set_ylabel('MSE')\n    axes[0, 1].legend()\n    axes[0, 1].grid(True)\n    \n    # Plot MAE\n    axes[1, 0].plot(history.history['mae'], label='Training MAE', color='blue')\n    axes[1, 0].plot(history.history['val_mae'], label='Validation MAE', color='red')\n    axes[1, 0].set_title('Mean Absolute Error')\n    axes[1, 0].set_xlabel('Epoch')\n    axes[1, 0].set_ylabel('MAE')\n    axes[1, 0].legend()\n    axes[1, 0].grid(True)\n    \n    # Plot learning rate (if available)\n    if 'lr' in history.history:\n        axes[1, 1].plot(history.history['lr'], label='Learning Rate', color='green')\n        axes[1, 1].set_title('Learning Rate Schedule')\n        axes[1, 1].set_xlabel('Epoch')\n        axes[1, 1].set_ylabel('Learning Rate')\n        axes[1, 1].set_yscale('log')\n        axes[1, 1].legend()\n        axes[1, 1].grid(True)\n    else:\n        axes[1, 1].axis('off')\n    \n    plt.tight_layout()\n    save_path = os.path.join(OUTDIR, 'training_history.png')\n    plt.savefig(save_path, dpi=300, bbox_inches='tight')\n    plt.show()\n    print(f\"Training history saved: {save_path}\")\n\ndef visualize_reconstruction_results(model, X_test, n_samples=8):\n    \"\"\"Visualize CAE reconstruction results vs ground truth\"\"\"\n    # Select random samples\n    indices = np.random.choice(len(X_test), n_samples, replace=False)\n    \n    # Predict reconstructions\n    reconstructions = model.predict(X_test[indices], verbose=0)\n    \n    # Create visualization\n    fig, axes = plt.subplots(3, n_samples, figsize=(2*n_samples, 6))\n    \n    for i in range(n_samples):\n        original = X_test[indices[i]]\n        reconstructed = reconstructions[i]\n        \n        # Calculate reconstruction error\n        mse_error = np.mean((original - reconstructed) ** 2)\n        \n        # Original image\n        axes[0, i].imshow(original)\n        axes[0, i].set_title(f'Original {i+1}')\n        axes[0, i].axis('off')\n        \n        # Reconstructed image\n        axes[1, i].imshow(np.clip(reconstructed, 0, 1))\n        axes[1, i].set_title(f'Reconstructed {i+1}')\n        axes[1, i].axis('off')\n        \n        # Difference/Error map\n        diff = np.abs(original - reconstructed)\n        axes[2, i].imshow(diff, cmap='hot')\n        axes[2, i].set_title(f'Error (MSE: {mse_error:.4f})')\n        axes[2, i].axis('off')\n    \n    plt.tight_layout()\n    save_path = os.path.join(OUTDIR, 'reconstruction_comparison.png')\n    plt.savefig(save_path, dpi=300, bbox_inches='tight')\n    plt.show()\n    print(f\"Reconstruction comparison saved: {save_path}\")\n\ndef evaluate_model_performance(model, X_test):\n    \"\"\"Evaluate model performance on test set\"\"\"\n    print(\"\\n📊 Evaluating model performance on test set...\")\n    \n    # Predict on test set\n    reconstructions = model.predict(X_test, verbose=1)\n    \n    # Calculate metrics\n    mse = np.mean((X_test - reconstructions) ** 2)\n    mae = np.mean(np.abs(X_test - reconstructions))\n    \n    # Calculate NRMSE\n    rmse = np.sqrt(mse)\n    data_range = np.max(X_test) - np.min(X_test)\n    nrmse = rmse / data_range\n    \n    # Calculate PSNR\n    psnr = 20 * np.log10(1.0 / rmse)\n    \n    print(f\"Test Set Performance:\")\n    print(f\"  MSE: {mse:.6f}\")\n    print(f\"  MAE: {mae:.6f}\")\n    print(f\"  RMSE: {rmse:.6f}\")\n    print(f\"  NRMSE: {nrmse:.6f}\")\n    print(f\"  PSNR: {psnr:.2f} dB\")\n    \n    # Save metrics\n    metrics = {\n        'MSE': mse,\n        'MAE': mae,\n        'RMSE': rmse,\n        'NRMSE': nrmse,\n        'PSNR': psnr\n    }\n    \n    metrics_df = pd.DataFrame([metrics])\n    metrics_df.to_csv(os.path.join(OUTDIR, 'test_performance.csv'), index=False)\n    \n    return metrics\n\n# ============ Main Function ============\ndef main():\n    \"\"\"Main execution function\"\"\"\n    print(\"=\"*60)\n    print(\"Apple Leaf Image Reconstruction using CAE\")\n    print(\"=\"*60)\n    \n    start_time = time.time()\n    \n    try:\n        # Prepare data\n        X_train, X_val, X_test, paths_train, paths_val, paths_test = prepare_data()\n        \n        # Train model\n        model, history = train_cae_model(X_train, X_val)\n        \n        # Plot training history\n        plot_training_history(history)\n        \n        # Save training history\n        history_df = pd.DataFrame(history.history)\n        history_df.to_csv(os.path.join(OUTDIR, 'training_history.csv'), index=False)\n        \n        # Load best model weights\n        best_model_path = os.path.join(OUTDIR, 'cae_best_weights.h5')\n        if os.path.exists(best_model_path):\n            model = keras.models.load_model(best_model_path, custom_objects={'nrmse_loss': nrmse_loss})\n            print(f\"Loaded best model weights from: {best_model_path}\")\n        \n        # Visualize reconstruction results\n        visualize_reconstruction_results(model, X_test, n_samples=8)\n        \n        # Evaluate model performance\n        metrics = evaluate_model_performance(model, X_test)\n        \n        # Save final model\n        final_model_path = os.path.join(OUTDIR, 'cae_final_model.h5')\n        model.save(final_model_path)\n        print(f\"Final model saved: {final_model_path}\")\n        \n        total_time = time.time() - start_time\n        print(f\"\\n✅ Pipeline completed successfully in {total_time/60:.2f} minutes\")\n        print(f\"All outputs saved in: {OUTDIR}\")\n        \n    except Exception as e:\n        print(f\"❌ Error occurred: {str(e)}\")\n        import traceback\n        traceback.print_exc()\n\nif __name__ == \"__main__\":\n    main()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-04T12:59:58.186308Z","iopub.execute_input":"2025-09-04T12:59:58.186778Z","iopub.status.idle":"2025-09-04T15:20:04.634865Z","shell.execute_reply.started":"2025-09-04T12:59:58.186753Z","shell.execute_reply":"2025-09-04T15:20:04.634183Z"}},"outputs":[{"name":"stderr","text":"2025-09-04 13:00:02.122536: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\nWARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nE0000 00:00:1756990802.470007      36 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\nE0000 00:00:1756990802.565319      36 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"},{"name":"stdout","text":"GPU found: 2; memory growth enabled\n============================================================\nApple Leaf Image Reconstruction using CAE\n============================================================\nLoading dataset...\nAlternaria leaf spot | images:  278\nBrown spot           | images:  215\nGray spot            | images:  395\nHealthy leaf         | images:  409\nRust                 | images:  344\nTotal images found: 1641\n","output_type":"stream"},{"name":"stderr","text":"Loading images: 100%|██████████| 1641/1641 [00:13<00:00, 118.74it/s]\n","output_type":"stream"},{"name":"stdout","text":"Total samples loaded: 1641\nData split completed:\n  Training samples: 1148 (70.0%)\n  Validation samples: 246 (15.0%)\n  Test samples: 247 (15.1%)\n\n🚀 Building and training CAE model...\n","output_type":"stream"},{"name":"stderr","text":"I0000 00:00:1756990833.642165      36 gpu_device.cc:2022] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 13942 MB memory:  -> device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5\nI0000 00:00:1756990833.642761      36 gpu_device.cc:2022] Created device /job:localhost/replica:0/task:0/device:GPU:1 with 13942 MB memory:  -> device: 1, name: Tesla T4, pci bus id: 0000:00:05.0, compute capability: 7.5\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"ConvAutoencoder\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"ConvAutoencoder\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer (\u001b[38;5;33mInputLayer\u001b[0m)        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m3\u001b[0m)    │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d (\u001b[38;5;33mConv2D\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m64\u001b[0m)   │         \u001b[38;5;34m1,792\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_1 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m64\u001b[0m)   │        \u001b[38;5;34m36,928\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d (\u001b[38;5;33mMaxPooling2D\u001b[0m)    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m64\u001b[0m)   │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_2 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m128\u001b[0m)  │        \u001b[38;5;34m73,856\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_3 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m128\u001b[0m)  │       \u001b[38;5;34m147,584\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_1 (\u001b[38;5;33mMaxPooling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m128\u001b[0m)    │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_4 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m256\u001b[0m)    │       \u001b[38;5;34m295,168\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_5 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m256\u001b[0m)    │       \u001b[38;5;34m590,080\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_2 (\u001b[38;5;33mMaxPooling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m256\u001b[0m)    │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_6 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m512\u001b[0m)    │     \u001b[38;5;34m1,180,160\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_7 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m512\u001b[0m)    │     \u001b[38;5;34m2,359,808\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_8 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m512\u001b[0m)    │     \u001b[38;5;34m2,359,808\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_9 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m256\u001b[0m)    │     \u001b[38;5;34m1,179,904\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ up_sampling2d (\u001b[38;5;33mUpSampling2D\u001b[0m)    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m256\u001b[0m)    │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_10 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m256\u001b[0m)    │       \u001b[38;5;34m590,080\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_11 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m56\u001b[0m, \u001b[38;5;34m128\u001b[0m)    │       \u001b[38;5;34m295,040\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ up_sampling2d_1 (\u001b[38;5;33mUpSampling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m128\u001b[0m)  │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_12 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m128\u001b[0m)  │       \u001b[38;5;34m147,584\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_13 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m112\u001b[0m, \u001b[38;5;34m64\u001b[0m)   │        \u001b[38;5;34m73,792\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ up_sampling2d_2 (\u001b[38;5;33mUpSampling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m64\u001b[0m)   │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_14 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m64\u001b[0m)   │        \u001b[38;5;34m36,928\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_15 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m32\u001b[0m)   │        \u001b[38;5;34m18,464\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_16 (\u001b[38;5;33mConv2D\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m224\u001b[0m, \u001b[38;5;34m3\u001b[0m)    │           \u001b[38;5;34m867\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ input_layer (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">3</span>)    │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)   │         <span style=\"color: #00af00; text-decoration-color: #00af00\">1,792</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)   │        <span style=\"color: #00af00; text-decoration-color: #00af00\">36,928</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)   │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)  │        <span style=\"color: #00af00; text-decoration-color: #00af00\">73,856</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)  │       <span style=\"color: #00af00; text-decoration-color: #00af00\">147,584</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)    │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_4 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)    │       <span style=\"color: #00af00; text-decoration-color: #00af00\">295,168</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)    │       <span style=\"color: #00af00; text-decoration-color: #00af00\">590,080</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)    │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_6 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)    │     <span style=\"color: #00af00; text-decoration-color: #00af00\">1,180,160</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_7 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)    │     <span style=\"color: #00af00; text-decoration-color: #00af00\">2,359,808</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_8 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)    │     <span style=\"color: #00af00; text-decoration-color: #00af00\">2,359,808</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_9 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)    │     <span style=\"color: #00af00; text-decoration-color: #00af00\">1,179,904</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ up_sampling2d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">UpSampling2D</span>)    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)    │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_10 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)    │       <span style=\"color: #00af00; text-decoration-color: #00af00\">590,080</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_11 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">56</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)    │       <span style=\"color: #00af00; text-decoration-color: #00af00\">295,040</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ up_sampling2d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">UpSampling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)  │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_12 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)  │       <span style=\"color: #00af00; text-decoration-color: #00af00\">147,584</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_13 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">112</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)   │        <span style=\"color: #00af00; text-decoration-color: #00af00\">73,792</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ up_sampling2d_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">UpSampling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)   │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_14 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)   │        <span style=\"color: #00af00; text-decoration-color: #00af00\">36,928</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_15 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)   │        <span style=\"color: #00af00; text-decoration-color: #00af00\">18,464</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_16 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">224</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">3</span>)    │           <span style=\"color: #00af00; text-decoration-color: #00af00\">867</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m9,387,843\u001b[0m (35.81 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">9,387,843</span> (35.81 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m9,387,843\u001b[0m (35.81 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">9,387,843</span> (35.81 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}},{"name":"stdout","text":"Starting training with:\n  Batch size: 32\n  Epochs: 500\n  Early stopping patience: 20\n  Optimizer: Adam\n  Loss function: NRMSE\nEpoch 1/500\n","output_type":"stream"},{"name":"stderr","text":"WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nI0000 00:00:1756990846.159562      99 service.cc:148] XLA service 0x46e58680 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:\nI0000 00:00:1756990846.161121      99 service.cc:156]   StreamExecutor device (0): Tesla T4, Compute Capability 7.5\nI0000 00:00:1756990846.161144      99 service.cc:156]   StreamExecutor device (1): Tesla T4, Compute Capability 7.5\nI0000 00:00:1756990846.975673      99 cuda_dnn.cc:529] Loaded cuDNN version 90300\n2025-09-04 13:01:27.175829: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng0{} for conv (f32[32,64,3,3]{3,2,1,0}, u8[0]{0}) custom-call(f32[32,64,224,224]{3,2,1,0}, f32[32,32,224,224]{3,2,1,0}), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"cudnn_conv_backend_config\":{\"activation_mode\":\"kNone\",\"conv_result_scale\":1,\"leakyrelu_alpha\":0,\"side_input_scale\":0},\"force_earliest_schedule\":false,\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[]} is taking a while...\n2025-09-04 13:01:27.622202: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.446469827s\nTrying algorithm eng0{} for conv (f32[32,64,3,3]{3,2,1,0}, u8[0]{0}) custom-call(f32[32,64,224,224]{3,2,1,0}, f32[32,32,224,224]{3,2,1,0}), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"cudnn_conv_backend_config\":{\"activation_mode\":\"kNone\",\"conv_result_scale\":1,\"leakyrelu_alpha\":0,\"side_input_scale\":0},\"force_earliest_schedule\":false,\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[]} is taking a while...\nI0000 00:00:1756990891.275124      99 device_compiler.h:188] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m35/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 665ms/step - loss: 0.2858 - mae: 0.2456 - mse: 0.0863","output_type":"stream"},{"name":"stderr","text":"2025-09-04 13:02:36.853418: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng0{} for conv (f32[32,64,3,3]{3,2,1,0}, u8[0]{0}) custom-call(f32[28,64,224,224]{3,2,1,0}, f32[28,32,224,224]{3,2,1,0}), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"cudnn_conv_backend_config\":{\"activation_mode\":\"kNone\",\"conv_result_scale\":1,\"leakyrelu_alpha\":0,\"side_input_scale\":0},\"force_earliest_schedule\":false,\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[]} is taking a while...\n2025-09-04 13:02:37.439475: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.586162635s\nTrying algorithm eng0{} for conv (f32[32,64,3,3]{3,2,1,0}, u8[0]{0}) custom-call(f32[28,64,224,224]{3,2,1,0}, f32[28,32,224,224]{3,2,1,0}), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_oi01->bf01, custom_call_target=\"__cudnn$convBackwardFilter\", backend_config={\"cudnn_conv_backend_config\":{\"activation_mode\":\"kNone\",\"conv_result_scale\":1,\"leakyrelu_alpha\":0,\"side_input_scale\":0},\"force_earliest_schedule\":false,\"operation_queue_id\":\"0\",\"wait_on_operation_queues\":[]} is taking a while...\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2s/step - loss: 0.2855 - mae: 0.2453 - mse: 0.0861   \nEpoch 1: val_loss improved from inf to 0.27155, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m158s\u001b[0m 3s/step - loss: 0.2852 - mae: 0.2450 - mse: 0.0858 - val_loss: 0.2715 - val_mae: 0.2314 - val_mse: 0.0738 - learning_rate: 0.0010\nEpoch 2/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 702ms/step - loss: 0.2449 - mae: 0.2041 - mse: 0.0612\nEpoch 2: val_loss improved from 0.27155 to 0.16167, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 776ms/step - loss: 0.2442 - mae: 0.2033 - mse: 0.0608 - val_loss: 0.1617 - val_mae: 0.1307 - val_mse: 0.0261 - learning_rate: 0.0010\nEpoch 3/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 702ms/step - loss: 0.1286 - mae: 0.0973 - mse: 0.0169\nEpoch 3: val_loss improved from 0.16167 to 0.10742, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 768ms/step - loss: 0.1282 - mae: 0.0970 - mse: 0.0168 - val_loss: 0.1074 - val_mae: 0.0811 - val_mse: 0.0115 - learning_rate: 0.0010\nEpoch 4/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0995 - mae: 0.0713 - mse: 0.0100\nEpoch 4: val_loss improved from 0.10742 to 0.09165, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 774ms/step - loss: 0.0994 - mae: 0.0712 - mse: 0.0100 - val_loss: 0.0916 - val_mae: 0.0658 - val_mse: 0.0084 - learning_rate: 0.0010\nEpoch 5/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 705ms/step - loss: 0.0888 - mae: 0.0624 - mse: 0.0079\nEpoch 5: val_loss improved from 0.09165 to 0.08046, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 771ms/step - loss: 0.0887 - mae: 0.0624 - mse: 0.0079 - val_loss: 0.0805 - val_mae: 0.0563 - val_mse: 0.0065 - learning_rate: 0.0010\nEpoch 6/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 705ms/step - loss: 0.0821 - mae: 0.0572 - mse: 0.0068\nEpoch 6: val_loss did not improve from 0.08046\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 760ms/step - loss: 0.0821 - mae: 0.0571 - mse: 0.0068 - val_loss: 0.0876 - val_mae: 0.0635 - val_mse: 0.0077 - learning_rate: 0.0010\nEpoch 7/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 705ms/step - loss: 0.0811 - mae: 0.0569 - mse: 0.0066\nEpoch 7: val_loss did not improve from 0.08046\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 761ms/step - loss: 0.0810 - mae: 0.0569 - mse: 0.0066 - val_loss: 0.0809 - val_mae: 0.0583 - val_mse: 0.0066 - learning_rate: 0.0010\nEpoch 8/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0804 - mae: 0.0568 - mse: 0.0065\nEpoch 8: val_loss improved from 0.08046 to 0.07395, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 771ms/step - loss: 0.0804 - mae: 0.0567 - mse: 0.0065 - val_loss: 0.0740 - val_mae: 0.0509 - val_mse: 0.0055 - learning_rate: 0.0010\nEpoch 9/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0767 - mae: 0.0535 - mse: 0.0059\nEpoch 9: val_loss improved from 0.07395 to 0.07360, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 771ms/step - loss: 0.0767 - mae: 0.0534 - mse: 0.0059 - val_loss: 0.0736 - val_mae: 0.0507 - val_mse: 0.0054 - learning_rate: 0.0010\nEpoch 10/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0752 - mae: 0.0522 - mse: 0.0057\nEpoch 10: val_loss improved from 0.07360 to 0.07246, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 772ms/step - loss: 0.0752 - mae: 0.0522 - mse: 0.0057 - val_loss: 0.0725 - val_mae: 0.0501 - val_mse: 0.0053 - learning_rate: 0.0010\nEpoch 11/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0744 - mae: 0.0520 - mse: 0.0056\nEpoch 11: val_loss did not improve from 0.07246\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0744 - mae: 0.0520 - mse: 0.0055 - val_loss: 0.0922 - val_mae: 0.0702 - val_mse: 0.0085 - learning_rate: 0.0010\nEpoch 12/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0951 - mae: 0.0711 - mse: 0.0091\nEpoch 12: val_loss did not improve from 0.07246\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0949 - mae: 0.0709 - mse: 0.0091 - val_loss: 0.0740 - val_mae: 0.0514 - val_mse: 0.0055 - learning_rate: 0.0010\nEpoch 13/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0749 - mae: 0.0519 - mse: 0.0056\nEpoch 13: val_loss improved from 0.07246 to 0.07140, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 772ms/step - loss: 0.0749 - mae: 0.0519 - mse: 0.0056 - val_loss: 0.0714 - val_mae: 0.0489 - val_mse: 0.0051 - learning_rate: 0.0010\nEpoch 14/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0722 - mae: 0.0496 - mse: 0.0052\nEpoch 14: val_loss improved from 0.07140 to 0.07080, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0722 - mae: 0.0496 - mse: 0.0052 - val_loss: 0.0708 - val_mae: 0.0487 - val_mse: 0.0050 - learning_rate: 0.0010\nEpoch 15/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0709 - mae: 0.0486 - mse: 0.0050\nEpoch 15: val_loss improved from 0.07080 to 0.06854, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0709 - mae: 0.0485 - mse: 0.0050 - val_loss: 0.0685 - val_mae: 0.0463 - val_mse: 0.0047 - learning_rate: 0.0010\nEpoch 16/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0700 - mae: 0.0481 - mse: 0.0049\nEpoch 16: val_loss improved from 0.06854 to 0.06809, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 772ms/step - loss: 0.0700 - mae: 0.0481 - mse: 0.0049 - val_loss: 0.0681 - val_mae: 0.0471 - val_mse: 0.0047 - learning_rate: 0.0010\nEpoch 17/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0691 - mae: 0.0477 - mse: 0.0048\nEpoch 17: val_loss did not improve from 0.06809\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0692 - mae: 0.0477 - mse: 0.0048 - val_loss: 0.0768 - val_mae: 0.0555 - val_mse: 0.0059 - learning_rate: 0.0010\nEpoch 18/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0778 - mae: 0.0560 - mse: 0.0061\nEpoch 18: val_loss did not improve from 0.06809\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 761ms/step - loss: 0.0777 - mae: 0.0559 - mse: 0.0061 - val_loss: 0.0684 - val_mae: 0.0466 - val_mse: 0.0047 - learning_rate: 0.0010\nEpoch 19/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 705ms/step - loss: 0.0704 - mae: 0.0487 - mse: 0.0050\nEpoch 19: val_loss improved from 0.06809 to 0.06801, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 771ms/step - loss: 0.0704 - mae: 0.0487 - mse: 0.0050 - val_loss: 0.0680 - val_mae: 0.0467 - val_mse: 0.0046 - learning_rate: 0.0010\nEpoch 20/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0682 - mae: 0.0469 - mse: 0.0047\nEpoch 20: val_loss improved from 0.06801 to 0.06566, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 771ms/step - loss: 0.0682 - mae: 0.0469 - mse: 0.0047 - val_loss: 0.0657 - val_mae: 0.0444 - val_mse: 0.0043 - learning_rate: 0.0010\nEpoch 21/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0674 - mae: 0.0471 - mse: 0.0046\nEpoch 21: val_loss did not improve from 0.06566\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 761ms/step - loss: 0.0674 - mae: 0.0471 - mse: 0.0046 - val_loss: 0.0737 - val_mae: 0.0523 - val_mse: 0.0054 - learning_rate: 0.0010\nEpoch 22/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0727 - mae: 0.0509 - mse: 0.0053\nEpoch 22: val_loss did not improve from 0.06566\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 761ms/step - loss: 0.0727 - mae: 0.0509 - mse: 0.0053 - val_loss: 0.0677 - val_mae: 0.0464 - val_mse: 0.0046 - learning_rate: 0.0010\nEpoch 23/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0686 - mae: 0.0473 - mse: 0.0047\nEpoch 23: val_loss did not improve from 0.06566\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0686 - mae: 0.0473 - mse: 0.0047 - val_loss: 0.0663 - val_mae: 0.0452 - val_mse: 0.0044 - learning_rate: 0.0010\nEpoch 24/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0673 - mae: 0.0462 - mse: 0.0046\nEpoch 24: val_loss did not improve from 0.06566\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0673 - mae: 0.0462 - mse: 0.0046 - val_loss: 0.0667 - val_mae: 0.0462 - val_mse: 0.0045 - learning_rate: 0.0010\nEpoch 25/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0685 - mae: 0.0480 - mse: 0.0047\nEpoch 25: val_loss improved from 0.06566 to 0.06146, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 771ms/step - loss: 0.0685 - mae: 0.0480 - mse: 0.0047 - val_loss: 0.0615 - val_mae: 0.0432 - val_mse: 0.0038 - learning_rate: 0.0010\nEpoch 26/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0718 - mae: 0.0513 - mse: 0.0052\nEpoch 26: val_loss did not improve from 0.06146\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0719 - mae: 0.0514 - mse: 0.0052 - val_loss: 0.0691 - val_mae: 0.0478 - val_mse: 0.0048 - learning_rate: 0.0010\nEpoch 27/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0700 - mae: 0.0494 - mse: 0.0049\nEpoch 27: val_loss did not improve from 0.06146\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0700 - mae: 0.0494 - mse: 0.0049 - val_loss: 0.0663 - val_mae: 0.0456 - val_mse: 0.0044 - learning_rate: 0.0010\nEpoch 28/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0667 - mae: 0.0462 - mse: 0.0045\nEpoch 28: val_loss did not improve from 0.06146\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0667 - mae: 0.0462 - mse: 0.0045 - val_loss: 0.0952 - val_mae: 0.0710 - val_mse: 0.0091 - learning_rate: 0.0010\nEpoch 29/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 703ms/step - loss: 0.0843 - mae: 0.0619 - mse: 0.0073\nEpoch 29: val_loss did not improve from 0.06146\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 759ms/step - loss: 0.0841 - mae: 0.0618 - mse: 0.0073 - val_loss: 0.0716 - val_mae: 0.0498 - val_mse: 0.0051 - learning_rate: 0.0010\nEpoch 30/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 705ms/step - loss: 0.0688 - mae: 0.0480 - mse: 0.0048\nEpoch 30: val_loss did not improve from 0.06146\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 760ms/step - loss: 0.0688 - mae: 0.0479 - mse: 0.0047 - val_loss: 0.0655 - val_mae: 0.0446 - val_mse: 0.0043 - learning_rate: 0.0010\nEpoch 31/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0662 - mae: 0.0459 - mse: 0.0044\nEpoch 31: val_loss improved from 0.06146 to 0.06144, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 774ms/step - loss: 0.0661 - mae: 0.0459 - mse: 0.0044 - val_loss: 0.0614 - val_mae: 0.0428 - val_mse: 0.0038 - learning_rate: 0.0010\nEpoch 32/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0652 - mae: 0.0466 - mse: 0.0043\nEpoch 32: val_loss did not improve from 0.06144\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0652 - mae: 0.0466 - mse: 0.0043 - val_loss: 0.0636 - val_mae: 0.0461 - val_mse: 0.0040 - learning_rate: 0.0010\nEpoch 33/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0630 - mae: 0.0449 - mse: 0.0040\nEpoch 33: val_loss improved from 0.06144 to 0.05767, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 772ms/step - loss: 0.0630 - mae: 0.0448 - mse: 0.0040 - val_loss: 0.0577 - val_mae: 0.0404 - val_mse: 0.0033 - learning_rate: 0.0010\nEpoch 34/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0607 - mae: 0.0430 - mse: 0.0037\nEpoch 34: val_loss did not improve from 0.05767\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 761ms/step - loss: 0.0607 - mae: 0.0430 - mse: 0.0037 - val_loss: 0.0579 - val_mae: 0.0407 - val_mse: 0.0034 - learning_rate: 0.0010\nEpoch 35/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 705ms/step - loss: 0.0599 - mae: 0.0427 - mse: 0.0036\nEpoch 35: val_loss improved from 0.05767 to 0.05478, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 770ms/step - loss: 0.0599 - mae: 0.0426 - mse: 0.0036 - val_loss: 0.0548 - val_mae: 0.0376 - val_mse: 0.0030 - learning_rate: 0.0010\nEpoch 36/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0562 - mae: 0.0394 - mse: 0.0032\nEpoch 36: val_loss did not improve from 0.05478\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0563 - mae: 0.0395 - mse: 0.0032 - val_loss: 0.0603 - val_mae: 0.0441 - val_mse: 0.0036 - learning_rate: 0.0010\nEpoch 37/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0599 - mae: 0.0424 - mse: 0.0036\nEpoch 37: val_loss did not improve from 0.05478\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0599 - mae: 0.0424 - mse: 0.0036 - val_loss: 0.0554 - val_mae: 0.0397 - val_mse: 0.0031 - learning_rate: 0.0010\nEpoch 38/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0546 - mae: 0.0376 - mse: 0.0030\nEpoch 38: val_loss did not improve from 0.05478\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0546 - mae: 0.0376 - mse: 0.0030 - val_loss: 0.0559 - val_mae: 0.0386 - val_mse: 0.0031 - learning_rate: 0.0010\nEpoch 39/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0548 - mae: 0.0381 - mse: 0.0030\nEpoch 39: val_loss improved from 0.05478 to 0.04893, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 771ms/step - loss: 0.0548 - mae: 0.0381 - mse: 0.0030 - val_loss: 0.0489 - val_mae: 0.0324 - val_mse: 0.0024 - learning_rate: 0.0010\nEpoch 40/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0523 - mae: 0.0357 - mse: 0.0027\nEpoch 40: val_loss did not improve from 0.04893\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0523 - mae: 0.0357 - mse: 0.0027 - val_loss: 0.0501 - val_mae: 0.0342 - val_mse: 0.0025 - learning_rate: 0.0010\nEpoch 41/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0529 - mae: 0.0364 - mse: 0.0028\nEpoch 41: val_loss improved from 0.04893 to 0.04833, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 772ms/step - loss: 0.0529 - mae: 0.0364 - mse: 0.0028 - val_loss: 0.0483 - val_mae: 0.0318 - val_mse: 0.0023 - learning_rate: 0.0010\nEpoch 42/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0514 - mae: 0.0349 - mse: 0.0026\nEpoch 42: val_loss improved from 0.04833 to 0.04762, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 771ms/step - loss: 0.0514 - mae: 0.0349 - mse: 0.0027 - val_loss: 0.0476 - val_mae: 0.0312 - val_mse: 0.0023 - learning_rate: 0.0010\nEpoch 43/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0506 - mae: 0.0344 - mse: 0.0026\nEpoch 43: val_loss improved from 0.04762 to 0.04751, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0506 - mae: 0.0344 - mse: 0.0026 - val_loss: 0.0475 - val_mae: 0.0312 - val_mse: 0.0023 - learning_rate: 0.0010\nEpoch 44/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0498 - mae: 0.0334 - mse: 0.0025\nEpoch 44: val_loss did not improve from 0.04751\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0498 - mae: 0.0334 - mse: 0.0025 - val_loss: 0.0497 - val_mae: 0.0345 - val_mse: 0.0025 - learning_rate: 0.0010\nEpoch 45/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0504 - mae: 0.0342 - mse: 0.0026\nEpoch 45: val_loss improved from 0.04751 to 0.04721, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0504 - mae: 0.0342 - mse: 0.0025 - val_loss: 0.0472 - val_mae: 0.0318 - val_mse: 0.0022 - learning_rate: 0.0010\nEpoch 46/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0491 - mae: 0.0329 - mse: 0.0024\nEpoch 46: val_loss did not improve from 0.04721\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0491 - mae: 0.0329 - mse: 0.0024 - val_loss: 0.0505 - val_mae: 0.0335 - val_mse: 0.0026 - learning_rate: 0.0010\nEpoch 47/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0495 - mae: 0.0336 - mse: 0.0025\nEpoch 47: val_loss improved from 0.04721 to 0.04580, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 772ms/step - loss: 0.0495 - mae: 0.0335 - mse: 0.0025 - val_loss: 0.0458 - val_mae: 0.0299 - val_mse: 0.0021 - learning_rate: 0.0010\nEpoch 48/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0487 - mae: 0.0327 - mse: 0.0024\nEpoch 48: val_loss did not improve from 0.04580\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0487 - mae: 0.0327 - mse: 0.0024 - val_loss: 0.0462 - val_mae: 0.0301 - val_mse: 0.0021 - learning_rate: 0.0010\nEpoch 49/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0484 - mae: 0.0326 - mse: 0.0023\nEpoch 49: val_loss improved from 0.04580 to 0.04564, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 772ms/step - loss: 0.0484 - mae: 0.0326 - mse: 0.0023 - val_loss: 0.0456 - val_mae: 0.0298 - val_mse: 0.0021 - learning_rate: 0.0010\nEpoch 50/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 705ms/step - loss: 0.0491 - mae: 0.0334 - mse: 0.0024\nEpoch 50: val_loss did not improve from 0.04564\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 760ms/step - loss: 0.0491 - mae: 0.0335 - mse: 0.0024 - val_loss: 0.0477 - val_mae: 0.0326 - val_mse: 0.0023 - learning_rate: 0.0010\nEpoch 51/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0483 - mae: 0.0325 - mse: 0.0023\nEpoch 51: val_loss did not improve from 0.04564\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0483 - mae: 0.0325 - mse: 0.0023 - val_loss: 0.0483 - val_mae: 0.0341 - val_mse: 0.0023 - learning_rate: 0.0010\nEpoch 52/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0477 - mae: 0.0323 - mse: 0.0023\nEpoch 52: val_loss did not improve from 0.04564\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0477 - mae: 0.0323 - mse: 0.0023 - val_loss: 0.0462 - val_mae: 0.0310 - val_mse: 0.0021 - learning_rate: 0.0010\nEpoch 53/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0476 - mae: 0.0322 - mse: 0.0023\nEpoch 53: val_loss improved from 0.04564 to 0.04515, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 772ms/step - loss: 0.0476 - mae: 0.0321 - mse: 0.0023 - val_loss: 0.0451 - val_mae: 0.0303 - val_mse: 0.0020 - learning_rate: 0.0010\nEpoch 54/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 705ms/step - loss: 0.0470 - mae: 0.0315 - mse: 0.0022\nEpoch 54: val_loss did not improve from 0.04515\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 761ms/step - loss: 0.0470 - mae: 0.0315 - mse: 0.0022 - val_loss: 0.0472 - val_mae: 0.0310 - val_mse: 0.0022 - learning_rate: 0.0010\nEpoch 55/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0484 - mae: 0.0330 - mse: 0.0024\nEpoch 55: val_loss did not improve from 0.04515\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0484 - mae: 0.0330 - mse: 0.0024 - val_loss: 0.0484 - val_mae: 0.0336 - val_mse: 0.0023 - learning_rate: 0.0010\nEpoch 56/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0466 - mae: 0.0313 - mse: 0.0022\nEpoch 56: val_loss improved from 0.04515 to 0.04302, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0466 - mae: 0.0313 - mse: 0.0022 - val_loss: 0.0430 - val_mae: 0.0276 - val_mse: 0.0019 - learning_rate: 0.0010\nEpoch 57/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0460 - mae: 0.0306 - mse: 0.0021\nEpoch 57: val_loss did not improve from 0.04302\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0460 - mae: 0.0306 - mse: 0.0021 - val_loss: 0.0436 - val_mae: 0.0281 - val_mse: 0.0019 - learning_rate: 0.0010\nEpoch 58/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0467 - mae: 0.0316 - mse: 0.0022\nEpoch 58: val_loss improved from 0.04302 to 0.04271, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0466 - mae: 0.0316 - mse: 0.0022 - val_loss: 0.0427 - val_mae: 0.0274 - val_mse: 0.0018 - learning_rate: 0.0010\nEpoch 59/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0447 - mae: 0.0294 - mse: 0.0020\nEpoch 59: val_loss did not improve from 0.04271\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0447 - mae: 0.0294 - mse: 0.0020 - val_loss: 0.0445 - val_mae: 0.0302 - val_mse: 0.0020 - learning_rate: 0.0010\nEpoch 60/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0474 - mae: 0.0326 - mse: 0.0023\nEpoch 60: val_loss did not improve from 0.04271\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0474 - mae: 0.0326 - mse: 0.0023 - val_loss: 0.0435 - val_mae: 0.0286 - val_mse: 0.0019 - learning_rate: 0.0010\nEpoch 61/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0456 - mae: 0.0305 - mse: 0.0021\nEpoch 61: val_loss did not improve from 0.04271\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 761ms/step - loss: 0.0456 - mae: 0.0306 - mse: 0.0021 - val_loss: 0.0493 - val_mae: 0.0335 - val_mse: 0.0024 - learning_rate: 0.0010\nEpoch 62/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0470 - mae: 0.0322 - mse: 0.0022\nEpoch 62: val_loss did not improve from 0.04271\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0470 - mae: 0.0322 - mse: 0.0022 - val_loss: 0.0459 - val_mae: 0.0328 - val_mse: 0.0021 - learning_rate: 0.0010\nEpoch 63/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0450 - mae: 0.0303 - mse: 0.0020\nEpoch 63: val_loss did not improve from 0.04271\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0450 - mae: 0.0303 - mse: 0.0020 - val_loss: 0.0429 - val_mae: 0.0284 - val_mse: 0.0018 - learning_rate: 0.0010\nEpoch 64/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0447 - mae: 0.0300 - mse: 0.0020\nEpoch 64: val_loss improved from 0.04271 to 0.04181, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 771ms/step - loss: 0.0447 - mae: 0.0300 - mse: 0.0020 - val_loss: 0.0418 - val_mae: 0.0276 - val_mse: 0.0018 - learning_rate: 0.0010\nEpoch 65/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0438 - mae: 0.0291 - mse: 0.0019\nEpoch 65: val_loss improved from 0.04181 to 0.04093, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0438 - mae: 0.0291 - mse: 0.0019 - val_loss: 0.0409 - val_mae: 0.0261 - val_mse: 0.0017 - learning_rate: 0.0010\nEpoch 66/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0440 - mae: 0.0293 - mse: 0.0019\nEpoch 66: val_loss did not improve from 0.04093\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0440 - mae: 0.0293 - mse: 0.0019 - val_loss: 0.0423 - val_mae: 0.0269 - val_mse: 0.0018 - learning_rate: 0.0010\nEpoch 67/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0431 - mae: 0.0284 - mse: 0.0019\nEpoch 67: val_loss did not improve from 0.04093\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 764ms/step - loss: 0.0431 - mae: 0.0284 - mse: 0.0019 - val_loss: 0.0415 - val_mae: 0.0266 - val_mse: 0.0017 - learning_rate: 0.0010\nEpoch 68/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0428 - mae: 0.0282 - mse: 0.0018\nEpoch 68: val_loss did not improve from 0.04093\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0428 - mae: 0.0282 - mse: 0.0018 - val_loss: 0.0465 - val_mae: 0.0330 - val_mse: 0.0022 - learning_rate: 0.0010\nEpoch 69/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0439 - mae: 0.0297 - mse: 0.0019\nEpoch 69: val_loss did not improve from 0.04093\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 761ms/step - loss: 0.0439 - mae: 0.0297 - mse: 0.0019 - val_loss: 0.0412 - val_mae: 0.0271 - val_mse: 0.0017 - learning_rate: 0.0010\nEpoch 70/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0435 - mae: 0.0293 - mse: 0.0019\nEpoch 70: val_loss did not improve from 0.04093\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 761ms/step - loss: 0.0435 - mae: 0.0293 - mse: 0.0019 - val_loss: 0.0426 - val_mae: 0.0284 - val_mse: 0.0018 - learning_rate: 0.0010\nEpoch 71/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0468 - mae: 0.0321 - mse: 0.0022\nEpoch 71: val_loss improved from 0.04093 to 0.04041, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 772ms/step - loss: 0.0467 - mae: 0.0320 - mse: 0.0022 - val_loss: 0.0404 - val_mae: 0.0261 - val_mse: 0.0016 - learning_rate: 0.0010\nEpoch 72/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0443 - mae: 0.0303 - mse: 0.0020\nEpoch 72: val_loss did not improve from 0.04041\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 764ms/step - loss: 0.0442 - mae: 0.0302 - mse: 0.0020 - val_loss: 0.0405 - val_mae: 0.0258 - val_mse: 0.0016 - learning_rate: 0.0010\nEpoch 73/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0420 - mae: 0.0279 - mse: 0.0018\nEpoch 73: val_loss did not improve from 0.04041\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0420 - mae: 0.0279 - mse: 0.0018 - val_loss: 0.0419 - val_mae: 0.0272 - val_mse: 0.0018 - learning_rate: 0.0010\nEpoch 74/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0434 - mae: 0.0294 - mse: 0.0019\nEpoch 74: val_loss improved from 0.04041 to 0.04010, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0434 - mae: 0.0294 - mse: 0.0019 - val_loss: 0.0401 - val_mae: 0.0269 - val_mse: 0.0016 - learning_rate: 0.0010\nEpoch 75/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0419 - mae: 0.0281 - mse: 0.0018\nEpoch 75: val_loss did not improve from 0.04010\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0419 - mae: 0.0281 - mse: 0.0018 - val_loss: 0.0418 - val_mae: 0.0289 - val_mse: 0.0018 - learning_rate: 0.0010\nEpoch 76/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0421 - mae: 0.0282 - mse: 0.0018\nEpoch 76: val_loss improved from 0.04010 to 0.03906, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 772ms/step - loss: 0.0420 - mae: 0.0282 - mse: 0.0018 - val_loss: 0.0391 - val_mae: 0.0256 - val_mse: 0.0015 - learning_rate: 0.0010\nEpoch 77/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0407 - mae: 0.0271 - mse: 0.0017\nEpoch 77: val_loss did not improve from 0.03906\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 764ms/step - loss: 0.0407 - mae: 0.0271 - mse: 0.0017 - val_loss: 0.0403 - val_mae: 0.0267 - val_mse: 0.0016 - learning_rate: 0.0010\nEpoch 78/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0423 - mae: 0.0288 - mse: 0.0018\nEpoch 78: val_loss did not improve from 0.03906\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0423 - mae: 0.0288 - mse: 0.0018 - val_loss: 0.0422 - val_mae: 0.0297 - val_mse: 0.0018 - learning_rate: 0.0010\nEpoch 79/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0406 - mae: 0.0272 - mse: 0.0017\nEpoch 79: val_loss improved from 0.03906 to 0.03775, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 772ms/step - loss: 0.0406 - mae: 0.0272 - mse: 0.0017 - val_loss: 0.0377 - val_mae: 0.0241 - val_mse: 0.0014 - learning_rate: 0.0010\nEpoch 80/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0396 - mae: 0.0261 - mse: 0.0016\nEpoch 80: val_loss improved from 0.03775 to 0.03760, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 774ms/step - loss: 0.0396 - mae: 0.0261 - mse: 0.0016 - val_loss: 0.0376 - val_mae: 0.0239 - val_mse: 0.0014 - learning_rate: 0.0010\nEpoch 81/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0393 - mae: 0.0259 - mse: 0.0016\nEpoch 81: val_loss did not improve from 0.03760\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0394 - mae: 0.0260 - mse: 0.0016 - val_loss: 0.0404 - val_mae: 0.0267 - val_mse: 0.0016 - learning_rate: 0.0010\nEpoch 82/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0418 - mae: 0.0284 - mse: 0.0018\nEpoch 82: val_loss did not improve from 0.03760\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0418 - mae: 0.0283 - mse: 0.0018 - val_loss: 0.0402 - val_mae: 0.0267 - val_mse: 0.0016 - learning_rate: 0.0010\nEpoch 83/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0410 - mae: 0.0277 - mse: 0.0017\nEpoch 83: val_loss did not improve from 0.03760\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0410 - mae: 0.0277 - mse: 0.0017 - val_loss: 0.0387 - val_mae: 0.0253 - val_mse: 0.0015 - learning_rate: 0.0010\nEpoch 84/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0399 - mae: 0.0266 - mse: 0.0016\nEpoch 84: val_loss did not improve from 0.03760\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0398 - mae: 0.0266 - mse: 0.0016 - val_loss: 0.0389 - val_mae: 0.0255 - val_mse: 0.0015 - learning_rate: 0.0010\nEpoch 85/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0404 - mae: 0.0273 - mse: 0.0016\nEpoch 85: val_loss did not improve from 0.03760\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0404 - mae: 0.0273 - mse: 0.0016 - val_loss: 0.0381 - val_mae: 0.0248 - val_mse: 0.0015 - learning_rate: 0.0010\nEpoch 86/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0388 - mae: 0.0256 - mse: 0.0015\nEpoch 86: val_loss did not improve from 0.03760\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0387 - mae: 0.0256 - mse: 0.0015 - val_loss: 0.0395 - val_mae: 0.0266 - val_mse: 0.0016 - learning_rate: 0.0010\nEpoch 87/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0394 - mae: 0.0263 - mse: 0.0016\nEpoch 87: val_loss improved from 0.03760 to 0.03703, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 772ms/step - loss: 0.0393 - mae: 0.0263 - mse: 0.0016 - val_loss: 0.0370 - val_mae: 0.0245 - val_mse: 0.0014 - learning_rate: 0.0010\nEpoch 88/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0382 - mae: 0.0252 - mse: 0.0015\nEpoch 88: val_loss did not improve from 0.03703\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0382 - mae: 0.0252 - mse: 0.0015 - val_loss: 0.0397 - val_mae: 0.0261 - val_mse: 0.0016 - learning_rate: 0.0010\nEpoch 89/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0390 - mae: 0.0258 - mse: 0.0015\nEpoch 89: val_loss improved from 0.03703 to 0.03680, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 774ms/step - loss: 0.0390 - mae: 0.0258 - mse: 0.0015 - val_loss: 0.0368 - val_mae: 0.0234 - val_mse: 0.0014 - learning_rate: 0.0010\nEpoch 90/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0378 - mae: 0.0249 - mse: 0.0014\nEpoch 90: val_loss did not improve from 0.03680\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0378 - mae: 0.0249 - mse: 0.0014 - val_loss: 0.0381 - val_mae: 0.0242 - val_mse: 0.0015 - learning_rate: 0.0010\nEpoch 91/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0385 - mae: 0.0256 - mse: 0.0015\nEpoch 91: val_loss did not improve from 0.03680\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0385 - mae: 0.0256 - mse: 0.0015 - val_loss: 0.0391 - val_mae: 0.0253 - val_mse: 0.0015 - learning_rate: 0.0010\nEpoch 92/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0385 - mae: 0.0255 - mse: 0.0015\nEpoch 92: val_loss improved from 0.03680 to 0.03566, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0385 - mae: 0.0255 - mse: 0.0015 - val_loss: 0.0357 - val_mae: 0.0225 - val_mse: 0.0013 - learning_rate: 0.0010\nEpoch 93/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0371 - mae: 0.0243 - mse: 0.0014\nEpoch 93: val_loss did not improve from 0.03566\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0371 - mae: 0.0243 - mse: 0.0014 - val_loss: 0.0369 - val_mae: 0.0232 - val_mse: 0.0014 - learning_rate: 0.0010\nEpoch 94/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0374 - mae: 0.0246 - mse: 0.0014\nEpoch 94: val_loss improved from 0.03566 to 0.03510, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0374 - mae: 0.0246 - mse: 0.0014 - val_loss: 0.0351 - val_mae: 0.0222 - val_mse: 0.0012 - learning_rate: 0.0010\nEpoch 95/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0370 - mae: 0.0241 - mse: 0.0014\nEpoch 95: val_loss did not improve from 0.03510\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 764ms/step - loss: 0.0370 - mae: 0.0241 - mse: 0.0014 - val_loss: 0.0361 - val_mae: 0.0230 - val_mse: 0.0013 - learning_rate: 0.0010\nEpoch 96/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0375 - mae: 0.0248 - mse: 0.0014\nEpoch 96: val_loss did not improve from 0.03510\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0375 - mae: 0.0248 - mse: 0.0014 - val_loss: 0.0370 - val_mae: 0.0238 - val_mse: 0.0014 - learning_rate: 0.0010\nEpoch 97/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0385 - mae: 0.0256 - mse: 0.0015\nEpoch 97: val_loss did not improve from 0.03510\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0385 - mae: 0.0256 - mse: 0.0015 - val_loss: 0.0393 - val_mae: 0.0267 - val_mse: 0.0015 - learning_rate: 0.0010\nEpoch 98/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0382 - mae: 0.0256 - mse: 0.0015\nEpoch 98: val_loss did not improve from 0.03510\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0382 - mae: 0.0256 - mse: 0.0015 - val_loss: 0.0357 - val_mae: 0.0229 - val_mse: 0.0013 - learning_rate: 0.0010\nEpoch 99/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 709ms/step - loss: 0.0368 - mae: 0.0241 - mse: 0.0014\nEpoch 99: val_loss improved from 0.03510 to 0.03460, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 774ms/step - loss: 0.0368 - mae: 0.0241 - mse: 0.0014 - val_loss: 0.0346 - val_mae: 0.0214 - val_mse: 0.0012 - learning_rate: 0.0010\nEpoch 100/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0364 - mae: 0.0238 - mse: 0.0013\nEpoch 100: val_loss did not improve from 0.03460\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0364 - mae: 0.0238 - mse: 0.0013 - val_loss: 0.0358 - val_mae: 0.0229 - val_mse: 0.0013 - learning_rate: 0.0010\nEpoch 101/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0368 - mae: 0.0244 - mse: 0.0014\nEpoch 101: val_loss did not improve from 0.03460\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0368 - mae: 0.0244 - mse: 0.0014 - val_loss: 0.0347 - val_mae: 0.0217 - val_mse: 0.0012 - learning_rate: 0.0010\nEpoch 102/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0366 - mae: 0.0240 - mse: 0.0013\nEpoch 102: val_loss did not improve from 0.03460\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0366 - mae: 0.0240 - mse: 0.0013 - val_loss: 0.0373 - val_mae: 0.0251 - val_mse: 0.0014 - learning_rate: 0.0010\nEpoch 103/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0371 - mae: 0.0247 - mse: 0.0014\nEpoch 103: val_loss did not improve from 0.03460\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0371 - mae: 0.0247 - mse: 0.0014 - val_loss: 0.0365 - val_mae: 0.0234 - val_mse: 0.0013 - learning_rate: 0.0010\nEpoch 104/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0381 - mae: 0.0257 - mse: 0.0015\nEpoch 104: val_loss did not improve from 0.03460\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0381 - mae: 0.0257 - mse: 0.0015 - val_loss: 0.0430 - val_mae: 0.0292 - val_mse: 0.0018 - learning_rate: 0.0010\nEpoch 105/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0376 - mae: 0.0248 - mse: 0.0014\nEpoch 105: val_loss did not improve from 0.03460\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0376 - mae: 0.0248 - mse: 0.0014 - val_loss: 0.0364 - val_mae: 0.0241 - val_mse: 0.0013 - learning_rate: 0.0010\nEpoch 106/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0370 - mae: 0.0246 - mse: 0.0014\nEpoch 106: val_loss did not improve from 0.03460\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0370 - mae: 0.0246 - mse: 0.0014 - val_loss: 0.0377 - val_mae: 0.0258 - val_mse: 0.0014 - learning_rate: 0.0010\nEpoch 107/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0376 - mae: 0.0251 - mse: 0.0014\nEpoch 107: val_loss did not improve from 0.03460\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0375 - mae: 0.0251 - mse: 0.0014 - val_loss: 0.0351 - val_mae: 0.0225 - val_mse: 0.0012 - learning_rate: 0.0010\nEpoch 108/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0359 - mae: 0.0237 - mse: 0.0013\nEpoch 108: val_loss did not improve from 0.03460\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0359 - mae: 0.0237 - mse: 0.0013 - val_loss: 0.0361 - val_mae: 0.0237 - val_mse: 0.0013 - learning_rate: 0.0010\nEpoch 109/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0368 - mae: 0.0247 - mse: 0.0014\nEpoch 109: val_loss improved from 0.03460 to 0.03397, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0368 - mae: 0.0247 - mse: 0.0014 - val_loss: 0.0340 - val_mae: 0.0212 - val_mse: 0.0012 - learning_rate: 0.0010\nEpoch 110/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 705ms/step - loss: 0.0351 - mae: 0.0226 - mse: 0.0012\nEpoch 110: val_loss did not improve from 0.03397\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 761ms/step - loss: 0.0351 - mae: 0.0227 - mse: 0.0012 - val_loss: 0.0366 - val_mae: 0.0241 - val_mse: 0.0013 - learning_rate: 0.0010\nEpoch 111/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0356 - mae: 0.0233 - mse: 0.0013\nEpoch 111: val_loss did not improve from 0.03397\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0356 - mae: 0.0233 - mse: 0.0013 - val_loss: 0.0364 - val_mae: 0.0239 - val_mse: 0.0013 - learning_rate: 0.0010\nEpoch 112/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0376 - mae: 0.0252 - mse: 0.0014\nEpoch 112: val_loss did not improve from 0.03397\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0376 - mae: 0.0251 - mse: 0.0014 - val_loss: 0.0356 - val_mae: 0.0229 - val_mse: 0.0013 - learning_rate: 0.0010\nEpoch 113/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0361 - mae: 0.0237 - mse: 0.0013\nEpoch 113: val_loss did not improve from 0.03397\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0361 - mae: 0.0237 - mse: 0.0013 - val_loss: 0.0378 - val_mae: 0.0259 - val_mse: 0.0014 - learning_rate: 0.0010\nEpoch 114/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0380 - mae: 0.0259 - mse: 0.0015\nEpoch 114: val_loss did not improve from 0.03397\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 764ms/step - loss: 0.0380 - mae: 0.0258 - mse: 0.0015 - val_loss: 0.0358 - val_mae: 0.0225 - val_mse: 0.0013 - learning_rate: 0.0010\nEpoch 115/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 709ms/step - loss: 0.0353 - mae: 0.0232 - mse: 0.0013\nEpoch 115: val_loss did not improve from 0.03397\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 765ms/step - loss: 0.0353 - mae: 0.0231 - mse: 0.0013 - val_loss: 0.0344 - val_mae: 0.0217 - val_mse: 0.0012 - learning_rate: 0.0010\nEpoch 116/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0358 - mae: 0.0239 - mse: 0.0013\nEpoch 116: val_loss did not improve from 0.03397\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 764ms/step - loss: 0.0358 - mae: 0.0240 - mse: 0.0013 - val_loss: 0.0396 - val_mae: 0.0280 - val_mse: 0.0016 - learning_rate: 0.0010\nEpoch 117/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0363 - mae: 0.0243 - mse: 0.0013\nEpoch 117: val_loss did not improve from 0.03397\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0363 - mae: 0.0243 - mse: 0.0013 - val_loss: 0.0388 - val_mae: 0.0270 - val_mse: 0.0015 - learning_rate: 0.0010\nEpoch 118/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0356 - mae: 0.0235 - mse: 0.0013\nEpoch 118: val_loss improved from 0.03397 to 0.03289, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0356 - mae: 0.0235 - mse: 0.0013 - val_loss: 0.0329 - val_mae: 0.0205 - val_mse: 0.0011 - learning_rate: 0.0010\nEpoch 119/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0340 - mae: 0.0221 - mse: 0.0012\nEpoch 119: val_loss did not improve from 0.03289\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 764ms/step - loss: 0.0340 - mae: 0.0221 - mse: 0.0012 - val_loss: 0.0344 - val_mae: 0.0222 - val_mse: 0.0012 - learning_rate: 0.0010\nEpoch 120/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 709ms/step - loss: 0.0349 - mae: 0.0230 - mse: 0.0012\nEpoch 120: val_loss did not improve from 0.03289\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 765ms/step - loss: 0.0349 - mae: 0.0230 - mse: 0.0012 - val_loss: 0.0333 - val_mae: 0.0207 - val_mse: 0.0011 - learning_rate: 0.0010\nEpoch 121/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0346 - mae: 0.0227 - mse: 0.0012\nEpoch 121: val_loss did not improve from 0.03289\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0346 - mae: 0.0227 - mse: 0.0012 - val_loss: 0.0433 - val_mae: 0.0270 - val_mse: 0.0019 - learning_rate: 0.0010\nEpoch 122/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0432 - mae: 0.0294 - mse: 0.0019\nEpoch 122: val_loss did not improve from 0.03289\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0431 - mae: 0.0294 - mse: 0.0019 - val_loss: 0.0361 - val_mae: 0.0235 - val_mse: 0.0013 - learning_rate: 0.0010\nEpoch 123/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0372 - mae: 0.0250 - mse: 0.0014\nEpoch 123: val_loss did not improve from 0.03289\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0372 - mae: 0.0249 - mse: 0.0014 - val_loss: 0.0349 - val_mae: 0.0231 - val_mse: 0.0012 - learning_rate: 0.0010\nEpoch 124/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0356 - mae: 0.0237 - mse: 0.0013\nEpoch 124: val_loss did not improve from 0.03289\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0356 - mae: 0.0237 - mse: 0.0013 - val_loss: 0.0394 - val_mae: 0.0261 - val_mse: 0.0016 - learning_rate: 0.0010\nEpoch 125/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0373 - mae: 0.0254 - mse: 0.0014\nEpoch 125: val_loss did not improve from 0.03289\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 764ms/step - loss: 0.0373 - mae: 0.0254 - mse: 0.0014 - val_loss: 0.0340 - val_mae: 0.0223 - val_mse: 0.0012 - learning_rate: 0.0010\nEpoch 126/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0353 - mae: 0.0236 - mse: 0.0013\nEpoch 126: val_loss did not improve from 0.03289\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0353 - mae: 0.0236 - mse: 0.0013 - val_loss: 0.0336 - val_mae: 0.0210 - val_mse: 0.0011 - learning_rate: 0.0010\nEpoch 127/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0348 - mae: 0.0232 - mse: 0.0012\nEpoch 127: val_loss did not improve from 0.03289\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0349 - mae: 0.0232 - mse: 0.0012 - val_loss: 0.0415 - val_mae: 0.0286 - val_mse: 0.0017 - learning_rate: 0.0010\nEpoch 128/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0365 - mae: 0.0244 - mse: 0.0013\nEpoch 128: val_loss did not improve from 0.03289\n\nEpoch 128: ReduceLROnPlateau reducing learning rate to 0.0005000000237487257.\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0364 - mae: 0.0244 - mse: 0.0013 - val_loss: 0.0333 - val_mae: 0.0210 - val_mse: 0.0011 - learning_rate: 0.0010\nEpoch 129/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0327 - mae: 0.0208 - mse: 0.0011\nEpoch 129: val_loss improved from 0.03289 to 0.03180, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0327 - mae: 0.0207 - mse: 0.0011 - val_loss: 0.0318 - val_mae: 0.0194 - val_mse: 0.0010 - learning_rate: 5.0000e-04\nEpoch 130/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0321 - mae: 0.0201 - mse: 0.0010\nEpoch 130: val_loss improved from 0.03180 to 0.03165, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0321 - mae: 0.0200 - mse: 0.0010 - val_loss: 0.0316 - val_mae: 0.0192 - val_mse: 0.0010 - learning_rate: 5.0000e-04\nEpoch 131/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0319 - mae: 0.0199 - mse: 0.0010\nEpoch 131: val_loss improved from 0.03165 to 0.03156, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0319 - mae: 0.0199 - mse: 0.0010 - val_loss: 0.0316 - val_mae: 0.0191 - val_mse: 9.9786e-04 - learning_rate: 5.0000e-04\nEpoch 132/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0317 - mae: 0.0198 - mse: 0.0010\nEpoch 132: val_loss improved from 0.03156 to 0.03150, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0317 - mae: 0.0198 - mse: 0.0010 - val_loss: 0.0315 - val_mae: 0.0191 - val_mse: 9.9414e-04 - learning_rate: 5.0000e-04\nEpoch 133/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0317 - mae: 0.0197 - mse: 0.0010\nEpoch 133: val_loss improved from 0.03150 to 0.03142, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0316 - mae: 0.0197 - mse: 0.0010 - val_loss: 0.0314 - val_mae: 0.0190 - val_mse: 9.8917e-04 - learning_rate: 5.0000e-04\nEpoch 134/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0316 - mae: 0.0196 - mse: 0.0010\nEpoch 134: val_loss improved from 0.03142 to 0.03136, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0315 - mae: 0.0196 - mse: 0.0010 - val_loss: 0.0314 - val_mae: 0.0190 - val_mse: 9.8550e-04 - learning_rate: 5.0000e-04\nEpoch 135/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0315 - mae: 0.0196 - mse: 9.9597e-04\nEpoch 135: val_loss improved from 0.03136 to 0.03129, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 775ms/step - loss: 0.0315 - mae: 0.0196 - mse: 9.9559e-04 - val_loss: 0.0313 - val_mae: 0.0189 - val_mse: 9.8076e-04 - learning_rate: 5.0000e-04\nEpoch 136/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 709ms/step - loss: 0.0314 - mae: 0.0195 - mse: 9.9066e-04\nEpoch 136: val_loss improved from 0.03129 to 0.03123, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 774ms/step - loss: 0.0314 - mae: 0.0195 - mse: 9.9029e-04 - val_loss: 0.0312 - val_mae: 0.0189 - val_mse: 9.7733e-04 - learning_rate: 5.0000e-04\nEpoch 137/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0313 - mae: 0.0195 - mse: 9.8636e-04\nEpoch 137: val_loss improved from 0.03123 to 0.03118, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 774ms/step - loss: 0.0313 - mae: 0.0194 - mse: 9.8599e-04 - val_loss: 0.0312 - val_mae: 0.0188 - val_mse: 9.7436e-04 - learning_rate: 5.0000e-04\nEpoch 138/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0312 - mae: 0.0194 - mse: 9.8194e-04\nEpoch 138: val_loss improved from 0.03118 to 0.03118, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0312 - mae: 0.0194 - mse: 9.8159e-04 - val_loss: 0.0312 - val_mae: 0.0188 - val_mse: 9.7413e-04 - learning_rate: 5.0000e-04\nEpoch 139/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0312 - mae: 0.0194 - mse: 9.7944e-04\nEpoch 139: val_loss improved from 0.03118 to 0.03113, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0312 - mae: 0.0194 - mse: 9.7908e-04 - val_loss: 0.0311 - val_mae: 0.0188 - val_mse: 9.7073e-04 - learning_rate: 5.0000e-04\nEpoch 140/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0311 - mae: 0.0193 - mse: 9.7473e-04\nEpoch 140: val_loss improved from 0.03113 to 0.03106, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0311 - mae: 0.0193 - mse: 9.7439e-04 - val_loss: 0.0311 - val_mae: 0.0188 - val_mse: 9.6674e-04 - learning_rate: 5.0000e-04\nEpoch 141/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0311 - mae: 0.0193 - mse: 9.7286e-04\nEpoch 141: val_loss improved from 0.03106 to 0.03098, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0311 - mae: 0.0193 - mse: 9.7250e-04 - val_loss: 0.0310 - val_mae: 0.0187 - val_mse: 9.6182e-04 - learning_rate: 5.0000e-04\nEpoch 142/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0310 - mae: 0.0193 - mse: 9.6701e-04\nEpoch 142: val_loss improved from 0.03098 to 0.03097, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 772ms/step - loss: 0.0310 - mae: 0.0193 - mse: 9.6667e-04 - val_loss: 0.0310 - val_mae: 0.0187 - val_mse: 9.6111e-04 - learning_rate: 5.0000e-04\nEpoch 143/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0310 - mae: 0.0193 - mse: 9.6669e-04\nEpoch 143: val_loss improved from 0.03097 to 0.03092, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 772ms/step - loss: 0.0310 - mae: 0.0193 - mse: 9.6641e-04 - val_loss: 0.0309 - val_mae: 0.0186 - val_mse: 9.5786e-04 - learning_rate: 5.0000e-04\nEpoch 144/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0309 - mae: 0.0192 - mse: 9.6077e-04\nEpoch 144: val_loss did not improve from 0.03092\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0309 - mae: 0.0192 - mse: 9.6043e-04 - val_loss: 0.0309 - val_mae: 0.0187 - val_mse: 9.5861e-04 - learning_rate: 5.0000e-04\nEpoch 145/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0309 - mae: 0.0192 - mse: 9.5810e-04\nEpoch 145: val_loss did not improve from 0.03092\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 767ms/step - loss: 0.0309 - mae: 0.0192 - mse: 9.5779e-04 - val_loss: 0.0310 - val_mae: 0.0188 - val_mse: 9.6179e-04 - learning_rate: 5.0000e-04\nEpoch 146/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 709ms/step - loss: 0.0311 - mae: 0.0195 - mse: 9.7233e-04\nEpoch 146: val_loss improved from 0.03092 to 0.03090, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0311 - mae: 0.0195 - mse: 9.7192e-04 - val_loss: 0.0309 - val_mae: 0.0187 - val_mse: 9.5685e-04 - learning_rate: 5.0000e-04\nEpoch 147/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0310 - mae: 0.0194 - mse: 9.6376e-04\nEpoch 147: val_loss did not improve from 0.03090\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0310 - mae: 0.0194 - mse: 9.6372e-04 - val_loss: 0.0319 - val_mae: 0.0198 - val_mse: 0.0010 - learning_rate: 5.0000e-04\nEpoch 148/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0311 - mae: 0.0196 - mse: 9.7472e-04\nEpoch 148: val_loss improved from 0.03090 to 0.03081, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0311 - mae: 0.0196 - mse: 9.7416e-04 - val_loss: 0.0308 - val_mae: 0.0186 - val_mse: 9.5139e-04 - learning_rate: 5.0000e-04\nEpoch 149/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0308 - mae: 0.0193 - mse: 9.5505e-04\nEpoch 149: val_loss did not improve from 0.03081\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 767ms/step - loss: 0.0308 - mae: 0.0193 - mse: 9.5485e-04 - val_loss: 0.0312 - val_mae: 0.0191 - val_mse: 9.7693e-04 - learning_rate: 5.0000e-04\nEpoch 150/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0310 - mae: 0.0196 - mse: 9.6898e-04\nEpoch 150: val_loss did not improve from 0.03081\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 766ms/step - loss: 0.0310 - mae: 0.0196 - mse: 9.6858e-04 - val_loss: 0.0312 - val_mae: 0.0190 - val_mse: 9.7400e-04 - learning_rate: 5.0000e-04\nEpoch 151/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0308 - mae: 0.0193 - mse: 9.5366e-04\nEpoch 151: val_loss did not improve from 0.03081\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 767ms/step - loss: 0.0308 - mae: 0.0193 - mse: 9.5333e-04 - val_loss: 0.0310 - val_mae: 0.0189 - val_mse: 9.6568e-04 - learning_rate: 5.0000e-04\nEpoch 152/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0309 - mae: 0.0194 - mse: 9.5996e-04\nEpoch 152: val_loss improved from 0.03081 to 0.03080, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 776ms/step - loss: 0.0309 - mae: 0.0194 - mse: 9.5966e-04 - val_loss: 0.0308 - val_mae: 0.0187 - val_mse: 9.5057e-04 - learning_rate: 5.0000e-04\nEpoch 153/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0307 - mae: 0.0193 - mse: 9.4972e-04\nEpoch 153: val_loss did not improve from 0.03080\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 764ms/step - loss: 0.0307 - mae: 0.0193 - mse: 9.4969e-04 - val_loss: 0.0311 - val_mae: 0.0190 - val_mse: 9.7164e-04 - learning_rate: 5.0000e-04\nEpoch 154/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0309 - mae: 0.0194 - mse: 9.6114e-04\nEpoch 154: val_loss did not improve from 0.03080\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0309 - mae: 0.0194 - mse: 9.6092e-04 - val_loss: 0.0311 - val_mae: 0.0190 - val_mse: 9.6869e-04 - learning_rate: 5.0000e-04\nEpoch 155/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0309 - mae: 0.0195 - mse: 9.6120e-04\nEpoch 155: val_loss did not improve from 0.03080\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0309 - mae: 0.0195 - mse: 9.6130e-04 - val_loss: 0.0333 - val_mae: 0.0217 - val_mse: 0.0011 - learning_rate: 5.0000e-04\nEpoch 156/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0322 - mae: 0.0209 - mse: 0.0010\nEpoch 156: val_loss did not improve from 0.03080\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 764ms/step - loss: 0.0322 - mae: 0.0209 - mse: 0.0010 - val_loss: 0.0308 - val_mae: 0.0189 - val_mse: 9.5222e-04 - learning_rate: 5.0000e-04\nEpoch 157/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0306 - mae: 0.0192 - mse: 9.4118e-04\nEpoch 157: val_loss did not improve from 0.03080\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 764ms/step - loss: 0.0306 - mae: 0.0192 - mse: 9.4090e-04 - val_loss: 0.0308 - val_mae: 0.0187 - val_mse: 9.5176e-04 - learning_rate: 5.0000e-04\nEpoch 158/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 709ms/step - loss: 0.0307 - mae: 0.0193 - mse: 9.4509e-04\nEpoch 158: val_loss improved from 0.03080 to 0.03078, saving model to cae_outputs/cae_best_weights.h5\n\nEpoch 158: ReduceLROnPlateau reducing learning rate to 0.0002500000118743628.\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 775ms/step - loss: 0.0307 - mae: 0.0193 - mse: 9.4479e-04 - val_loss: 0.0308 - val_mae: 0.0187 - val_mse: 9.4944e-04 - learning_rate: 5.0000e-04\nEpoch 159/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0302 - mae: 0.0188 - mse: 9.1887e-04\nEpoch 159: val_loss improved from 0.03078 to 0.03033, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 774ms/step - loss: 0.0302 - mae: 0.0188 - mse: 9.1844e-04 - val_loss: 0.0303 - val_mae: 0.0182 - val_mse: 9.2168e-04 - learning_rate: 2.5000e-04\nEpoch 160/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0300 - mae: 0.0186 - mse: 9.0789e-04\nEpoch 160: val_loss improved from 0.03033 to 0.03029, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 771ms/step - loss: 0.0300 - mae: 0.0186 - mse: 9.0757e-04 - val_loss: 0.0303 - val_mae: 0.0182 - val_mse: 9.1929e-04 - learning_rate: 2.5000e-04\nEpoch 161/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0300 - mae: 0.0186 - mse: 9.0438e-04\nEpoch 161: val_loss improved from 0.03029 to 0.03026, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 776ms/step - loss: 0.0300 - mae: 0.0186 - mse: 9.0406e-04 - val_loss: 0.0303 - val_mae: 0.0182 - val_mse: 9.1750e-04 - learning_rate: 2.5000e-04\nEpoch 162/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0299 - mae: 0.0186 - mse: 9.0174e-04\nEpoch 162: val_loss improved from 0.03026 to 0.03023, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 779ms/step - loss: 0.0299 - mae: 0.0186 - mse: 9.0143e-04 - val_loss: 0.0302 - val_mae: 0.0181 - val_mse: 9.1587e-04 - learning_rate: 2.5000e-04\nEpoch 163/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0299 - mae: 0.0185 - mse: 8.9936e-04\nEpoch 163: val_loss improved from 0.03023 to 0.03021, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0299 - mae: 0.0185 - mse: 8.9904e-04 - val_loss: 0.0302 - val_mae: 0.0181 - val_mse: 9.1453e-04 - learning_rate: 2.5000e-04\nEpoch 164/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0299 - mae: 0.0185 - mse: 8.9712e-04\nEpoch 164: val_loss improved from 0.03021 to 0.03019, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 776ms/step - loss: 0.0299 - mae: 0.0185 - mse: 8.9681e-04 - val_loss: 0.0302 - val_mae: 0.0181 - val_mse: 9.1316e-04 - learning_rate: 2.5000e-04\nEpoch 165/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 709ms/step - loss: 0.0298 - mae: 0.0185 - mse: 8.9497e-04\nEpoch 165: val_loss improved from 0.03019 to 0.03017, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 775ms/step - loss: 0.0298 - mae: 0.0185 - mse: 8.9466e-04 - val_loss: 0.0302 - val_mae: 0.0181 - val_mse: 9.1177e-04 - learning_rate: 2.5000e-04\nEpoch 166/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0298 - mae: 0.0185 - mse: 8.9282e-04\nEpoch 166: val_loss improved from 0.03017 to 0.03014, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0298 - mae: 0.0185 - mse: 8.9251e-04 - val_loss: 0.0301 - val_mae: 0.0181 - val_mse: 9.1033e-04 - learning_rate: 2.5000e-04\nEpoch 167/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0298 - mae: 0.0184 - mse: 8.9074e-04\nEpoch 167: val_loss improved from 0.03014 to 0.03012, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 776ms/step - loss: 0.0298 - mae: 0.0184 - mse: 8.9043e-04 - val_loss: 0.0301 - val_mae: 0.0180 - val_mse: 9.0911e-04 - learning_rate: 2.5000e-04\nEpoch 168/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0297 - mae: 0.0184 - mse: 8.8871e-04\nEpoch 168: val_loss improved from 0.03012 to 0.03010, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0297 - mae: 0.0184 - mse: 8.8840e-04 - val_loss: 0.0301 - val_mae: 0.0180 - val_mse: 9.0795e-04 - learning_rate: 2.5000e-04\nEpoch 169/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0297 - mae: 0.0184 - mse: 8.8673e-04\nEpoch 169: val_loss improved from 0.03010 to 0.03008, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 775ms/step - loss: 0.0297 - mae: 0.0184 - mse: 8.8643e-04 - val_loss: 0.0301 - val_mae: 0.0180 - val_mse: 9.0682e-04 - learning_rate: 2.5000e-04\nEpoch 170/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 713ms/step - loss: 0.0297 - mae: 0.0184 - mse: 8.8481e-04\nEpoch 170: val_loss improved from 0.03008 to 0.03007, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 779ms/step - loss: 0.0297 - mae: 0.0184 - mse: 8.8451e-04 - val_loss: 0.0301 - val_mae: 0.0180 - val_mse: 9.0578e-04 - learning_rate: 2.5000e-04\nEpoch 171/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0296 - mae: 0.0184 - mse: 8.8301e-04\nEpoch 171: val_loss improved from 0.03007 to 0.03005, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0296 - mae: 0.0184 - mse: 8.8271e-04 - val_loss: 0.0300 - val_mae: 0.0180 - val_mse: 9.0482e-04 - learning_rate: 2.5000e-04\nEpoch 172/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 709ms/step - loss: 0.0296 - mae: 0.0183 - mse: 8.8127e-04\nEpoch 172: val_loss improved from 0.03005 to 0.03004, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 774ms/step - loss: 0.0296 - mae: 0.0183 - mse: 8.8097e-04 - val_loss: 0.0300 - val_mae: 0.0180 - val_mse: 9.0418e-04 - learning_rate: 2.5000e-04\nEpoch 173/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0296 - mae: 0.0183 - mse: 8.7975e-04\nEpoch 173: val_loss improved from 0.03004 to 0.03003, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0296 - mae: 0.0183 - mse: 8.7945e-04 - val_loss: 0.0300 - val_mae: 0.0180 - val_mse: 9.0350e-04 - learning_rate: 2.5000e-04\nEpoch 174/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0296 - mae: 0.0183 - mse: 8.7836e-04\nEpoch 174: val_loss improved from 0.03003 to 0.03002, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0295 - mae: 0.0183 - mse: 8.7806e-04 - val_loss: 0.0300 - val_mae: 0.0180 - val_mse: 9.0331e-04 - learning_rate: 2.5000e-04\nEpoch 175/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0295 - mae: 0.0183 - mse: 8.7692e-04\nEpoch 175: val_loss improved from 0.03002 to 0.03000, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0295 - mae: 0.0183 - mse: 8.7663e-04 - val_loss: 0.0300 - val_mae: 0.0180 - val_mse: 9.0190e-04 - learning_rate: 2.5000e-04\nEpoch 176/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0295 - mae: 0.0183 - mse: 8.7676e-04\nEpoch 176: val_loss improved from 0.03000 to 0.02998, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0295 - mae: 0.0183 - mse: 8.7647e-04 - val_loss: 0.0300 - val_mae: 0.0180 - val_mse: 9.0089e-04 - learning_rate: 2.5000e-04\nEpoch 177/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0295 - mae: 0.0183 - mse: 8.7441e-04\nEpoch 177: val_loss improved from 0.02998 to 0.02997, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 774ms/step - loss: 0.0295 - mae: 0.0183 - mse: 8.7412e-04 - val_loss: 0.0300 - val_mae: 0.0179 - val_mse: 9.0027e-04 - learning_rate: 2.5000e-04\nEpoch 178/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 709ms/step - loss: 0.0294 - mae: 0.0183 - mse: 8.7216e-04\nEpoch 178: val_loss improved from 0.02997 to 0.02996, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 775ms/step - loss: 0.0294 - mae: 0.0183 - mse: 8.7186e-04 - val_loss: 0.0300 - val_mae: 0.0179 - val_mse: 8.9932e-04 - learning_rate: 2.5000e-04\nEpoch 179/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 709ms/step - loss: 0.0294 - mae: 0.0182 - mse: 8.7045e-04\nEpoch 179: val_loss improved from 0.02996 to 0.02993, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 775ms/step - loss: 0.0294 - mae: 0.0182 - mse: 8.7015e-04 - val_loss: 0.0299 - val_mae: 0.0179 - val_mse: 8.9758e-04 - learning_rate: 2.5000e-04\nEpoch 180/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0294 - mae: 0.0182 - mse: 8.6919e-04\nEpoch 180: val_loss improved from 0.02993 to 0.02989, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0294 - mae: 0.0182 - mse: 8.6892e-04 - val_loss: 0.0299 - val_mae: 0.0179 - val_mse: 8.9538e-04 - learning_rate: 2.5000e-04\nEpoch 181/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 709ms/step - loss: 0.0294 - mae: 0.0182 - mse: 8.6951e-04\nEpoch 181: val_loss did not improve from 0.02989\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 766ms/step - loss: 0.0294 - mae: 0.0182 - mse: 8.6923e-04 - val_loss: 0.0300 - val_mae: 0.0179 - val_mse: 8.9987e-04 - learning_rate: 2.5000e-04\nEpoch 182/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0294 - mae: 0.0182 - mse: 8.6858e-04\nEpoch 182: val_loss did not improve from 0.02989\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 766ms/step - loss: 0.0294 - mae: 0.0182 - mse: 8.6827e-04 - val_loss: 0.0299 - val_mae: 0.0179 - val_mse: 8.9832e-04 - learning_rate: 2.5000e-04\nEpoch 183/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0294 - mae: 0.0182 - mse: 8.6719e-04\nEpoch 183: val_loss did not improve from 0.02989\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 766ms/step - loss: 0.0294 - mae: 0.0182 - mse: 8.6690e-04 - val_loss: 0.0300 - val_mae: 0.0179 - val_mse: 8.9880e-04 - learning_rate: 2.5000e-04\nEpoch 184/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0294 - mae: 0.0183 - mse: 8.6892e-04\nEpoch 184: val_loss did not improve from 0.02989\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 766ms/step - loss: 0.0294 - mae: 0.0183 - mse: 8.6869e-04 - val_loss: 0.0300 - val_mae: 0.0180 - val_mse: 9.0194e-04 - learning_rate: 2.5000e-04\nEpoch 185/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0294 - mae: 0.0184 - mse: 8.7126e-04\nEpoch 185: val_loss did not improve from 0.02989\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 767ms/step - loss: 0.0294 - mae: 0.0184 - mse: 8.7093e-04 - val_loss: 0.0300 - val_mae: 0.0180 - val_mse: 9.0102e-04 - learning_rate: 2.5000e-04\nEpoch 186/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0295 - mae: 0.0184 - mse: 8.7221e-04\nEpoch 186: val_loss did not improve from 0.02989\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 766ms/step - loss: 0.0294 - mae: 0.0184 - mse: 8.7197e-04 - val_loss: 0.0300 - val_mae: 0.0181 - val_mse: 8.9945e-04 - learning_rate: 2.5000e-04\nEpoch 187/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0294 - mae: 0.0183 - mse: 8.6757e-04\nEpoch 187: val_loss did not improve from 0.02989\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 764ms/step - loss: 0.0294 - mae: 0.0183 - mse: 8.6731e-04 - val_loss: 0.0300 - val_mae: 0.0181 - val_mse: 9.0287e-04 - learning_rate: 2.5000e-04\nEpoch 188/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0294 - mae: 0.0184 - mse: 8.7066e-04\nEpoch 188: val_loss did not improve from 0.02989\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 768ms/step - loss: 0.0294 - mae: 0.0184 - mse: 8.7034e-04 - val_loss: 0.0299 - val_mae: 0.0180 - val_mse: 8.9639e-04 - learning_rate: 2.5000e-04\nEpoch 189/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0293 - mae: 0.0183 - mse: 8.6255e-04\nEpoch 189: val_loss improved from 0.02989 to 0.02986, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 776ms/step - loss: 0.0293 - mae: 0.0183 - mse: 8.6227e-04 - val_loss: 0.0299 - val_mae: 0.0179 - val_mse: 8.9369e-04 - learning_rate: 2.5000e-04\nEpoch 190/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0292 - mae: 0.0182 - mse: 8.5827e-04\nEpoch 190: val_loss improved from 0.02986 to 0.02983, saving model to cae_outputs/cae_best_weights.h5\n\nEpoch 190: ReduceLROnPlateau reducing learning rate to 0.0001250000059371814.\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 774ms/step - loss: 0.0292 - mae: 0.0182 - mse: 8.5797e-04 - val_loss: 0.0298 - val_mae: 0.0179 - val_mse: 8.9136e-04 - learning_rate: 2.5000e-04\nEpoch 191/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 709ms/step - loss: 0.0291 - mae: 0.0181 - mse: 8.5230e-04\nEpoch 191: val_loss improved from 0.02983 to 0.02974, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 776ms/step - loss: 0.0291 - mae: 0.0181 - mse: 8.5202e-04 - val_loss: 0.0297 - val_mae: 0.0178 - val_mse: 8.8635e-04 - learning_rate: 1.2500e-04\nEpoch 192/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0291 - mae: 0.0181 - mse: 8.5213e-04\nEpoch 192: val_loss improved from 0.02974 to 0.02972, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0291 - mae: 0.0181 - mse: 8.5184e-04 - val_loss: 0.0297 - val_mae: 0.0178 - val_mse: 8.8529e-04 - learning_rate: 1.2500e-04\nEpoch 193/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 713ms/step - loss: 0.0291 - mae: 0.0180 - mse: 8.5053e-04\nEpoch 193: val_loss improved from 0.02972 to 0.02971, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 780ms/step - loss: 0.0291 - mae: 0.0180 - mse: 8.5023e-04 - val_loss: 0.0297 - val_mae: 0.0178 - val_mse: 8.8452e-04 - learning_rate: 1.2500e-04\nEpoch 194/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0291 - mae: 0.0180 - mse: 8.4898e-04\nEpoch 194: val_loss improved from 0.02971 to 0.02970, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0291 - mae: 0.0180 - mse: 8.4869e-04 - val_loss: 0.0297 - val_mae: 0.0178 - val_mse: 8.8390e-04 - learning_rate: 1.2500e-04\nEpoch 195/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 713ms/step - loss: 0.0290 - mae: 0.0180 - mse: 8.4763e-04\nEpoch 195: val_loss improved from 0.02970 to 0.02969, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 779ms/step - loss: 0.0290 - mae: 0.0180 - mse: 8.4734e-04 - val_loss: 0.0297 - val_mae: 0.0177 - val_mse: 8.8332e-04 - learning_rate: 1.2500e-04\nEpoch 196/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 713ms/step - loss: 0.0290 - mae: 0.0180 - mse: 8.4632e-04\nEpoch 196: val_loss improved from 0.02969 to 0.02968, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 780ms/step - loss: 0.0290 - mae: 0.0180 - mse: 8.4604e-04 - val_loss: 0.0297 - val_mae: 0.0177 - val_mse: 8.8277e-04 - learning_rate: 1.2500e-04\nEpoch 197/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0290 - mae: 0.0180 - mse: 8.4516e-04\nEpoch 197: val_loss improved from 0.02968 to 0.02967, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0290 - mae: 0.0180 - mse: 8.4487e-04 - val_loss: 0.0297 - val_mae: 0.0177 - val_mse: 8.8222e-04 - learning_rate: 1.2500e-04\nEpoch 198/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 713ms/step - loss: 0.0290 - mae: 0.0180 - mse: 8.4407e-04\nEpoch 198: val_loss improved from 0.02967 to 0.02966, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 779ms/step - loss: 0.0290 - mae: 0.0180 - mse: 8.4378e-04 - val_loss: 0.0297 - val_mae: 0.0177 - val_mse: 8.8165e-04 - learning_rate: 1.2500e-04\nEpoch 199/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 709ms/step - loss: 0.0290 - mae: 0.0179 - mse: 8.4304e-04\nEpoch 199: val_loss improved from 0.02966 to 0.02965, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 776ms/step - loss: 0.0289 - mae: 0.0179 - mse: 8.4276e-04 - val_loss: 0.0297 - val_mae: 0.0177 - val_mse: 8.8112e-04 - learning_rate: 1.2500e-04\nEpoch 200/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0289 - mae: 0.0179 - mse: 8.4200e-04\nEpoch 200: val_loss improved from 0.02965 to 0.02965, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 774ms/step - loss: 0.0289 - mae: 0.0179 - mse: 8.4171e-04 - val_loss: 0.0296 - val_mae: 0.0177 - val_mse: 8.8062e-04 - learning_rate: 1.2500e-04\nEpoch 201/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0289 - mae: 0.0179 - mse: 8.4100e-04\nEpoch 201: val_loss improved from 0.02965 to 0.02964, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0289 - mae: 0.0179 - mse: 8.4072e-04 - val_loss: 0.0296 - val_mae: 0.0177 - val_mse: 8.8005e-04 - learning_rate: 1.2500e-04\nEpoch 202/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 713ms/step - loss: 0.0289 - mae: 0.0179 - mse: 8.3998e-04\nEpoch 202: val_loss improved from 0.02964 to 0.02963, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0289 - mae: 0.0179 - mse: 8.3970e-04 - val_loss: 0.0296 - val_mae: 0.0177 - val_mse: 8.7951e-04 - learning_rate: 1.2500e-04\nEpoch 203/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0289 - mae: 0.0179 - mse: 8.3897e-04\nEpoch 203: val_loss improved from 0.02963 to 0.02962, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0289 - mae: 0.0179 - mse: 8.3869e-04 - val_loss: 0.0296 - val_mae: 0.0177 - val_mse: 8.7897e-04 - learning_rate: 1.2500e-04\nEpoch 204/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 709ms/step - loss: 0.0289 - mae: 0.0179 - mse: 8.3796e-04\nEpoch 204: val_loss improved from 0.02962 to 0.02961, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 775ms/step - loss: 0.0289 - mae: 0.0179 - mse: 8.3767e-04 - val_loss: 0.0296 - val_mae: 0.0177 - val_mse: 8.7840e-04 - learning_rate: 1.2500e-04\nEpoch 205/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 709ms/step - loss: 0.0288 - mae: 0.0179 - mse: 8.3695e-04\nEpoch 205: val_loss improved from 0.02961 to 0.02960, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 775ms/step - loss: 0.0288 - mae: 0.0179 - mse: 8.3666e-04 - val_loss: 0.0296 - val_mae: 0.0177 - val_mse: 8.7783e-04 - learning_rate: 1.2500e-04\nEpoch 206/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0288 - mae: 0.0179 - mse: 8.3598e-04\nEpoch 206: val_loss improved from 0.02960 to 0.02959, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 779ms/step - loss: 0.0288 - mae: 0.0179 - mse: 8.3570e-04 - val_loss: 0.0296 - val_mae: 0.0177 - val_mse: 8.7739e-04 - learning_rate: 1.2500e-04\nEpoch 207/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0288 - mae: 0.0179 - mse: 8.3506e-04\nEpoch 207: val_loss improved from 0.02959 to 0.02958, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0288 - mae: 0.0179 - mse: 8.3478e-04 - val_loss: 0.0296 - val_mae: 0.0177 - val_mse: 8.7689e-04 - learning_rate: 1.2500e-04\nEpoch 208/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0288 - mae: 0.0179 - mse: 8.3423e-04\nEpoch 208: val_loss improved from 0.02958 to 0.02957, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0288 - mae: 0.0179 - mse: 8.3395e-04 - val_loss: 0.0296 - val_mae: 0.0176 - val_mse: 8.7636e-04 - learning_rate: 1.2500e-04\nEpoch 209/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0288 - mae: 0.0178 - mse: 8.3342e-04\nEpoch 209: val_loss improved from 0.02957 to 0.02957, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 774ms/step - loss: 0.0288 - mae: 0.0178 - mse: 8.3314e-04 - val_loss: 0.0296 - val_mae: 0.0176 - val_mse: 8.7596e-04 - learning_rate: 1.2500e-04\nEpoch 210/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 709ms/step - loss: 0.0288 - mae: 0.0178 - mse: 8.3263e-04\nEpoch 210: val_loss improved from 0.02957 to 0.02956, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 775ms/step - loss: 0.0288 - mae: 0.0178 - mse: 8.3235e-04 - val_loss: 0.0296 - val_mae: 0.0176 - val_mse: 8.7551e-04 - learning_rate: 1.2500e-04\nEpoch 211/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0288 - mae: 0.0178 - mse: 8.3183e-04\nEpoch 211: val_loss improved from 0.02956 to 0.02955, saving model to cae_outputs/cae_best_weights.h5\n\nEpoch 211: ReduceLROnPlateau reducing learning rate to 6.25000029685907e-05.\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0288 - mae: 0.0178 - mse: 8.3155e-04 - val_loss: 0.0295 - val_mae: 0.0176 - val_mse: 8.7488e-04 - learning_rate: 1.2500e-04\nEpoch 212/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0287 - mae: 0.0178 - mse: 8.3117e-04\nEpoch 212: val_loss did not improve from 0.02955\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 767ms/step - loss: 0.0287 - mae: 0.0178 - mse: 8.3090e-04 - val_loss: 0.0296 - val_mae: 0.0176 - val_mse: 8.7502e-04 - learning_rate: 6.2500e-05\nEpoch 213/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 713ms/step - loss: 0.0287 - mae: 0.0178 - mse: 8.3114e-04\nEpoch 213: val_loss improved from 0.02955 to 0.02954, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 779ms/step - loss: 0.0287 - mae: 0.0178 - mse: 8.3086e-04 - val_loss: 0.0295 - val_mae: 0.0176 - val_mse: 8.7458e-04 - learning_rate: 6.2500e-05\nEpoch 214/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0287 - mae: 0.0178 - mse: 8.3025e-04\nEpoch 214: val_loss improved from 0.02954 to 0.02954, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 773ms/step - loss: 0.0287 - mae: 0.0178 - mse: 8.2997e-04 - val_loss: 0.0295 - val_mae: 0.0176 - val_mse: 8.7441e-04 - learning_rate: 6.2500e-05\nEpoch 215/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0287 - mae: 0.0178 - mse: 8.2960e-04\nEpoch 215: val_loss improved from 0.02954 to 0.02954, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0287 - mae: 0.0178 - mse: 8.2932e-04 - val_loss: 0.0295 - val_mae: 0.0176 - val_mse: 8.7419e-04 - learning_rate: 6.2500e-05\nEpoch 216/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 714ms/step - loss: 0.0287 - mae: 0.0178 - mse: 8.2898e-04\nEpoch 216: val_loss improved from 0.02954 to 0.02953, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 780ms/step - loss: 0.0287 - mae: 0.0178 - mse: 8.2870e-04 - val_loss: 0.0295 - val_mae: 0.0176 - val_mse: 8.7387e-04 - learning_rate: 6.2500e-05\nEpoch 217/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0287 - mae: 0.0178 - mse: 8.2834e-04\nEpoch 217: val_loss improved from 0.02953 to 0.02953, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 776ms/step - loss: 0.0287 - mae: 0.0178 - mse: 8.2806e-04 - val_loss: 0.0295 - val_mae: 0.0176 - val_mse: 8.7360e-04 - learning_rate: 6.2500e-05\nEpoch 218/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0287 - mae: 0.0178 - mse: 8.2774e-04\nEpoch 218: val_loss improved from 0.02953 to 0.02952, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 774ms/step - loss: 0.0287 - mae: 0.0178 - mse: 8.2746e-04 - val_loss: 0.0295 - val_mae: 0.0176 - val_mse: 8.7334e-04 - learning_rate: 6.2500e-05\nEpoch 219/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0287 - mae: 0.0178 - mse: 8.2717e-04\nEpoch 219: val_loss improved from 0.02952 to 0.02952, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 774ms/step - loss: 0.0287 - mae: 0.0178 - mse: 8.2689e-04 - val_loss: 0.0295 - val_mae: 0.0176 - val_mse: 8.7310e-04 - learning_rate: 6.2500e-05\nEpoch 220/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0287 - mae: 0.0178 - mse: 8.2659e-04\nEpoch 220: val_loss improved from 0.02952 to 0.02951, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0287 - mae: 0.0178 - mse: 8.2631e-04 - val_loss: 0.0295 - val_mae: 0.0176 - val_mse: 8.7285e-04 - learning_rate: 6.2500e-05\nEpoch 221/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 714ms/step - loss: 0.0287 - mae: 0.0178 - mse: 8.2603e-04\nEpoch 221: val_loss improved from 0.02951 to 0.02951, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 781ms/step - loss: 0.0287 - mae: 0.0178 - mse: 8.2575e-04 - val_loss: 0.0295 - val_mae: 0.0176 - val_mse: 8.7259e-04 - learning_rate: 6.2500e-05\nEpoch 222/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0286 - mae: 0.0178 - mse: 8.2546e-04\nEpoch 222: val_loss improved from 0.02951 to 0.02950, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0286 - mae: 0.0178 - mse: 8.2518e-04 - val_loss: 0.0295 - val_mae: 0.0176 - val_mse: 8.7232e-04 - learning_rate: 6.2500e-05\nEpoch 223/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0286 - mae: 0.0178 - mse: 8.2489e-04\nEpoch 223: val_loss improved from 0.02950 to 0.02950, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 774ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.2462e-04 - val_loss: 0.0295 - val_mae: 0.0176 - val_mse: 8.7204e-04 - learning_rate: 6.2500e-05\nEpoch 224/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.2435e-04\nEpoch 224: val_loss improved from 0.02950 to 0.02950, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 774ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.2407e-04 - val_loss: 0.0295 - val_mae: 0.0176 - val_mse: 8.7180e-04 - learning_rate: 6.2500e-05\nEpoch 225/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.2384e-04\nEpoch 225: val_loss improved from 0.02950 to 0.02949, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.2357e-04 - val_loss: 0.0295 - val_mae: 0.0176 - val_mse: 8.7166e-04 - learning_rate: 6.2500e-05\nEpoch 226/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.2336e-04\nEpoch 226: val_loss improved from 0.02949 to 0.02949, saving model to cae_outputs/cae_best_weights.h5\n\nEpoch 226: ReduceLROnPlateau reducing learning rate to 3.125000148429535e-05.\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 775ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.2308e-04 - val_loss: 0.0295 - val_mae: 0.0176 - val_mse: 8.7144e-04 - learning_rate: 6.2500e-05\nEpoch 227/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.2280e-04\nEpoch 227: val_loss improved from 0.02949 to 0.02948, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.2252e-04 - val_loss: 0.0295 - val_mae: 0.0175 - val_mse: 8.7076e-04 - learning_rate: 3.1250e-05\nEpoch 228/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.2207e-04\nEpoch 228: val_loss improved from 0.02948 to 0.02947, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.2179e-04 - val_loss: 0.0295 - val_mae: 0.0175 - val_mse: 8.7043e-04 - learning_rate: 3.1250e-05\nEpoch 229/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 713ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.2156e-04\nEpoch 229: val_loss improved from 0.02947 to 0.02947, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 779ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.2129e-04 - val_loss: 0.0295 - val_mae: 0.0175 - val_mse: 8.7026e-04 - learning_rate: 3.1250e-05\nEpoch 230/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.2120e-04\nEpoch 230: val_loss improved from 0.02947 to 0.02947, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.2092e-04 - val_loss: 0.0295 - val_mae: 0.0175 - val_mse: 8.7010e-04 - learning_rate: 3.1250e-05\nEpoch 231/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.2085e-04\nEpoch 231: val_loss improved from 0.02947 to 0.02946, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.2058e-04 - val_loss: 0.0295 - val_mae: 0.0175 - val_mse: 8.6995e-04 - learning_rate: 3.1250e-05\nEpoch 232/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.2052e-04\nEpoch 232: val_loss improved from 0.02946 to 0.02946, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.2024e-04 - val_loss: 0.0295 - val_mae: 0.0175 - val_mse: 8.6979e-04 - learning_rate: 3.1250e-05\nEpoch 233/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.2019e-04\nEpoch 233: val_loss improved from 0.02946 to 0.02946, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.1992e-04 - val_loss: 0.0295 - val_mae: 0.0175 - val_mse: 8.6963e-04 - learning_rate: 3.1250e-05\nEpoch 234/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0286 - mae: 0.0177 - mse: 8.1987e-04\nEpoch 234: val_loss improved from 0.02946 to 0.02946, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1960e-04 - val_loss: 0.0295 - val_mae: 0.0175 - val_mse: 8.6948e-04 - learning_rate: 3.1250e-05\nEpoch 235/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1957e-04\nEpoch 235: val_loss improved from 0.02946 to 0.02945, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1929e-04 - val_loss: 0.0295 - val_mae: 0.0175 - val_mse: 8.6931e-04 - learning_rate: 3.1250e-05\nEpoch 236/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1926e-04\nEpoch 236: val_loss improved from 0.02945 to 0.02945, saving model to cae_outputs/cae_best_weights.h5\n\nEpoch 236: ReduceLROnPlateau reducing learning rate to 1.5625000742147677e-05.\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 779ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1899e-04 - val_loss: 0.0295 - val_mae: 0.0175 - val_mse: 8.6914e-04 - learning_rate: 3.1250e-05\nEpoch 237/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1868e-04\nEpoch 237: val_loss improved from 0.02945 to 0.02944, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1841e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6866e-04 - learning_rate: 1.5625e-05\nEpoch 238/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1815e-04\nEpoch 238: val_loss improved from 0.02944 to 0.02944, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1788e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6853e-04 - learning_rate: 1.5625e-05\nEpoch 239/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 713ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1796e-04\nEpoch 239: val_loss improved from 0.02944 to 0.02944, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 779ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1769e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6844e-04 - learning_rate: 1.5625e-05\nEpoch 240/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1779e-04\nEpoch 240: val_loss improved from 0.02944 to 0.02944, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1752e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6836e-04 - learning_rate: 1.5625e-05\nEpoch 241/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1762e-04\nEpoch 241: val_loss improved from 0.02944 to 0.02944, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1735e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6829e-04 - learning_rate: 1.5625e-05\nEpoch 242/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 713ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1745e-04\nEpoch 242: val_loss improved from 0.02944 to 0.02944, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 780ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1718e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6822e-04 - learning_rate: 1.5625e-05\nEpoch 243/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1729e-04\nEpoch 243: val_loss improved from 0.02944 to 0.02943, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1702e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6814e-04 - learning_rate: 1.5625e-05\nEpoch 244/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1713e-04\nEpoch 244: val_loss improved from 0.02943 to 0.02943, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 776ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1686e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6807e-04 - learning_rate: 1.5625e-05\nEpoch 245/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1697e-04\nEpoch 245: val_loss improved from 0.02943 to 0.02943, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1670e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6800e-04 - learning_rate: 1.5625e-05\nEpoch 246/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1681e-04\nEpoch 246: val_loss improved from 0.02943 to 0.02943, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 776ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1654e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6792e-04 - learning_rate: 1.5625e-05\nEpoch 247/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1665e-04\nEpoch 247: val_loss improved from 0.02943 to 0.02943, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1638e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6786e-04 - learning_rate: 1.5625e-05\nEpoch 248/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1649e-04\nEpoch 248: val_loss improved from 0.02943 to 0.02943, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1623e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6779e-04 - learning_rate: 1.5625e-05\nEpoch 249/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1634e-04\nEpoch 249: val_loss improved from 0.02943 to 0.02943, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1607e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6772e-04 - learning_rate: 1.5625e-05\nEpoch 250/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0285 - mae: 0.0177 - mse: 8.1618e-04\nEpoch 250: val_loss improved from 0.02943 to 0.02943, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1591e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6766e-04 - learning_rate: 1.5625e-05\nEpoch 251/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1602e-04\nEpoch 251: val_loss improved from 0.02943 to 0.02942, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1575e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6759e-04 - learning_rate: 1.5625e-05\nEpoch 252/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1586e-04\nEpoch 252: val_loss improved from 0.02942 to 0.02942, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1559e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6752e-04 - learning_rate: 1.5625e-05\nEpoch 253/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1570e-04\nEpoch 253: val_loss improved from 0.02942 to 0.02942, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 776ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1544e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6745e-04 - learning_rate: 1.5625e-05\nEpoch 254/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1555e-04\nEpoch 254: val_loss improved from 0.02942 to 0.02942, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 776ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1528e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6738e-04 - learning_rate: 1.5625e-05\nEpoch 255/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 709ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1539e-04\nEpoch 255: val_loss improved from 0.02942 to 0.02942, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 775ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1512e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6731e-04 - learning_rate: 1.5625e-05\nEpoch 256/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 709ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1523e-04\nEpoch 256: val_loss improved from 0.02942 to 0.02942, saving model to cae_outputs/cae_best_weights.h5\n\nEpoch 256: ReduceLROnPlateau reducing learning rate to 7.812500371073838e-06.\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 776ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1497e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6724e-04 - learning_rate: 1.5625e-05\nEpoch 257/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1495e-04\nEpoch 257: val_loss improved from 0.02942 to 0.02941, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 776ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1468e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6656e-04 - learning_rate: 7.8125e-06\nEpoch 258/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1473e-04\nEpoch 258: val_loss improved from 0.02941 to 0.02941, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1446e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6651e-04 - learning_rate: 7.8125e-06\nEpoch 259/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1464e-04\nEpoch 259: val_loss improved from 0.02941 to 0.02941, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1437e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6647e-04 - learning_rate: 7.8125e-06\nEpoch 260/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 713ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1455e-04\nEpoch 260: val_loss improved from 0.02941 to 0.02941, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 779ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1428e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6643e-04 - learning_rate: 7.8125e-06\nEpoch 261/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 713ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1446e-04\nEpoch 261: val_loss improved from 0.02941 to 0.02940, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 779ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1419e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6639e-04 - learning_rate: 7.8125e-06\nEpoch 262/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1437e-04\nEpoch 262: val_loss improved from 0.02940 to 0.02940, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1410e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6635e-04 - learning_rate: 7.8125e-06\nEpoch 263/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 713ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1428e-04\nEpoch 263: val_loss improved from 0.02940 to 0.02940, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 780ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1401e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6631e-04 - learning_rate: 7.8125e-06\nEpoch 264/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1419e-04\nEpoch 264: val_loss improved from 0.02940 to 0.02940, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 779ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1392e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6627e-04 - learning_rate: 7.8125e-06\nEpoch 265/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1410e-04\nEpoch 265: val_loss improved from 0.02940 to 0.02940, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1383e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6623e-04 - learning_rate: 7.8125e-06\nEpoch 266/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0285 - mae: 0.0176 - mse: 8.1401e-04\nEpoch 266: val_loss improved from 0.02940 to 0.02940, saving model to cae_outputs/cae_best_weights.h5\n\nEpoch 266: ReduceLROnPlateau reducing learning rate to 3.906250185536919e-06.\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1375e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6619e-04 - learning_rate: 7.8125e-06\nEpoch 267/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 713ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1387e-04\nEpoch 267: val_loss improved from 0.02940 to 0.02940, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 780ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1361e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6591e-04 - learning_rate: 3.9063e-06\nEpoch 268/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1376e-04\nEpoch 268: val_loss improved from 0.02940 to 0.02940, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 778ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1349e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6590e-04 - learning_rate: 3.9063e-06\nEpoch 269/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1370e-04\nEpoch 269: val_loss improved from 0.02940 to 0.02940, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1343e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6588e-04 - learning_rate: 3.9063e-06\nEpoch 270/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1365e-04\nEpoch 270: val_loss improved from 0.02940 to 0.02940, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1338e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6585e-04 - learning_rate: 3.9063e-06\nEpoch 271/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1360e-04\nEpoch 271: val_loss improved from 0.02940 to 0.02939, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 776ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1334e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6582e-04 - learning_rate: 3.9063e-06\nEpoch 272/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1356e-04\nEpoch 272: val_loss improved from 0.02939 to 0.02939, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 774ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1329e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6580e-04 - learning_rate: 3.9063e-06\nEpoch 273/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 709ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1351e-04\nEpoch 273: val_loss improved from 0.02939 to 0.02939, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 775ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1325e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6577e-04 - learning_rate: 3.9063e-06\nEpoch 274/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1347e-04\nEpoch 274: val_loss improved from 0.02939 to 0.02939, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 774ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1320e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6574e-04 - learning_rate: 3.9063e-06\nEpoch 275/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1342e-04\nEpoch 275: val_loss improved from 0.02939 to 0.02939, saving model to cae_outputs/cae_best_weights.h5\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1315e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6572e-04 - learning_rate: 3.9063e-06\nEpoch 276/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1337e-04\nEpoch 276: val_loss improved from 0.02939 to 0.02939, saving model to cae_outputs/cae_best_weights.h5\n\nEpoch 276: ReduceLROnPlateau reducing learning rate to 1.9531250927684596e-06.\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 777ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1311e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6569e-04 - learning_rate: 3.9063e-06\nEpoch 277/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1327e-04\nEpoch 277: val_loss did not improve from 0.02939\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 768ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1301e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6588e-04 - learning_rate: 1.9531e-06\nEpoch 278/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1320e-04\nEpoch 278: val_loss did not improve from 0.02939\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 768ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1294e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6588e-04 - learning_rate: 1.9531e-06\nEpoch 279/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1318e-04\nEpoch 279: val_loss did not improve from 0.02939\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 766ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1291e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6586e-04 - learning_rate: 1.9531e-06\nEpoch 280/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1315e-04\nEpoch 280: val_loss did not improve from 0.02939\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1289e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6584e-04 - learning_rate: 1.9531e-06\nEpoch 281/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 708ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1313e-04\nEpoch 281: val_loss did not improve from 0.02939\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 764ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1286e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6583e-04 - learning_rate: 1.9531e-06\nEpoch 282/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1310e-04\nEpoch 282: val_loss did not improve from 0.02939\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 767ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1283e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6581e-04 - learning_rate: 1.9531e-06\nEpoch 283/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 713ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1307e-04\nEpoch 283: val_loss did not improve from 0.02939\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 769ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1281e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6579e-04 - learning_rate: 1.9531e-06\nEpoch 284/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 712ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1305e-04\nEpoch 284: val_loss did not improve from 0.02939\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 768ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1278e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6577e-04 - learning_rate: 1.9531e-06\nEpoch 285/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 709ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1302e-04\nEpoch 285: val_loss did not improve from 0.02939\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 765ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1276e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6575e-04 - learning_rate: 1.9531e-06\nEpoch 286/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1300e-04\nEpoch 286: val_loss did not improve from 0.02939\n\nEpoch 286: ReduceLROnPlateau reducing learning rate to 9.765625463842298e-07.\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1273e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6573e-04 - learning_rate: 1.9531e-06\nEpoch 287/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1294e-04\nEpoch 287: val_loss did not improve from 0.02939\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1268e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6578e-04 - learning_rate: 9.7656e-07\nEpoch 288/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 709ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1292e-04\nEpoch 288: val_loss did not improve from 0.02939\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 765ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1265e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6576e-04 - learning_rate: 9.7656e-07\nEpoch 289/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1290e-04\nEpoch 289: val_loss did not improve from 0.02939\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 767ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1264e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6576e-04 - learning_rate: 9.7656e-07\nEpoch 290/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 713ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1289e-04\nEpoch 290: val_loss did not improve from 0.02939\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 769ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1262e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6575e-04 - learning_rate: 9.7656e-07\nEpoch 291/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1288e-04\nEpoch 291: val_loss did not improve from 0.02939\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1261e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6574e-04 - learning_rate: 9.7656e-07\nEpoch 292/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 707ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1286e-04\nEpoch 292: val_loss did not improve from 0.02939\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 763ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1260e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6573e-04 - learning_rate: 9.7656e-07\nEpoch 293/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 714ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1285e-04\nEpoch 293: val_loss did not improve from 0.02939\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 770ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1258e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6573e-04 - learning_rate: 9.7656e-07\nEpoch 294/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 711ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1284e-04\nEpoch 294: val_loss did not improve from 0.02939\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 766ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1257e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6572e-04 - learning_rate: 9.7656e-07\nEpoch 295/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 706ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1282e-04\nEpoch 295: val_loss did not improve from 0.02939\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 762ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1256e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6571e-04 - learning_rate: 9.7656e-07\nEpoch 296/500\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 710ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1281e-04\nEpoch 296: val_loss did not improve from 0.02939\n\nEpoch 296: ReduceLROnPlateau reducing learning rate to 4.882812731921149e-07.\n\u001b[1m36/36\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 767ms/step - loss: 0.0284 - mae: 0.0176 - mse: 8.1254e-04 - val_loss: 0.0294 - val_mae: 0.0175 - val_mse: 8.6570e-04 - learning_rate: 9.7656e-07\nEpoch 296: early stopping\nRestoring model weights from the end of the best epoch: 276.\n\nTraining completed in 138.96 minutes\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1500x1000 with 4 Axes>","image/png":"\n"},"metadata":{}},{"name":"stdout","text":"Training history saved: cae_outputs/training_history.png\nLoaded best model weights from: cae_outputs/cae_best_weights.h5\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1600x600 with 24 Axes>","image/png":"\n"},"metadata":{}},{"name":"stdout","text":"Reconstruction comparison saved: cae_outputs/reconstruction_comparison.png\n\n📊 Evaluating model performance on test set...\n\u001b[1m8/8\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m16s\u001b[0m 2s/step \nTest Set Performance:\n  MSE: 0.000928\n  MAE: 0.018383\n  RMSE: 0.030462\n  NRMSE: 0.030462\n  PSNR: 30.32 dB\nFinal model saved: cae_outputs/cae_final_model.h5\n\n✅ Pipeline completed successfully in 139.78 minutes\nAll outputs saved in: cae_outputs\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"# =========================================================\n# Apple Leaf Segmentation — Few-Shot Learning + Convolutional Autoencoder\n# Uses same data path and structure as original code\n# =========================================================\nimport os\nos.environ[\"TF_CPP_MIN_LOG_LEVEL\"] = \"2\"\nos.environ[\"TF_ENABLE_ONEDNN_OPTS\"] = \"0\"\nos.environ[\"TF_DISABLE_PROFILER\"] = \"1\"\n\nimport cv2\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom tqdm import tqdm\nfrom sklearn.model_selection import train_test_split\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nimport pandas as pd\nimport time\nimport random\nimport json\n\n# ============ Config ============\nBASE_DIR    = \"/kaggle/input/apple-dataset/ATLDSD\"   # <--- change if needed\nIMG_SIZE    = 224  # Reduced from 256 to save memory\nBATCH_SIZE  = 4    # Reduced from 8 to save memory\nEPOCHS      = 40\nSEED        = 2025\n\nOUTDIR = \"outputs\"\nSKIP_TRAIN_IF_CKPT = True\n\n# Few-Shot Learning specific configs\nN_WAY = 6           # Number of classes (including background)\nK_SHOT = 2          # Reduced from 3 to save memory\nSUPPORT_SET_SIZE = N_WAY * K_SHOT\nEMBEDDING_DIM = 32  # Reduced from 64 to save memory\nPROTOTYPE_EPISODES = 30  # Reduced from 50 for faster training\n\n# Convolutional Autoencoder configs\nLATENT_DIM = 32     # Reduced from 64 to save memory\nRECONSTRUCTION_WEIGHT = 1.0\nSEGMENTATION_WEIGHT = 2.0\n\n# Training knobs\nAUTO_CLASS_WEIGHTS    = True\nUSE_TTA_IN_VIZ        = True\nOVERSAMPLE_DISEASE    = True\nTOLERANT_LABEL_COLORS = True\n\n# Inference on a single new image after training\nDO_INFERENCE_AFTER_TRAIN = True\nTEST_IMAGE_PATH = \"/kaggle/input/test-data/apple disease 1.jpg\"  # <--- change or set to None\nOVERLAY_ALPHA = 0.45\n\nrandom.seed(SEED); np.random.seed(SEED); tf.random.set_seed(SEED)\n\nCLASS_NAMES = [\n    \"Background\",           # 0\n    \"Healthy\",              # 1\n    \"Brown spot\",           # 2\n    \"Alternaria leaf spot\", # 3\n    \"Gray spot\",            # 4\n    \"Rust\"                  # 5\n]\nNUM_CLASSES = len(CLASS_NAMES)\n\nCOLOR_MAP = {\n    (0,   0,   0): 0,   # Background\n    (128, 0,   0): 1,   # Healthy\n    (128, 0, 128): 2,   # Brown spot\n    (128,128,  0): 3,   # Alternaria\n    (0,   0, 128): 4,   # Gray\n    (0, 128,   0): 5,   # Rust\n}\n\n# default weights (overridden if AUTO_CLASS_WEIGHTS)\nCLASS_WEIGHTS = tf.constant([0.25, 0.7, 1.1, 1.1, 1.1, 1.2], dtype=tf.float32)\n\n# ============ Utils ============\ndef set_gpu_growth():\n    try:\n        gpus = tf.config.list_physical_devices('GPU')\n        if gpus:\n            for g in gpus:\n                tf.config.experimental.set_memory_growth(g, True)\n            print(f\"GPU found: {len(gpus)}; memory growth enabled\")\n        else:\n            print(\"No GPU detected; running on CPU\")\n    except Exception as e:\n        print(\"GPU mem-growth not set:\", e)\nset_gpu_growth()\n\ndef clear_tf_memory():\n    \"\"\"Clear TensorFlow GPU memory\"\"\"\n    tf.keras.backend.clear_session()\n    import gc\n    gc.collect()\n\ndef rgb_mask_to_classes(mask_rgb, tol=10):\n    \"\"\"Map RGB to class ids; if TOLERANT_LABEL_COLORS=True, allow a tolerance on RGB values.\"\"\"\n    if not TOLERANT_LABEL_COLORS:\n        out = np.zeros(mask_rgb.shape[:2], dtype=np.uint8)\n        R, G, B = mask_rgb[...,0], mask_rgb[...,1], mask_rgb[...,2]\n        for (r,g,b), cls in COLOR_MAP.items():\n            m = (R == r) & (G == g) & (B == b)\n            out[m] = cls\n        return out\n    else:\n        out = np.zeros(mask_rgb.shape[:2], dtype=np.uint8)\n        for (r,g,b), cls in COLOR_MAP.items():\n            diff = np.abs(mask_rgb - np.array([r,g,b], np.uint8))\n            m = (diff[...,0] <= tol) & (diff[...,1] <= tol) & (diff[...,2] <= tol)\n            out[m] = cls\n        return out\n\nPALETTE = {0:(0,0,0), 1:(128,0,0), 2:(128,0,128), 3:(128,128,0), 4:(0,0,128), 5:(0,128,0)}\ndef mask_to_color(mask):\n    h,w = mask.shape\n    out = np.zeros((h,w,3), dtype=np.uint8)\n    for c, col in PALETTE.items():\n        out[mask==c] = col\n    return out\n\n# ============ Dataset ============\nclass AppleLeafDataset:\n    IMG_EXTS = (\".png\",\".jpg\",\".jpeg\",\".bmp\",\".tif\",\".tiff\")\n    def __init__(self, base_dir, image_size=224):\n        self.base_dir = base_dir\n        self.image_size = image_size\n        self.image_paths, self.mask_paths = self._discover_pairs()\n        print(f\"Paired samples: {len(self.image_paths)}\")\n\n    def _list_images(self, d):\n        acc = []\n        for r,_,fs in os.walk(d):\n            for f in fs:\n                if f.lower().endswith(self.IMG_EXTS):\n                    acc.append(os.path.join(r,f))\n        return acc\n\n    def _discover_pairs(self):\n        imgs, msks = [], []\n        if not os.path.exists(self.base_dir):\n            raise FileNotFoundError(f\"Base dir not found: {self.base_dir}\")\n        for cls_folder in sorted(os.listdir(self.base_dir)):\n            cpath = os.path.join(self.base_dir, cls_folder)\n            if not os.path.isdir(cpath): continue\n            img_dir = os.path.join(cpath, \"image\")\n            msk_dir = os.path.join(cpath, \"label\")\n            if not (os.path.exists(img_dir) and os.path.exists(msk_dir)): continue\n\n            img_files = self._list_images(img_dir)\n            msk_files = self._list_images(msk_dir)\n            img_by = {os.path.splitext(os.path.basename(p))[0].lower(): p for p in img_files}\n            msk_by = {os.path.splitext(os.path.basename(p))[0].lower(): p for p in msk_files}\n            common = sorted(set(img_by) & set(msk_by))\n            print(f\"{cls_folder:20} | imgs:{len(img_files):4d} | masks:{len(msk_files):4d} | paired:{len(common):4d}\")\n            for s in common: imgs.append(img_by[s]); msks.append(msk_by[s])\n        return imgs, msks\n\n    def load(self):\n        X, Y = [], []\n        for ip, mp in tqdm(list(zip(self.image_paths, self.mask_paths)), desc=\"Loading data\"):\n            img = cv2.imread(ip, cv2.IMREAD_COLOR)\n            if img is None: continue\n            img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n            img = cv2.resize(img, (self.image_size, self.image_size), interpolation=cv2.INTER_AREA)\n            img = img.astype(np.float32)/255.0\n\n            msk = cv2.imread(mp, cv2.IMREAD_COLOR)\n            if msk is None: continue\n            msk = cv2.cvtColor(msk, cv2.COLOR_BGR2RGB)\n            msk = cv2.resize(msk, (self.image_size, self.image_size), interpolation=cv2.INTER_NEAREST)\n            msk = rgb_mask_to_classes(msk)\n\n            X.append(img); Y.append(msk)\n        return np.asarray(X, np.float32), np.asarray(Y, np.uint8)\n\n# ============ Few-Shot Learning Prototypical Network ============\ndef build_pixel_feature_extractor(input_shape, embedding_dim=64):\n    \"\"\"Feature extractor that preserves spatial dimensions for pixel-wise features\"\"\"\n    inputs = keras.Input(shape=input_shape)\n    \n    # Encoder path - preserving spatial dimensions\n    x = layers.Conv2D(32, 3, padding='same', activation='relu')(inputs)  # Reduced from 64\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(32, 3, padding='same', activation='relu')(x)  # Reduced from 64\n    x = layers.BatchNormalization()(x)\n    x = layers.MaxPooling2D(2)(x)  # 112x112\n    \n    x = layers.Conv2D(64, 3, padding='same', activation='relu')(x)  # Reduced from 128\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(64, 3, padding='same', activation='relu')(x)  # Reduced from 128\n    x = layers.BatchNormalization()(x)\n    x = layers.MaxPooling2D(2)(x)  # 56x56\n    \n    x = layers.Conv2D(128, 3, padding='same', activation='relu')(x)  # Reduced from 256\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(128, 3, padding='same', activation='relu')(x)  # Reduced from 256\n    x = layers.BatchNormalization()(x)\n    \n    # Convert to embedding dimension while preserving spatial structure\n    features = layers.Conv2D(embedding_dim, 1, activation='relu')(x)\n    features = layers.BatchNormalization()(features)\n    \n    return keras.Model(inputs, features, name=\"PixelFeatureExtractor\")\n\ndef build_few_shot_segmentation_network(input_shape, num_classes, embedding_dim=32):\n    \"\"\"Simplified few-shot segmentation network using metric learning\"\"\"\n    inputs = keras.Input(shape=input_shape)\n    \n    # Simplified encoder path\n    x = layers.Conv2D(16, 3, padding='same', activation='relu')(inputs)  # Reduced from 32\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(16, 3, padding='same', activation='relu')(x)  # Reduced from 32\n    x = layers.BatchNormalization()(x)\n    s1 = x\n    x = layers.MaxPooling2D(2)(x)  # 112x112\n    \n    x = layers.Conv2D(32, 3, padding='same', activation='relu')(x)  # Reduced from 64\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(32, 3, padding='same', activation='relu')(x)  # Reduced from 64\n    x = layers.BatchNormalization()(x)\n    s2 = x\n    x = layers.MaxPooling2D(2)(x)  # 56x56\n    \n    x = layers.Conv2D(64, 3, padding='same', activation='relu')(x)  # Reduced from 128\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(64, 3, padding='same', activation='relu')(x)  # Reduced from 128\n    x = layers.BatchNormalization()(x)\n    s3 = x\n    \n    # Simplified decoder with skip connections\n    x = layers.Conv2DTranspose(32, 3, strides=2, padding='same', activation='relu')(x)  # 112x112\n    x = layers.Concatenate()([x, s2])\n    x = layers.Conv2D(32, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    \n    x = layers.Conv2DTranspose(16, 3, strides=2, padding='same', activation='relu')(x)   # 224x224\n    x = layers.Concatenate()([x, s1])\n    x = layers.Conv2D(16, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    \n    # Feature embedding layer (for metric learning)\n    features = layers.Conv2D(embedding_dim, 3, padding='same', activation='relu')(x)\n    features = layers.BatchNormalization(name='feature_embeddings')(features)\n    \n    # Classification head\n    outputs = layers.Conv2D(num_classes, 1, activation='softmax')(features)\n    \n    model = keras.Model(inputs, outputs, name=\"FewShotSegNet\")\n    return model\n\n# ============ Convolutional Autoencoder ============\n\n# ============ Convolutional Autoencoder ============\ndef build_conv_autoencoder(input_shape, latent_dim=32, num_classes=6):\n    \"\"\"Simplified Convolutional Autoencoder for feature learning and segmentation\"\"\"\n    inputs = keras.Input(shape=input_shape)\n    \n    # Encoder\n    x = layers.Conv2D(16, 3, strides=2, padding='same', activation='relu')(inputs)  # 112x112, reduced from 32\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(32, 3, strides=2, padding='same', activation='relu')(x)      # 56x56, reduced from 64\n    x = layers.BatchNormalization()(x)\n    e1 = x\n    \n    x = layers.Conv2D(64, 3, strides=2, padding='same', activation='relu')(x)     # 28x28, reduced from 128\n    x = layers.BatchNormalization()(x)\n    e2 = x\n    \n    x = layers.Conv2D(128, 3, strides=2, padding='same', activation='relu')(x)     # 14x14, reduced from 256\n    x = layers.BatchNormalization()(x)\n    e3 = x\n    \n    # Bottleneck (latent representation)\n    x = layers.Flatten()(x)\n    latent = layers.Dense(latent_dim, activation='relu', name='latent_representation')(x)\n    x = layers.Dense(14 * 14 * 128, activation='relu')(latent)  # Adjusted for reduced dimensions\n    x = layers.Reshape((14, 14, 128))(x)\n    \n    # Decoder for reconstruction\n    x_recon = layers.Conv2DTranspose(128, 3, strides=2, padding='same', activation='relu')(x)  # 28x28\n    x_recon = layers.BatchNormalization()(x_recon)\n    # Fix: Adjust e3 to match the decoder output shape\n    e3_adjusted = layers.Conv2D(128, 1, padding='same')(e3)  # Adjust channels\n    e3_adjusted = layers.UpSampling2D(2)(e3_adjusted)  # Adjust spatial dimensions\n    x_recon = layers.Add()([x_recon, e3_adjusted])  # Skip connection\n    \n    x_recon = layers.Conv2DTranspose(64, 3, strides=2, padding='same', activation='relu')(x_recon)  # 56x56\n    x_recon = layers.BatchNormalization()(x_recon)\n    # Fix: Adjust e2 to match the decoder output shape\n    e2_adjusted = layers.Conv2D(64, 1, padding='same')(e2)  # Adjust channels\n    e2_adjusted = layers.UpSampling2D(2)(e2_adjusted)  # Adjust spatial dimensions\n    x_recon = layers.Add()([x_recon, e2_adjusted])  # Skip connection\n    \n    x_recon = layers.Conv2DTranspose(32, 3, strides=2, padding='same', activation='relu')(x_recon)   # 112x112\n    x_recon = layers.BatchNormalization()(x_recon)\n    # Fix: Adjust e1 to match the decoder output shape\n    e1_adjusted = layers.Conv2D(32, 1, padding='same')(e1)  # Adjust channels\n    e1_adjusted = layers.UpSampling2D(2)(e1_adjusted)  # Adjust spatial dimensions\n    x_recon = layers.Add()([x_recon, e1_adjusted])  # Skip connection\n    \n    x_recon = layers.Conv2DTranspose(16, 3, strides=2, padding='same', activation='relu')(x_recon)   # 224x224\n    x_recon = layers.BatchNormalization()(x_recon)\n    \n    x_recon = layers.Conv2DTranspose(3, 3, padding='same', activation='sigmoid')(x_recon)  # 224x224\n    reconstruction = layers.Lambda(lambda x: x, name='reconstruction')(x_recon)\n    \n    # Decoder for segmentation (from latent + skip connections)\n    x_seg = layers.Dense(14 * 14 * 64, activation='relu')(latent)  # Reduced from 256\n    x_seg = layers.Reshape((14, 14, 64))(x_seg)\n    \n    x_seg = layers.Conv2DTranspose(32, 3, strides=2, padding='same', activation='relu')(x_seg)  # 28x28\n    x_seg = layers.BatchNormalization()(x_seg)\n    \n    x_seg = layers.Conv2DTranspose(16, 3, strides=2, padding='same', activation='relu')(x_seg)   # 56x56\n    x_seg = layers.BatchNormalization()(x_seg)\n    \n    x_seg = layers.Conv2DTranspose(8, 3, strides=2, padding='same', activation='relu')(x_seg)   # 112x112\n    x_seg = layers.BatchNormalization()(x_seg)\n    \n    x_seg = layers.Conv2DTranspose(4, 3, strides=2, padding='same', activation='relu')(x_seg)   # 224x224\n    x_seg = layers.BatchNormalization()(x_seg)\n    \n    segmentation = layers.Conv2D(num_classes, 1, activation='softmax', name='segmentation')(x_seg)\n    \n    model = keras.Model(inputs, [reconstruction, segmentation], name=\"ConvAutoencoder\")\n    return model\n\n# ============ Few-Shot Learning Episode Generator ============\ndef create_support_query_episode(X, Y, n_way=6, k_shot=2, query_size=4):  # Reduced query_size from 6\n    \"\"\"Create a few-shot learning episode with support and query sets\"\"\"\n    episode_x_support = []\n    episode_y_support = []\n    episode_x_query = []\n    episode_y_query = []\n    \n    # Sample classes for this episode (ensure we have data for each class)\n    available_classes = []\n    for class_id in range(n_way):\n        class_indices = np.where(np.any(Y == class_id, axis=(1, 2)))[0]\n        if len(class_indices) >= k_shot:\n            available_classes.append(class_id)\n    \n    if len(available_classes) < n_way:\n        available_classes = list(range(n_way))  # fallback\n    \n    episode_classes = available_classes[:n_way]\n    \n    for class_id in episode_classes:\n        # Find all samples of this class\n        class_indices = np.where(np.any(Y == class_id, axis=(1, 2)))[0]\n        \n        if len(class_indices) < k_shot:\n            # If not enough samples, repeat existing ones\n            selected_indices = np.random.choice(class_indices, k_shot, replace=True)\n            query_indices = np.random.choice(class_indices, 1, replace=True)  # Reduced query size\n        else:\n            # Randomly sample support and query\n            all_selected = np.random.choice(class_indices, \n                                          min(len(class_indices), k_shot + 1),  # Reduced query size\n                                          replace=False)\n            selected_indices = all_selected[:k_shot]\n            query_indices = all_selected[k_shot:] if len(all_selected) > k_shot else selected_indices[:1]\n        \n        episode_x_support.extend(X[selected_indices])\n        episode_y_support.extend(Y[selected_indices])\n        episode_x_query.extend(X[query_indices])\n        episode_y_query.extend(Y[query_indices])\n    \n    return (np.array(episode_x_support), np.array(episode_y_support),\n            np.array(episode_x_query), np.array(episode_y_query))\n\ndef contrastive_segmentation_loss(y_true, y_pred, margin=1.0):\n    \"\"\"Contrastive loss for few-shot segmentation\"\"\"\n    y_true_flat = tf.reshape(y_true, [-1])\n    y_pred_flat = tf.reshape(y_pred, [-1, tf.shape(y_pred)[-1]])\n    \n    # Sample pixels for efficiency\n    n_pixels = tf.shape(y_true_flat)[0]\n    sample_size = tf.minimum(1000, n_pixels)  # Reduced from 2000\n    sample_indices = tf.random.shuffle(tf.range(n_pixels))[:sample_size]\n    \n    y_true_sampled = tf.gather(y_true_flat, sample_indices)\n    y_pred_sampled = tf.gather(y_pred_flat, sample_indices)\n    \n    # Standard categorical crossentropy\n    y_true_oh = tf.one_hot(y_true_sampled, NUM_CLASSES)\n    loss = tf.reduce_mean(\n        tf.keras.losses.categorical_crossentropy(y_true_oh, y_pred_sampled)\n    )\n    \n    return loss\n\n# ============ Few-Shot Learning Trainer ============\nclass FewShotTrainer(keras.Model):\n    \"\"\"Simplified few-shot trainer using standard segmentation loss\"\"\"\n    def __init__(self, base_model, **kwargs):\n        super().__init__(**kwargs)\n        self.base_model = base_model\n        \n    def call(self, inputs):\n        return self.base_model(inputs)\n        \n    def train_step(self, data):\n        x, y = data\n        \n        with tf.GradientTape() as tape:\n            y_pred = self.base_model(x, training=True)\n            loss = contrastive_segmentation_loss(y, y_pred)\n        \n        gradients = tape.gradient(loss, self.base_model.trainable_variables)\n        self.optimizer.apply_gradients(zip(gradients, self.base_model.trainable_variables))\n        \n        # Compute metrics - FIXED: Ensure both tensors have the same dtype\n        y_pred_classes = tf.argmax(y_pred, axis=-1)\n        y_true_classes = tf.cast(y, tf.int64)  # Changed from int32 to int64 to match y_pred_classes\n        accuracy = tf.reduce_mean(tf.cast(tf.equal(y_pred_classes, y_true_classes), tf.float32))\n        \n        return {\"loss\": loss, \"accuracy\": accuracy}\n\n# ============ Loss and Metrics ============\nSMOOTH = 1e-6\n\ndef _resize_to_label(y_pred, y_true):\n    ph = tf.shape(y_pred)[1]; pw = tf.shape(y_pred)[2]\n    th = tf.shape(y_true)[1]; tw = tf.shape(y_true)[2]\n    need = tf.logical_or(tf.not_equal(ph, th), tf.not_equal(pw, tw))\n    def _do(): return tf.image.resize(y_pred, (th, tw), method='bilinear')\n    return tf.cond(need, _do, lambda: y_pred)\n\ndef autoencoder_loss(inputs):\n    \"\"\"Combined loss for autoencoder: reconstruction + segmentation\"\"\"\n    y_true_img, y_true_seg, y_pred_recon, y_pred_seg = inputs\n    \n    # Reconstruction loss (MSE)\n    recon_loss = tf.reduce_mean(tf.square(y_true_img - y_pred_recon))\n    \n    # Segmentation loss (categorical crossentropy)\n    y_pred_seg = _resize_to_label(y_pred_seg, y_true_seg)\n    seg_loss = tf.reduce_mean(\n        tf.keras.losses.categorical_crossentropy(y_true_seg, y_pred_seg)\n    )\n    \n    return RECONSTRUCTION_WEIGHT * recon_loss + SEGMENTATION_WEIGHT * seg_loss\n\n@tf.function\ndef iou_metric(y_true, y_pred):\n    y_pred = _resize_to_label(y_pred, y_true)\n    yt = tf.argmax(y_true, -1); yp = tf.argmax(y_pred, -1)\n    yt_oh = tf.one_hot(yt, NUM_CLASSES, dtype=tf.float32)\n    yp_oh = tf.one_hot(yp, NUM_CLASSES, dtype=tf.float32)\n    inter = tf.reduce_sum(yt_oh * yp_oh, axis=[0,1,2])\n    union = tf.reduce_sum(yt_oh + yp_oh - yt_oh*yp_oh, axis=[0,1,2])\n    inter_nb = inter[1:]; union_nb = union[1:]\n    iou = tf.where(union_nb > 0.0, inter_nb / (union_nb + 1e-7), 0.0)\n    return tf.reduce_mean(iou)\n\ndef compute_auto_class_weights(Y_int, num_classes):\n    counts = np.bincount(Y_int.flatten(), minlength=num_classes).astype(np.float64)\n    p = counts / max(1, counts.sum())\n    w = 1.0 / np.log(1.02 + p + 1e-12)  # inverse log frequency\n    w[0] = max(w[0]*0.5, 0.25)          # don't over-weight background\n    return w\n\n# ============ Data Preparation ============\ndef prepare_autoencoder_data(X, Y):\n    \"\"\"Prepare data for autoencoder training\"\"\"\n    Y_one_hot = tf.one_hot(Y, NUM_CLASSES).numpy()\n    return X, Y_one_hot\n\ndef prepare_few_shot_episodes(X, Y, num_episodes=100):\n    \"\"\"Prepare episodes for few-shot learning\"\"\"\n    episodes = []\n    for _ in range(num_episodes):\n        episode = create_support_query_episode(X, Y, N_WAY, K_SHOT, query_size=4)  # Reduced query size\n        episodes.append(episode)\n    return episodes\n\n# ============ Visualization ============\ndef compute_severity_percentages(mask_int):\n    m = np.asarray(mask_int, dtype=np.uint8)\n    leaf = (m != 0)\n    leaf_pixels = int(leaf.sum())\n    if leaf_pixels == 0:\n        per_class = {CLASS_NAMES[c]: 0.0 for c in range(2, NUM_CLASSES)}\n        healthy_pct = 0.0\n        disease_total = 0.0\n        return per_class, healthy_pct, disease_total\n    per_class = {CLASS_NAMES[c]: 100.0 * float((m == c).sum()) / leaf_pixels\n                 for c in range(2, NUM_CLASSES)}\n    healthy_pct = 100.0 * float((m == 1).sum()) / leaf_pixels\n    disease_total = 100.0 - healthy_pct\n    return per_class, healthy_pct, disease_total\n\ndef visualize_autoencoder_results(model, X_test, Y_test, n=4, outdir=\"outputs\"):\n    \"\"\"Visualize autoencoder reconstruction and segmentation results\"\"\"\n    os.makedirs(outdir, exist_ok=True)\n    indices = np.random.choice(len(X_test), n, replace=False)\n    \n    fig, axes = plt.subplots(n, 4, figsize=(16, 4*n))\n    if n == 1: axes = axes.reshape(1, -1)\n    \n    for i, idx in enumerate(indices):\n        img = X_test[idx]\n        true_mask = Y_test[idx]\n        \n        # Predict\n        recon, seg_pred = model.predict(img[None], verbose=0)\n        recon = recon[0]\n        seg_pred = seg_pred[0]\n        pred_mask = np.argmax(seg_pred, axis=-1)\n        \n        # Compute severity\n        per_class, healthy_pct, disease_total = compute_severity_percentages(pred_mask)\n        \n        # Plot\n        axes[i, 0].imshow(img)\n        axes[i, 0].set_title(\"Original\")\n        axes[i, 0].axis('off')\n        \n        axes[i, 1].imshow(np.clip(recon, 0, 1))\n        axes[i, 1].set_title(\"Reconstructed\")\n        axes[i, 1].axis('off')\n        \n        axes[i, 2].imshow(mask_to_color(true_mask))\n        axes[i, 2].set_title(\"True Mask\")\n        axes[i, 2].axis('off')\n        \n        axes[i, 3].imshow(mask_to_color(pred_mask))\n        axes[i, 3].set_title(f\"Pred Mask\\nDisease: {disease_total:.1f}%\")\n        axes[i, 3].axis('off')\n    \n    plt.tight_layout()\n    save_path = os.path.join(outdir, \"autoencoder_results.png\")\n    plt.savefig(save_path, dpi=150, bbox_inches='tight')\n    plt.close()\n    print(f\"Saved autoencoder visualization: {save_path}\")\n\ndef visualize_few_shot_results(model, X_test, Y_test, n=4, outdir=\"outputs\"):\n    \"\"\"Visualize few-shot learning results\"\"\"\n    os.makedirs(outdir, exist_ok=True)\n    indices = np.random.choice(len(X_test), n, replace=False)\n    \n    fig, axes = plt.subplots(n, 3, figsize=(12, 4*n))\n    if n == 1: axes = axes.reshape(1, -1)\n    \n    for i, idx in enumerate(indices):\n        img = X_test[idx]\n        true_mask = Y_test[idx]\n        \n        # Predict using few-shot model\n        pred_mask = model.predict(img[None], verbose=0)[0]\n        pred_mask = np.argmax(pred_mask, axis=-1)\n        \n        # Compute severity\n        per_class, healthy_pct, disease_total = compute_severity_percentages(pred_mask)\n        \n        # Plot\n        axes[i, 0].imshow(img)\n        axes[i, 0].set_title(\"Original\")\n        axes[i, 0].axis('off')\n        \n        axes[i, 1].imshow(mask_to_color(true_mask))\n        axes[i, 1].set_title(\"True Mask\")\n        axes[i, 1].axis('off')\n        \n        axes[i, 2].imshow(mask_to_color(pred_mask))\n        axes[i, 2].set_title(f\"FSL Pred\\nDisease: {disease_total:.1f}%\")\n        axes[i, 2].axis('off')\n    \n    plt.tight_layout()\n    save_path = os.path.join(outdir, \"few_shot_results.png\")\n    plt.savefig(save_path, dpi=150, bbox_inches='tight')\n    plt.close()\n    print(f\"Saved few-shot visualization: {save_path}\")\n\n# ============ Inference helpers ============\ndef preprocess_image_for_model(image_path, target_hw):\n    bgr = cv2.imread(image_path, cv2.IMREAD_COLOR)\n    if bgr is None:\n        raise FileNotFoundError(f\"Could not read image: {image_path}\")\n    rgb = cv2.cvtColor(bgr, cv2.COLOR_BGR2RGB)\n    h, w = target_hw\n    rgb_rs = cv2.resize(rgb, (w, h), interpolation=cv2.INTER_AREA)\n    img_f32_01 = rgb_rs.astype(np.float32) / 255.0\n    return img_f32_01\n\ndef overlay_mask_on_image(rgb_01, mask_color, alpha=0.45):\n    rgb_u8 = (np.clip(rgb_01, 0, 1) * 255).astype(np.uint8)\n    return cv2.addWeighted(rgb_u8, 1.0, mask_color, alpha, 0)\n\ndef test_single_image(model, image_path, outdir=\"outputs\", alpha=0.45, model_type=\"autoencoder\"):\n    \"\"\"Test single image with trained model\"\"\"\n    os.makedirs(outdir, exist_ok=True)\n    H, W = IMG_SIZE, IMG_SIZE\n    img_01 = preprocess_image_for_model(image_path, (H, W))\n    \n    if model_type == \"autoencoder\":\n        recon, seg_pred = model.predict(img_01[None], verbose=0)\n        mask = np.argmax(seg_pred[0], axis=-1).astype(np.uint8)\n    else:  # few-shot\n        seg_pred = model.predict(img_01[None], verbose=0)[0]\n        mask = np.argmax(seg_pred, axis=-1).astype(np.uint8)\n    \n    per_class, healthy_pct, disease_total = compute_severity_percentages(mask)\n\n    # Save visuals\n    base = os.path.splitext(os.path.basename(image_path))[0]\n    mask_color = mask_to_color(mask)\n    overlay = overlay_mask_on_image(img_01, mask_color, alpha=alpha)\n    save_mask     = os.path.join(outdir, f\"{base}_{model_type}_pred_mask.png\")\n    save_overlay  = os.path.join(outdir, f\"{base}_{model_type}_overlay.png\")\n    save_json     = os.path.join(outdir, f\"{base}_{model_type}_severity.json\")\n    \n    cv2.imwrite(save_mask, cv2.cvtColor(mask_color, cv2.COLOR_RGB2BGR))\n    cv2.imwrite(save_overlay, cv2.cvtColor(overlay, cv2.COLOR_RGB2BGR))\n    with open(save_json, \"w\") as f:\n        json.dump({\"healthy_pct\": healthy_pct,\n                   \"disease_total_pct\": disease_total,\n                   \"per_disease_pct\": per_class}, f, indent=2)\n\n    # Quick show\n    if model_type == \"autoencoder\":\n        plt.figure(figsize=(16,4))\n        plt.subplot(1,4,1); plt.imshow((img_01*255).astype(np.uint8)); plt.title(\"Original\"); plt.axis('off')\n        plt.subplot(1,4,2); plt.imshow(np.clip(recon[0], 0, 1)); plt.title(\"Reconstructed\"); plt.axis('off')\n        plt.subplot(1,4,3); plt.imshow(mask_color); plt.title(\"Pred Mask\"); plt.axis('off')\n        plt.subplot(1,4,4); plt.imshow(overlay); plt.title(\"Overlay\"); plt.axis('off')\n    else:\n        plt.figure(figsize=(12,4))\n        plt.subplot(1,3,1); plt.imshow((img_01*255).ast(np.uint8)); plt.title(\"Original\"); plt.axis('off')\n        plt.subplot(1,3,2); plt.imshow(mask_color); plt.title(\"Pred Mask\"); plt.axis('off')\n        plt.subplot(1,3,3); plt.imshow(overlay); plt.title(\"Overlay\"); plt.axis('off')\n    \n    plt.tight_layout(); plt.show()\n\n    print(f\"==== {model_type.upper()} Severity Report ====\")\n    print(f\"Healthy: {healthy_pct:5.1f}% | Total disease: {disease_total:5.1f}%\")\n    for k, v in per_class.items():\n        print(f\"{k:>20}: {v:5.1f}%\")\n    print(f\"Saved: {save_mask}\")\n    print(f\"Saved: {save_overlay}\")\n    print(f\"Saved: {save_json}\")\n\ndef plot_training_history(history, model_name, outdir):\n    \"\"\"Plot training history\"\"\"\n    plt.figure(figsize=(15, 5))\n    \n    plt.subplot(1, 3, 1)\n    plt.plot(history.history['loss'], label='Training Loss')\n    if 'val_loss' in history.history:\n        plt.plot(history.history['val_loss'], label='Validation Loss')\n    plt.title(f'{model_name} - Loss')\n    plt.xlabel('Epoch')\n    plt.ylabel('Loss')\n    plt.legend()\n    \n    if 'iou_metric' in history.history:\n        plt.subplot(1, 3, 2)\n        plt.plot(history.history['iou_metric'], label='Training IoU')\n        if 'val_iou_metric' in history.history:\n            plt.plot(history.history['val_iou_metric'], label='Validation IoU')\n        plt.title(f'{model_name} - IoU')\n        plt.xlabel('Epoch')\n        plt.ylabel('IoU')\n        plt.legend()\n    \n    if 'accuracy' in history.history:\n        plt.subplot(1, 3, 3)\n        plt.plot(history.history['accuracy'], label='Training Accuracy')\n        if 'val_accuracy' in history.history:\n            plt.plot(history.history['val_accuracy'], label='Validation Accuracy')\n        plt.title(f'{model_name} - Accuracy')\n        plt.xlabel('Epoch')\n        plt.ylabel('Accuracy')\n        plt.legend()\n    \n    plt.tight_layout()\n    save_path = os.path.join(outdir, f\"{model_name}_training_history.png\")\n    plt.savefig(save_path, dpi=150, bbox_inches='tight')\n    plt.close()\n    print(f\"Saved training history: {save_path}\")\n\n# ============ Main Training Functions ============\ndef train_few_shot_model(X_train, Y_train, X_val, Y_val, input_shape):\n    \"\"\"Train Few-Shot Learning model\"\"\"\n    print(\"\\n🚀 Training Few-Shot Learning Model...\")\n    \n    # Build segmentation model\n    base_model = build_few_shot_segmentation_network(input_shape, NUM_CLASSES, EMBEDDING_DIM)\n    fsl_trainer = FewShotTrainer(base_model)\n    fsl_trainer.compile(optimizer=keras.optimizers.Adam(1e-3))\n    \n    # Create episodic training data\n    print(\"Generating few-shot episodes for training...\")\n    train_episodes = []\n    for _ in range(PROTOTYPE_EPISODES):\n        support_x, support_y, query_x, query_y = create_support_query_episode(\n            X_train, Y_train, N_WAY, K_SHOT, query_size=6  # Reduced from 12\n        )\n        # Combine support and query for standard training\n        episode_x = np.concatenate([support_x, query_x], axis=0)\n        episode_y = np.concatenate([support_y, query_y], axis=0)\n        train_episodes.append((episode_x, episode_y))\n    \n    # Train with episodes\n    print(\"Training with episodic data...\")\n    for episode in range(len(train_episodes)):\n        episode_x, episode_y = train_episodes[episode]\n        loss_dict = fsl_trainer.train_step([episode_x, episode_y])\n        \n        if episode % 20 == 0:\n            print(f\"Episode {episode}/{len(train_episodes)}, Loss: {loss_dict['loss']:.4f}, Acc: {loss_dict['accuracy']:.4f}\")\n    \n    # Fine-tune with standard segmentation training\n    print(\"Fine-tuning with standard segmentation...\")\n    Y_train_oh = tf.one_hot(Y_train, NUM_CLASSES).numpy()\n    Y_val_oh = tf.one_hot(Y_val, NUM_CLASSES).numpy()\n    \n    base_model.compile(\n        optimizer=keras.optimizers.Adam(1e-4),\n        loss='categorical_crossentropy',\n        metrics=[iou_metric, 'accuracy']\n    )\n    \n    callbacks = [\n        keras.callbacks.ModelCheckpoint(\n            os.path.join(OUTDIR, \"few_shot_best.h5\"),\n            monitor='val_iou_metric', mode='max',\n            save_best_only=True, verbose=1\n        ),\n        keras.callbacks.EarlyStopping(\n            monitor='val_iou_metric', mode='max',\n            patience=6, restore_best_weights=True\n        ),\n        keras.callbacks.ReduceLROnPlateau(\n            monitor='val_loss', factor=0.5, patience=3,\n            min_lr=1e-6, verbose=1\n        )\n    ]\n    \n    history = base_model.fit(\n        X_train, Y_train_oh,\n        validation_data=(X_val, Y_val_oh),\n        batch_size=BATCH_SIZE,\n        epochs=EPOCHS//2,  # Shorter fine-tuning after episodic pre-training\n        callbacks=callbacks,\n        verbose=1\n    )\n    \n    plot_training_history(history, \"FewShotLearning\", OUTDIR)\n    return base_model\n\ndef train_autoencoder_model(X_train, Y_train, X_val, Y_val, input_shape):\n    \"\"\"Train Convolutional Autoencoder model\"\"\"\n    print(\"\\n🚀 Training Convolutional Autoencoder...\")\n    \n    model = build_conv_autoencoder(input_shape, LATENT_DIM, NUM_CLASSES)\n    \n    # Prepare data\n    Y_train_oh = tf.one_hot(Y_train, NUM_CLASSES).numpy()\n    Y_val_oh = tf.one_hot(Y_val, NUM_CLASSES).numpy()\n    \n    # Custom training loop for multi-output model\n    optimizer = keras.optimizers.Adam(1e-3)\n    \n    # Compile model with custom loss\n    model.compile(\n        optimizer=optimizer,\n        loss={\n            'reconstruction': 'mse',\n            'segmentation': 'categorical_crossentropy'\n        },\n        loss_weights={\n            'reconstruction': RECONSTRUCTION_WEIGHT,\n            'segmentation': SEGMENTATION_WEIGHT\n        },\n        metrics={\n            'segmentation': [iou_metric, 'accuracy']\n        }\n    )\n    \n    callbacks = [\n        keras.callbacks.ModelCheckpoint(\n            os.path.join(OUTDIR, \"autoencoder_best.h5\"),\n            monitor='val_segmentation_iou_metric', mode='max',\n            save_best_only=True, verbose=1\n        ),\n        keras.callbacks.EarlyStopping(\n            monitor='val_segmentation_iou_metric', mode='max',\n            patience=10, restore_best_weights=True\n        ),\n        keras.callbacks.ReduceLROnPlateau(\n            monitor='val_loss', factor=0.5, patience=4,\n            min_lr=1e-6, verbose=1\n        )\n    ]\n    \n    history = model.fit(\n        X_train, {'reconstruction': X_train, 'segmentation': Y_train_oh},\n        validation_data=(X_val, {'reconstruction': X_val, 'segmentation': Y_val_oh}),\n        batch_size=BATCH_SIZE,\n        epochs=EPOCHS,\n        callbacks=callbacks,\n        verbose=1\n    )\n    \n    plot_training_history(history, \"ConvAutoencoder\", OUTDIR)\n    return model\n\n# ============ Main ============\ndef main():\n    t0 = time.time()\n    print(\"Loading dataset...\")\n    ds = AppleLeafDataset(BASE_DIR, IMG_SIZE)\n    X, Y = ds.load()\n\n    # splits ≈70/15/15\n    Xtr, Xte, Ytr, Yte = train_test_split(X, Y, test_size=0.15, random_state=SEED, shuffle=True)\n    Xtr, Xva, Ytr, Yva = train_test_split(Xtr, Ytr, test_size=0.1765, random_state=SEED, shuffle=True)\n    print(f\"Shapes -> Train: {Xtr.shape}, Val: {Xva.shape}, Test: {Xte.shape}\")\n\n    # class weights\n    if AUTO_CLASS_WEIGHTS:\n        global CLASS_WEIGHTS\n        CLASS_WEIGHTS = tf.constant(compute_auto_class_weights(Ytr, NUM_CLASSES), dtype=tf.float32)\n        print(\"Class weights (auto):\", CLASS_WEIGHTS.numpy())\n\n    input_shape = (IMG_SIZE, IMG_SIZE, 3)\n    os.makedirs(OUTDIR, exist_ok=True)\n    results = []\n\n    # ============ Train Few-Shot Learning Model ============\n    clear_tf_memory()  # Clear memory before training\n    \n    fsl_ckpt = os.path.join(OUTDIR, \"few_shot_best.h5\")\n    if SKIP_TRAIN_IF_CKPT and os.path.exists(fsl_ckpt):\n        print(\"Few-Shot model checkpoint found, loading...\")\n        try:\n            fsl_model = keras.models.load_model(fsl_ckpt, compile=False)\n            fsl_model.compile(\n                optimizer=keras.optimizers.Adam(1e-4),\n                loss='categorical_crossentropy',\n                metrics=[iou_metric, 'accuracy']\n            )\n        except Exception as e:\n            print(f\"Failed to load FSL checkpoint: {e}; training from scratch.\")\n            fsl_model = train_few_shot_model(Xtr, Ytr, Xva, Yva, input_shape)\n    else:\n        fsl_model = train_few_shot_model(Xtr, Ytr, Xva, Yva, input_shape)\n    \n    # Evaluate Few-Shot model\n    print(\"Evaluating Few-Shot Learning model...\")\n    Y_val_oh = tf.one_hot(Yva, NUM_CLASSES).numpy()\n    Y_test_oh = tf.one_hot(Yte, NUM_CLASSES).numpy()\n    \n    val_metrics_fsl = fsl_model.evaluate(Xva, Y_val_oh, verbose=0)\n    test_metrics_fsl = fsl_model.evaluate(Xte, Y_test_oh, verbose=0)\n    \n    fsl_results = {\n        \"Model\": \"FewShotLearning\",\n        \"Val Loss\": float(val_metrics_fsl[0]),\n        \"Val IoU\": float(val_metrics_fsl[1]),\n        \"Val Acc\": float(val_metrics_fsl[2]),\n        \"Test Loss\": float(test_metrics_fsl[0]),\n        \"Test IoU\": float(test_metrics_fsl[1]),\n        \"Test Acc\": float(test_metrics_fsl[2]),\n    }\n    results.append(fsl_results)\n    \n    # Visualize Few-Shot results\n    visualize_few_shot_results(fsl_model, Xva, Yva, n=4, outdir=OUTDIR)\n    \n    # ============ Train Convolutional Autoencoder ============\n    clear_tf_memory()  # Clear memory before training\n    \n    cae_ckpt = os.path.join(OUTDIR, \"autoencoder_best.h5\")\n    if SKIP_TRAIN_IF_CKPT and os.path.exists(cae_ckpt):\n        print(\"Autoencoder checkpoint found, loading...\")\n        try:\n            cae_model = keras.models.load_model(cae_ckpt, compile=False)\n            cae_model.compile(\n                optimizer=keras.optimizers.Adam(1e-3),\n                loss={\n                    'reconstruction': 'mse',\n                    'segmentation': 'categorical_crossentropy'\n                },\n                loss_weights={\n                    'reconstruction': RECONSTRUCTION_WEIGHT,\n                    'segmentation': SEGMENTATION_WEIGHT\n                },\n                metrics={\n                    'segmentation': [iou_metric, 'accuracy']\n                }\n            )\n        except Exception as e:\n            print(f\"Failed to load CAE checkpoint: {e}; training from scratch.\")\n            cae_model = train_autoencoder_model(Xtr, Ytr, Xva, Yva, input_shape)\n    else:\n        cae_model = train_autoencoder_model(Xtr, Ytr, Xva, Yva, input_shape)\n    \n    # Evaluate Autoencoder\n    print(\"Evaluating Convolutional Autoencoder...\")\n    val_metrics_cae = cae_model.evaluate(\n        Xva, {'reconstruction': Xva, 'segmentation': Y_val_oh}, verbose=0\n    )\n    test_metrics_cae = cae_model.evaluate(\n        Xte, {'reconstruction': Xte, 'segmentation': Y_test_oh}, verbose=0\n    )\n    \n    cae_results = {\n        \"Model\": \"ConvAutoencoder\",\n        \"Val Loss\": float(val_metrics_cae[0]),\n        \"Val IoU\": float(val_metrics_cae[3]),  # segmentation_iou_metric\n        \"Val Acc\": float(val_metrics_cae[4]),  # segmentation_accuracy\n        \"Test Loss\": float(test_metrics_cae[0]),\n        \"Test IoU\": float(test_metrics_cae[3]),\n        \"Test Acc\": float(test_metrics_cae[4]),\n    }\n    results.append(cae_results)\n    \n    # Visualize Autoencoder results\n    visualize_autoencoder_results(cae_model, Xva, Yva, n=4, outdir=OUTDIR)\n    \n    # ============ Single Image Inference ============\n    if DO_INFERENCE_AFTER_TRAIN and TEST_IMAGE_PATH and os.path.exists(TEST_IMAGE_PATH):\n        print(f\"\\nRunning single-image inference on: {TEST_IMAGE_PATH}\")\n        \n        print(\"Testing with Few-Shot Learning model:\")\n        test_single_image(fsl_model, TEST_IMAGE_PATH, outdir=OUTDIR, \n                         alpha=OVERLAY_ALPHA, model_type=\"few_shot\")\n        \n        print(\"\\nTesting with Convolutional Autoencoder:\")\n        test_single_image(cae_model, TEST_IMAGE_PATH, outdir=OUTDIR, \n                         alpha=OVERLAY_ALPHA, model_type=\"autoencoder\")\n    \n    elif DO_INFERENCE_AFTER_TRAIN and TEST_IMAGE_PATH:\n        print(f\"TEST_IMAGE_PATH does not exist: {TEST_IMAGE_PATH}\")\n\n    # Save comparison results\n    cmp_csv = os.path.join(OUTDIR, \"fsl_cae_comparison.csv\")\n    df = pd.DataFrame(results)\n    df = df.sort_values(\"Test IoU\", ascending=False)\n    df.to_csv(cmp_csv, index=False)\n    \n    print(\"\\n================ Model Comparison ================\")\n    print(df.to_string(index=False))\n    print(f\"\\nSaved: {cmp_csv}\")\n    print(f\"Done in {time.time()-t0:.1f}s\")\n\nif __name__ == \"__main__\":\n    main()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-31T17:12:31.512447Z","iopub.execute_input":"2025-08-31T17:12:31.512741Z","iopub.status.idle":"2025-08-31T17:16:29.815882Z","shell.execute_reply.started":"2025-08-31T17:12:31.512720Z","shell.execute_reply":"2025-08-31T17:16:29.815121Z"}},"outputs":[{"name":"stdout","text":"GPU mem-growth not set: Physical devices cannot be modified after being initialized\nLoading dataset...\nAlternaria leaf spot | imgs: 278 | masks: 278 | paired: 278\nBrown spot           | imgs: 215 | masks: 215 | paired: 215\nGray spot            | imgs: 395 | masks: 395 | paired: 395\nHealthy leaf         | imgs: 409 | masks: 409 | paired: 409\nRust                 | imgs: 344 | masks: 344 | paired: 344\nPaired samples: 1641\n","output_type":"stream"},{"name":"stderr","text":"Loading data: 100%|██████████| 1641/1641 [00:16<00:00, 102.40it/s]\n","output_type":"stream"},{"name":"stdout","text":"Shapes -> Train: (1147, 224, 224, 3), Val: (247, 224, 224, 3), Test: (247, 224, 224, 3)\nClass weights (auto): [ 0.95945287  3.3926501  41.769405   48.69517    47.268055   37.65381   ]\nFew-Shot model checkpoint found, loading...\nEvaluating Few-Shot Learning model...\nSaved few-shot visualization: outputs/few_shot_results.png\n\n🚀 Training Convolutional Autoencoder...\nEpoch 1/40\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 50ms/step - loss: 2.7194 - reconstruction_loss: 0.0215 - segmentation_accuracy: 0.5914 - segmentation_iou_metric: 0.0969 - segmentation_loss: 1.3490\nEpoch 1: val_segmentation_iou_metric improved from -inf to 0.12738, saving model to outputs/autoencoder_best.h5\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m46s\u001b[0m 73ms/step - loss: 2.7169 - reconstruction_loss: 0.0214 - segmentation_accuracy: 0.5920 - segmentation_iou_metric: 0.0970 - segmentation_loss: 1.3477 - val_loss: 1.2283 - val_reconstruction_loss: 0.0163 - val_segmentation_accuracy: 0.8651 - val_segmentation_iou_metric: 0.1274 - val_segmentation_loss: 0.6057 - learning_rate: 0.0010\nEpoch 2/40\n\u001b[1m286/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.9587 - reconstruction_loss: 0.0079 - segmentation_accuracy: 0.8817 - segmentation_iou_metric: 0.1391 - segmentation_loss: 0.4754\nEpoch 2: val_segmentation_iou_metric improved from 0.12738 to 0.14180, saving model to outputs/autoencoder_best.h5\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 18ms/step - loss: 0.9580 - reconstruction_loss: 0.0079 - segmentation_accuracy: 0.8817 - segmentation_iou_metric: 0.1392 - segmentation_loss: 0.4750 - val_loss: 0.7584 - val_reconstruction_loss: 0.0035 - val_segmentation_accuracy: 0.8879 - val_segmentation_iou_metric: 0.1418 - val_segmentation_loss: 0.3775 - learning_rate: 0.0010\nEpoch 3/40\n\u001b[1m285/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.6538 - reconstruction_loss: 0.0071 - segmentation_accuracy: 0.8997 - segmentation_iou_metric: 0.1470 - segmentation_loss: 0.3234\nEpoch 3: val_segmentation_iou_metric improved from 0.14180 to 0.14444, saving model to outputs/autoencoder_best.h5\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 18ms/step - loss: 0.6534 - reconstruction_loss: 0.0071 - segmentation_accuracy: 0.8998 - segmentation_iou_metric: 0.1471 - segmentation_loss: 0.3232 - val_loss: 0.6373 - val_reconstruction_loss: 0.0033 - val_segmentation_accuracy: 0.8962 - val_segmentation_iou_metric: 0.1444 - val_segmentation_loss: 0.3169 - learning_rate: 0.0010\nEpoch 4/40\n\u001b[1m285/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.5359 - reconstruction_loss: 0.0065 - segmentation_accuracy: 0.9131 - segmentation_iou_metric: 0.1533 - segmentation_loss: 0.2647\nEpoch 4: val_segmentation_iou_metric improved from 0.14444 to 0.14538, saving model to outputs/autoencoder_best.h5\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 18ms/step - loss: 0.5356 - reconstruction_loss: 0.0065 - segmentation_accuracy: 0.9132 - segmentation_iou_metric: 0.1533 - segmentation_loss: 0.2646 - val_loss: 0.6160 - val_reconstruction_loss: 0.0028 - val_segmentation_accuracy: 0.9011 - val_segmentation_iou_metric: 0.1454 - val_segmentation_loss: 0.3065 - learning_rate: 0.0010\nEpoch 5/40\n\u001b[1m285/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.4603 - reconstruction_loss: 0.0060 - segmentation_accuracy: 0.9252 - segmentation_iou_metric: 0.1591 - segmentation_loss: 0.2271\nEpoch 5: val_segmentation_iou_metric did not improve from 0.14538\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 17ms/step - loss: 0.4601 - reconstruction_loss: 0.0060 - segmentation_accuracy: 0.9253 - segmentation_iou_metric: 0.1591 - segmentation_loss: 0.2271 - val_loss: 0.6385 - val_reconstruction_loss: 0.0032 - val_segmentation_accuracy: 0.8982 - val_segmentation_iou_metric: 0.1435 - val_segmentation_loss: 0.3177 - learning_rate: 0.0010\nEpoch 6/40\n\u001b[1m286/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.4119 - reconstruction_loss: 0.0056 - segmentation_accuracy: 0.9336 - segmentation_iou_metric: 0.1633 - segmentation_loss: 0.2032\nEpoch 6: val_segmentation_iou_metric did not improve from 0.14538\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 17ms/step - loss: 0.4119 - reconstruction_loss: 0.0056 - segmentation_accuracy: 0.9336 - segmentation_iou_metric: 0.1633 - segmentation_loss: 0.2031 - val_loss: 0.6637 - val_reconstruction_loss: 0.0054 - val_segmentation_accuracy: 0.8912 - val_segmentation_iou_metric: 0.1401 - val_segmentation_loss: 0.3291 - learning_rate: 0.0010\nEpoch 7/40\n\u001b[1m285/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.3844 - reconstruction_loss: 0.0052 - segmentation_accuracy: 0.9387 - segmentation_iou_metric: 0.1658 - segmentation_loss: 0.1896\nEpoch 7: val_segmentation_iou_metric improved from 0.14538 to 0.14656, saving model to outputs/autoencoder_best.h5\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 18ms/step - loss: 0.3843 - reconstruction_loss: 0.0052 - segmentation_accuracy: 0.9387 - segmentation_iou_metric: 0.1659 - segmentation_loss: 0.1896 - val_loss: 0.6314 - val_reconstruction_loss: 0.0055 - val_segmentation_accuracy: 0.9036 - val_segmentation_iou_metric: 0.1466 - val_segmentation_loss: 0.3128 - learning_rate: 0.0010\nEpoch 8/40\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.3593 - reconstruction_loss: 0.0048 - segmentation_accuracy: 0.9427 - segmentation_iou_metric: 0.1679 - segmentation_loss: 0.1772\nEpoch 8: val_segmentation_iou_metric improved from 0.14656 to 0.14954, saving model to outputs/autoencoder_best.h5\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 18ms/step - loss: 0.3593 - reconstruction_loss: 0.0048 - segmentation_accuracy: 0.9427 - segmentation_iou_metric: 0.1679 - segmentation_loss: 0.1772 - val_loss: 0.6079 - val_reconstruction_loss: 0.0029 - val_segmentation_accuracy: 0.9088 - val_segmentation_iou_metric: 0.1495 - val_segmentation_loss: 0.3025 - learning_rate: 0.0010\nEpoch 9/40\n\u001b[1m285/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.3437 - reconstruction_loss: 0.0045 - segmentation_accuracy: 0.9452 - segmentation_iou_metric: 0.1691 - segmentation_loss: 0.1696\nEpoch 9: val_segmentation_iou_metric improved from 0.14954 to 0.15159, saving model to outputs/autoencoder_best.h5\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 17ms/step - loss: 0.3436 - reconstruction_loss: 0.0045 - segmentation_accuracy: 0.9452 - segmentation_iou_metric: 0.1692 - segmentation_loss: 0.1696 - val_loss: 0.5822 - val_reconstruction_loss: 0.0025 - val_segmentation_accuracy: 0.9122 - val_segmentation_iou_metric: 0.1516 - val_segmentation_loss: 0.2898 - learning_rate: 0.0010\nEpoch 10/40\n\u001b[1m284/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.3278 - reconstruction_loss: 0.0042 - segmentation_accuracy: 0.9481 - segmentation_iou_metric: 0.1707 - segmentation_loss: 0.1618\nEpoch 10: val_segmentation_iou_metric improved from 0.15159 to 0.15214, saving model to outputs/autoencoder_best.h5\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 18ms/step - loss: 0.3279 - reconstruction_loss: 0.0042 - segmentation_accuracy: 0.9481 - segmentation_iou_metric: 0.1707 - segmentation_loss: 0.1618 - val_loss: 0.5881 - val_reconstruction_loss: 0.0026 - val_segmentation_accuracy: 0.9140 - val_segmentation_iou_metric: 0.1521 - val_segmentation_loss: 0.2926 - learning_rate: 0.0010\nEpoch 11/40\n\u001b[1m285/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.3141 - reconstruction_loss: 0.0038 - segmentation_accuracy: 0.9504 - segmentation_iou_metric: 0.1719 - segmentation_loss: 0.1552\nEpoch 11: val_segmentation_iou_metric improved from 0.15214 to 0.15389, saving model to outputs/autoencoder_best.h5\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 17ms/step - loss: 0.3141 - reconstruction_loss: 0.0038 - segmentation_accuracy: 0.9504 - segmentation_iou_metric: 0.1719 - segmentation_loss: 0.1552 - val_loss: 0.5441 - val_reconstruction_loss: 0.0027 - val_segmentation_accuracy: 0.9167 - val_segmentation_iou_metric: 0.1539 - val_segmentation_loss: 0.2708 - learning_rate: 0.0010\nEpoch 12/40\n\u001b[1m284/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.3075 - reconstruction_loss: 0.0036 - segmentation_accuracy: 0.9513 - segmentation_iou_metric: 0.1722 - segmentation_loss: 0.1519\nEpoch 12: val_segmentation_iou_metric improved from 0.15389 to 0.15552, saving model to outputs/autoencoder_best.h5\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 17ms/step - loss: 0.3075 - reconstruction_loss: 0.0036 - segmentation_accuracy: 0.9513 - segmentation_iou_metric: 0.1722 - segmentation_loss: 0.1519 - val_loss: 0.5489 - val_reconstruction_loss: 0.0029 - val_segmentation_accuracy: 0.9189 - val_segmentation_iou_metric: 0.1555 - val_segmentation_loss: 0.2730 - learning_rate: 0.0010\nEpoch 13/40\n\u001b[1m285/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.2940 - reconstruction_loss: 0.0032 - segmentation_accuracy: 0.9537 - segmentation_iou_metric: 0.1735 - segmentation_loss: 0.1454\nEpoch 13: val_segmentation_iou_metric did not improve from 0.15552\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 17ms/step - loss: 0.2940 - reconstruction_loss: 0.0032 - segmentation_accuracy: 0.9537 - segmentation_iou_metric: 0.1735 - segmentation_loss: 0.1454 - val_loss: 0.5384 - val_reconstruction_loss: 0.0021 - val_segmentation_accuracy: 0.9187 - val_segmentation_iou_metric: 0.1552 - val_segmentation_loss: 0.2682 - learning_rate: 0.0010\nEpoch 14/40\n\u001b[1m284/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.2863 - reconstruction_loss: 0.0030 - segmentation_accuracy: 0.9550 - segmentation_iou_metric: 0.1743 - segmentation_loss: 0.1416\nEpoch 14: val_segmentation_iou_metric did not improve from 0.15552\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 17ms/step - loss: 0.2863 - reconstruction_loss: 0.0030 - segmentation_accuracy: 0.9550 - segmentation_iou_metric: 0.1743 - segmentation_loss: 0.1416 - val_loss: 0.5698 - val_reconstruction_loss: 0.0026 - val_segmentation_accuracy: 0.9193 - val_segmentation_iou_metric: 0.1548 - val_segmentation_loss: 0.2835 - learning_rate: 0.0010\nEpoch 15/40\n\u001b[1m285/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.2790 - reconstruction_loss: 0.0032 - segmentation_accuracy: 0.9564 - segmentation_iou_metric: 0.1750 - segmentation_loss: 0.1379\nEpoch 15: val_segmentation_iou_metric did not improve from 0.15552\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 17ms/step - loss: 0.2791 - reconstruction_loss: 0.0032 - segmentation_accuracy: 0.9563 - segmentation_iou_metric: 0.1750 - segmentation_loss: 0.1379 - val_loss: 0.6905 - val_reconstruction_loss: 0.0042 - val_segmentation_accuracy: 0.9128 - val_segmentation_iou_metric: 0.1503 - val_segmentation_loss: 0.3430 - learning_rate: 0.0010\nEpoch 16/40\n\u001b[1m284/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.2738 - reconstruction_loss: 0.0027 - segmentation_accuracy: 0.9570 - segmentation_iou_metric: 0.1754 - segmentation_loss: 0.1355\nEpoch 16: val_segmentation_iou_metric did not improve from 0.15552\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 17ms/step - loss: 0.2739 - reconstruction_loss: 0.0027 - segmentation_accuracy: 0.9570 - segmentation_iou_metric: 0.1754 - segmentation_loss: 0.1356 - val_loss: 0.6373 - val_reconstruction_loss: 0.0040 - val_segmentation_accuracy: 0.9147 - val_segmentation_iou_metric: 0.1520 - val_segmentation_loss: 0.3167 - learning_rate: 0.0010\nEpoch 17/40\n\u001b[1m285/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.2652 - reconstruction_loss: 0.0027 - segmentation_accuracy: 0.9586 - segmentation_iou_metric: 0.1763 - segmentation_loss: 0.1313\nEpoch 17: val_segmentation_iou_metric did not improve from 0.15552\n\nEpoch 17: ReduceLROnPlateau reducing learning rate to 0.0005000000237487257.\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 17ms/step - loss: 0.2652 - reconstruction_loss: 0.0027 - segmentation_accuracy: 0.9586 - segmentation_iou_metric: 0.1763 - segmentation_loss: 0.1313 - val_loss: 0.7202 - val_reconstruction_loss: 0.0037 - val_segmentation_accuracy: 0.9079 - val_segmentation_iou_metric: 0.1484 - val_segmentation_loss: 0.3582 - learning_rate: 0.0010\nEpoch 18/40\n\u001b[1m284/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.2547 - reconstruction_loss: 0.0026 - segmentation_accuracy: 0.9601 - segmentation_iou_metric: 0.1770 - segmentation_loss: 0.1261\nEpoch 18: val_segmentation_iou_metric improved from 0.15552 to 0.15718, saving model to outputs/autoencoder_best.h5\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 17ms/step - loss: 0.2547 - reconstruction_loss: 0.0026 - segmentation_accuracy: 0.9601 - segmentation_iou_metric: 0.1770 - segmentation_loss: 0.1261 - val_loss: 0.5791 - val_reconstruction_loss: 0.0013 - val_segmentation_accuracy: 0.9230 - val_segmentation_iou_metric: 0.1572 - val_segmentation_loss: 0.2890 - learning_rate: 5.0000e-04\nEpoch 19/40\n\u001b[1m285/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.2271 - reconstruction_loss: 0.0023 - segmentation_accuracy: 0.9651 - segmentation_iou_metric: 0.1799 - segmentation_loss: 0.1124\nEpoch 19: val_segmentation_iou_metric did not improve from 0.15718\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 17ms/step - loss: 0.2271 - reconstruction_loss: 0.0023 - segmentation_accuracy: 0.9651 - segmentation_iou_metric: 0.1799 - segmentation_loss: 0.1124 - val_loss: 0.6318 - val_reconstruction_loss: 0.0018 - val_segmentation_accuracy: 0.9219 - val_segmentation_iou_metric: 0.1565 - val_segmentation_loss: 0.3151 - learning_rate: 5.0000e-04\nEpoch 20/40\n\u001b[1m284/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.2114 - reconstruction_loss: 0.0021 - segmentation_accuracy: 0.9680 - segmentation_iou_metric: 0.1819 - segmentation_loss: 0.1047\nEpoch 20: val_segmentation_iou_metric did not improve from 0.15718\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 17ms/step - loss: 0.2115 - reconstruction_loss: 0.0021 - segmentation_accuracy: 0.9680 - segmentation_iou_metric: 0.1820 - segmentation_loss: 0.1047 - val_loss: 0.6617 - val_reconstruction_loss: 0.0019 - val_segmentation_accuracy: 0.9217 - val_segmentation_iou_metric: 0.1563 - val_segmentation_loss: 0.3300 - learning_rate: 5.0000e-04\nEpoch 21/40\n\u001b[1m285/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.2025 - reconstruction_loss: 0.0020 - segmentation_accuracy: 0.9696 - segmentation_iou_metric: 0.1845 - segmentation_loss: 0.1002\nEpoch 21: val_segmentation_iou_metric did not improve from 0.15718\n\nEpoch 21: ReduceLROnPlateau reducing learning rate to 0.0002500000118743628.\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 17ms/step - loss: 0.2025 - reconstruction_loss: 0.0020 - segmentation_accuracy: 0.9696 - segmentation_iou_metric: 0.1845 - segmentation_loss: 0.1003 - val_loss: 0.6800 - val_reconstruction_loss: 0.0018 - val_segmentation_accuracy: 0.9224 - val_segmentation_iou_metric: 0.1564 - val_segmentation_loss: 0.3391 - learning_rate: 5.0000e-04\nEpoch 22/40\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.1981 - reconstruction_loss: 0.0019 - segmentation_accuracy: 0.9700 - segmentation_iou_metric: 0.1874 - segmentation_loss: 0.0981\nEpoch 22: val_segmentation_iou_metric did not improve from 0.15718\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 17ms/step - loss: 0.1981 - reconstruction_loss: 0.0019 - segmentation_accuracy: 0.9700 - segmentation_iou_metric: 0.1874 - segmentation_loss: 0.0981 - val_loss: 0.6584 - val_reconstruction_loss: 0.0019 - val_segmentation_accuracy: 0.9230 - val_segmentation_iou_metric: 0.1563 - val_segmentation_loss: 0.3284 - learning_rate: 2.5000e-04\nEpoch 23/40\n\u001b[1m285/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.1904 - reconstruction_loss: 0.0019 - segmentation_accuracy: 0.9712 - segmentation_iou_metric: 0.1911 - segmentation_loss: 0.0942\nEpoch 23: val_segmentation_iou_metric did not improve from 0.15718\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 17ms/step - loss: 0.1904 - reconstruction_loss: 0.0019 - segmentation_accuracy: 0.9712 - segmentation_iou_metric: 0.1911 - segmentation_loss: 0.0942 - val_loss: 0.6778 - val_reconstruction_loss: 0.0019 - val_segmentation_accuracy: 0.9228 - val_segmentation_iou_metric: 0.1566 - val_segmentation_loss: 0.3381 - learning_rate: 2.5000e-04\nEpoch 24/40\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.1840 - reconstruction_loss: 0.0019 - segmentation_accuracy: 0.9723 - segmentation_iou_metric: 0.1945 - segmentation_loss: 0.0911\nEpoch 24: val_segmentation_iou_metric did not improve from 0.15718\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 17ms/step - loss: 0.1840 - reconstruction_loss: 0.0019 - segmentation_accuracy: 0.9723 - segmentation_iou_metric: 0.1945 - segmentation_loss: 0.0911 - val_loss: 0.7151 - val_reconstruction_loss: 0.0017 - val_segmentation_accuracy: 0.9212 - val_segmentation_iou_metric: 0.1561 - val_segmentation_loss: 0.3568 - learning_rate: 2.5000e-04\nEpoch 25/40\n\u001b[1m285/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.1784 - reconstruction_loss: 0.0018 - segmentation_accuracy: 0.9731 - segmentation_iou_metric: 0.1979 - segmentation_loss: 0.0883\nEpoch 25: val_segmentation_iou_metric did not improve from 0.15718\n\nEpoch 25: ReduceLROnPlateau reducing learning rate to 0.0001250000059371814.\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 16ms/step - loss: 0.1784 - reconstruction_loss: 0.0018 - segmentation_accuracy: 0.9731 - segmentation_iou_metric: 0.1978 - segmentation_loss: 0.0883 - val_loss: 0.7411 - val_reconstruction_loss: 0.0017 - val_segmentation_accuracy: 0.9204 - val_segmentation_iou_metric: 0.1560 - val_segmentation_loss: 0.3698 - learning_rate: 2.5000e-04\nEpoch 26/40\n\u001b[1m285/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.1765 - reconstruction_loss: 0.0017 - segmentation_accuracy: 0.9732 - segmentation_iou_metric: 0.2004 - segmentation_loss: 0.0874\nEpoch 26: val_segmentation_iou_metric did not improve from 0.15718\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 16ms/step - loss: 0.1766 - reconstruction_loss: 0.0017 - segmentation_accuracy: 0.9732 - segmentation_iou_metric: 0.2003 - segmentation_loss: 0.0874 - val_loss: 0.7234 - val_reconstruction_loss: 0.0013 - val_segmentation_accuracy: 0.9212 - val_segmentation_iou_metric: 0.1563 - val_segmentation_loss: 0.3611 - learning_rate: 1.2500e-04\nEpoch 27/40\n\u001b[1m285/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.1724 - reconstruction_loss: 0.0017 - segmentation_accuracy: 0.9739 - segmentation_iou_metric: 0.2033 - segmentation_loss: 0.0853\nEpoch 27: val_segmentation_iou_metric did not improve from 0.15718\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 17ms/step - loss: 0.1724 - reconstruction_loss: 0.0017 - segmentation_accuracy: 0.9739 - segmentation_iou_metric: 0.2033 - segmentation_loss: 0.0854 - val_loss: 0.7234 - val_reconstruction_loss: 0.0012 - val_segmentation_accuracy: 0.9223 - val_segmentation_iou_metric: 0.1568 - val_segmentation_loss: 0.3612 - learning_rate: 1.2500e-04\nEpoch 28/40\n\u001b[1m285/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 15ms/step - loss: 0.1678 - reconstruction_loss: 0.0017 - segmentation_accuracy: 0.9747 - segmentation_iou_metric: 0.2056 - segmentation_loss: 0.0831\nEpoch 28: val_segmentation_iou_metric did not improve from 0.15718\n\u001b[1m287/287\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 17ms/step - loss: 0.1679 - reconstruction_loss: 0.0017 - segmentation_accuracy: 0.9747 - segmentation_iou_metric: 0.2056 - segmentation_loss: 0.0831 - val_loss: 0.7305 - val_reconstruction_loss: 0.0011 - val_segmentation_accuracy: 0.9225 - val_segmentation_iou_metric: 0.1568 - val_segmentation_loss: 0.3648 - learning_rate: 1.2500e-04\nSaved training history: outputs/ConvAutoencoder_training_history.png\nEvaluating Convolutional Autoencoder...\nSaved autoencoder visualization: outputs/autoencoder_results.png\nTEST_IMAGE_PATH does not exist: /kaggle/input/test-data/apple disease 1.jpg\n\n================ Model Comparison ================\n          Model  Val Loss  Val IoU  Val Acc  Test Loss  Test IoU  Test Acc\nConvAutoencoder  0.579071 0.922966 0.157745   0.598428  0.921912  0.157431\nFewShotLearning  0.205526 0.290041 0.942531   0.176663  0.285767  0.943960\n\nSaved: outputs/fsl_cae_comparison.csv\nDone in 238.2s\n","output_type":"stream"}],"execution_count":6},{"cell_type":"code","source":"# =========================================================\n# Apple Leaf Segmentation — Few-Shot Learning + Convolutional Autoencoder\n# Uses same data path and structure as original code\n# =========================================================\nimport os\nos.environ[\"TF_CPP_MIN_LOG_LEVEL\"] = \"2\"\nos.environ[\"TF_ENABLE_ONEDNN_OPTS\"] = \"0\"\nos.environ[\"TF_DISABLE_PROFILER\"] = \"1\"\n\nimport cv2\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom tqdm import tqdm\nfrom sklearn.model_selection import train_test_split\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nimport pandas as pd\nimport time\nimport random\nimport json\n\n# ============ Config ============\nBASE_DIR    = \"/kaggle/input/apple-dataset/ATLDSD\"   # <--- change if needed\nIMG_SIZE    = 224  # Reduced from 256 to save memory\nBATCH_SIZE  = 4    # Reduced from 8 to save memory\nEPOCHS      = 40\nSEED        = 2025\n\nOUTDIR = \"outputs\"\nSKIP_TRAIN_IF_CKPT = True\n\n# Few-Shot Learning specific configs\nN_WAY = 6           # Number of classes (including background)\nK_SHOT = 2          # Reduced from 3 to save memory\nSUPPORT_SET_SIZE = N_WAY * K_SHOT\nEMBEDDING_DIM = 32  # Reduced from 64 to save memory\nPROTOTYPE_EPISODES = 30  # Reduced from 50 for faster training\n\n# Convolutional Autoencoder configs\nLATENT_DIM = 32     # Reduced from 64 to save memory\nRECONSTRUCTION_WEIGHT = 1.0\nSEGMENTATION_WEIGHT = 2.0\n\n# Training knobs\nAUTO_CLASS_WEIGHTS    = True\nUSE_TTA_IN_VIZ        = True\nOVERSAMPLE_DISEASE    = True\nTOLERANT_LABEL_COLORS = True\n\n# Inference on a single new image after training\nDO_INFERENCE_AFTER_TRAIN = True\nTEST_IMAGE_PATH = \"/kaggle/input/test-data/apple disease 1.jpg\"  # <--- change or set to None\nOVERLAY_ALPHA = 0.45\n\nrandom.seed(SEED); np.random.seed(SEED); tf.random.set_seed(SEED)\n\nCLASS_NAMES = [\n    \"Background\",           # 0\n    \"Healthy\",              # 1\n    \"Brown spot\",           # 2\n    \"Alternaria leaf spot\", # 3\n    \"Gray spot\",            # 4\n    \"Rust\"                  # 5\n]\nNUM_CLASSES = len(CLASS_NAMES)\n\nCOLOR_MAP = {\n    (0,   0,   0): 0,   # Background\n    (128, 0,   0): 1,   # Healthy\n    (128, 0, 128): 2,   # Brown spot\n    (128,128,  0): 3,   # Alternaria\n    (0,   0, 128): 4,   # Gray\n    (0, 128,   0): 5,   # Rust,\n}\n\n# default weights (overridden if AUTO_CLASS_WEIGHTS)\nCLASS_WEIGHTS = tf.constant([0.25, 0.7, 1.1, 1.1, 1.1, 1.2], dtype=tf.float32)\n\n# ============ Utils ============\ndef set_gpu_growth():\n    try:\n        gpus = tf.config.list_physical_devices('GPU')\n        if gpus:\n            for g in gpus:\n                tf.config.experimental.set_memory_growth(g, True)\n            print(f\"GPU found: {len(gpus)}; memory growth enabled\")\n        else:\n            print(\"No GPU detected; running on CPU\")\n    except Exception as e:\n        print(\"GPU mem-growth not set:\", e)\nset_gpu_growth()\n\ndef clear_tf_memory():\n    \"\"\"Clear TensorFlow GPU memory\"\"\"\n    tf.keras.backend.clear_session()\n    import gc\n    gc.collect()\n\ndef rgb_mask_to_classes(mask_rgb, tol=10):\n    \"\"\"Map RGB to class ids; if TOLERANT_LABEL_COLORS=True, allow a tolerance on RGB values.\"\"\"\n    if not TOLERANT_LABEL_COLORS:\n        out = np.zeros(mask_rgb.shape[:2], dtype=np.uint8)\n        R, G, B = mask_rgb[...,0], mask_rgb[...,1], mask_rgb[...,2]\n        for (r,g,b), cls in COLOR_MAP.items():\n            m = (R == r) & (G == g) & (B == b)\n            out[m] = cls\n        return out\n    else:\n        out = np.zeros(mask_rgb.shape[:2], dtype=np.uint8)\n        for (r,g,b), cls in COLOR_MAP.items():\n            diff = np.abs(mask_rgb - np.array([r,g,b], np.uint8))\n            m = (diff[...,0] <= tol) & (diff[...,1] <= tol) & (diff[...,2] <= tol)\n            out[m] = cls\n        return out\n\nPALETTE = {0:(0,0,0), 1:(128,0,0), 2:(128,0,128), 3:(128,128,0), 4:(0,0,128), 5:(0,128,0)}\ndef mask_to_color(mask):\n    h,w = mask.shape\n    out = np.zeros((h,w,3), dtype=np.uint8)\n    for c, col in PALETTE.items():\n        out[mask==c] = col\n    return out\n\n# ============ Dataset ============\nclass AppleLeafDataset:\n    IMG_EXTS = (\".png\",\".jpg\",\".jpeg\",\".bmp\",\".tif\",\".tiff\")\n    def __init__(self, base_dir, image_size=224):\n        self.base_dir = base_dir\n        self.image_size = image_size\n        self.image_paths, self.mask_paths = self._discover_pairs()\n        print(f\"Paired samples: {len(self.image_paths)}\")\n\n    def _list_images(self, d):\n        acc = []\n        for r,_,fs in os.walk(d):\n            for f in fs:\n                if f.lower().endswith(self.IMG_EXTS):\n                    acc.append(os.path.join(r,f))\n        return acc\n\n    def _discover_pairs(self):\n        imgs, msks = [], []\n        if not os.path.exists(self.base_dir):\n            raise FileNotFoundError(f\"Base dir not found: {self.base_dir}\")\n        for cls_folder in sorted(os.listdir(self.base_dir)):\n            cpath = os.path.join(self.base_dir, cls_folder)\n            if not os.path.isdir(cpath): continue\n            img_dir = os.path.join(cpath, \"image\")\n            msk_dir = os.path.join(cpath, \"label\")\n            if not (os.path.exists(img_dir) and os.path.exists(msk_dir)): continue\n\n            img_files = self._list_images(img_dir)\n            msk_files = self._list_images(msk_dir)\n            img_by = {os.path.splitext(os.path.basename(p))[0].lower(): p for p in img_files}\n            msk_by = {os.path.splitext(os.path.basename(p))[0].lower(): p for p in msk_files}\n            common = sorted(set(img_by) & set(msk_by))\n            print(f\"{cls_folder:20} | imgs:{len(img_files):4d} | masks:{len(msk_files):4d} | paired:{len(common):4d}\")\n            for s in common: imgs.append(img_by[s]); msks.append(msk_by[s])\n        return imgs, msks\n\n    def load(self):\n        X, Y = [], []\n        for ip, mp in tqdm(list(zip(self.image_paths, self.mask_paths)), desc=\"Loading data\"):\n            img = cv2.imread(ip, cv2.IMREAD_COLOR)\n            if img is None: continue\n            img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n            img = cv2.resize(img, (self.image_size, self.image_size), interpolation=cv2.INTER_AREA)\n            img = img.astype(np.float32)/255.0\n\n            msk = cv2.imread(mp, cv2.IMREAD_COLOR)\n            if msk is None: continue\n            msk = cv2.cvtColor(msk, cv2.COLOR_BGR2RGB)\n            msk = cv2.resize(msk, (self.image_size, self.image_size), interpolation=cv2.INTER_NEAREST)\n            msk = rgb_mask_to_classes(msk)\n\n            X.append(img); Y.append(msk)\n        return np.asarray(X, np.float32), np.asarray(Y, np.uint8)\n\n# ============ Few-Shot Learning Prototypical Network ============\ndef build_few_shot_segmentation_network(input_shape, num_classes, embedding_dim=32):\n    \"\"\"Improved few-shot segmentation network using metric learning\"\"\"\n    inputs = keras.Input(shape=input_shape)\n    \n    # Enhanced encoder with more capacity\n    x = layers.Conv2D(32, 3, padding='same', activation='relu')(inputs)\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(32, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    s1 = x\n    x = layers.MaxPooling2D(2)(x)  # 112x112\n    \n    x = layers.Conv2D(64, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(64, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    s2 = x\n    x = layers.MaxPooling2D(2)(x)  # 56x56\n    \n    x = layers.Conv2D(128, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(128, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    s3 = x\n    x = layers.MaxPooling2D(2)(x)  # 28x28\n    \n    # Bottleneck with attention\n    x = layers.Conv2D(256, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(256, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    \n    # Decoder with proper skip connections and attention\n    x = layers.Conv2DTranspose(128, 3, strides=2, padding='same', activation='relu')(x)  # 56x56\n    x = layers.Concatenate()([x, s3])\n    x = layers.Conv2D(128, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    \n    x = layers.Conv2DTranspose(64, 3, strides=2, padding='same', activation='relu')(x)   # 112x112\n    x = layers.Concatenate()([x, s2])\n    x = layers.Conv2D(64, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    \n    x = layers.Conv2DTranspose(32, 3, strides=2, padding='same', activation='relu')(x)   # 224x224\n    x = layers.Concatenate()([x, s1])\n    x = layers.Conv2D(32, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    \n    # Feature embedding\n    features = layers.Conv2D(embedding_dim, 3, padding='same', activation='relu')(x)\n    features = layers.BatchNormalization(name='feature_embeddings')(features)\n    \n    # Classification head with dropout\n    x = layers.Dropout(0.3)(features)\n    outputs = layers.Conv2D(num_classes, 1, activation='softmax')(x)\n    \n    return keras.Model(inputs, outputs, name=\"ImprovedFewShotSegNet\")\n\n# ============ Convolutional Autoencoder ============\ndef build_conv_autoencoder(input_shape, latent_dim=32, num_classes=6):\n    \"\"\"Simplified Convolutional Autoencoder for feature learning and segmentation\"\"\"\n    inputs = keras.Input(shape=input_shape)\n    \n    # Encoder\n    x = layers.Conv2D(16, 3, strides=2, padding='same', activation='relu')(inputs)  # 112x112, reduced from 32\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(32, 3, strides=2, padding='same', activation='relu')(x)      # 56x56, reduced from 64\n    x = layers.BatchNormalization()(x)\n    e1 = x\n    \n    x = layers.Conv2D(64, 3, strides=2, padding='same', activation='relu')(x)     # 28x28, reduced from 128\n    x = layers.BatchNormalization()(x)\n    e2 = x\n    \n    x = layers.Conv2D(128, 3, strides=2, padding='same', activation='relu')(x)     # 14x14, reduced from 256\n    x = layers.BatchNormalization()(x)\n    e3 = x\n    \n    # Bottleneck (latent representation)\n    x = layers.Flatten()(x)\n    latent = layers.Dense(latent_dim, activation='relu', name='latent_representation')(x)\n    x = layers.Dense(14 * 14 * 128, activation='relu')(latent)  # Adjusted for reduced dimensions\n    x = layers.Reshape((14, 14, 128))(x)\n    \n    # Decoder for reconstruction\n    x_recon = layers.Conv2DTranspose(128, 3, strides=2, padding='same', activation='relu')(x)  # 28x28\n    x_recon = layers.BatchNormalization()(x_recon)\n    # Fix: Adjust e3 to match the decoder output shape\n    e3_adjusted = layers.Conv2D(128, 1, padding='same')(e3)  # Adjust channels\n    e3_adjusted = layers.UpSampling2D(2)(e3_adjusted)  # Adjust spatial dimensions\n    x_recon = layers.Add()([x_recon, e3_adjusted])  # Skip connection\n    \n    x_recon = layers.Conv2DTranspose(64, 3, strides=2, padding='same', activation='relu')(x_recon)  # 56x56\n    x_recon = layers.BatchNormalization()(x_recon)\n    # Fix: Adjust e2 to match the decoder output shape\n    e2_adjusted = layers.Conv2D(64, 1, padding='same')(e2)  # Adjust channels\n    e2_adjusted = layers.UpSampling2D(2)(e2_adjusted)  # Adjust spatial dimensions\n    x_recon = layers.Add()([x_recon, e2_adjusted])  # Skip connection\n    \n    x_recon = layers.Conv2DTranspose(32, 3, strides=2, padding='same', activation='relu')(x_recon)   # 112x112\n    x_recon = layers.BatchNormalization()(x_recon)\n    # Fix: Adjust e1 to match the decoder output shape\n    e1_adjusted = layers.Conv2D(32, 1, padding='same')(e1)  # Adjust channels\n    e1_adjusted = layers.UpSampling2D(2)(e1_adjusted)  # Adjust spatial dimensions\n    x_recon = layers.Add()([x_recon, e1_adjusted])  # Skip connection\n    \n    x_recon = layers.Conv2DTranspose(16, 3, strides=2, padding='same', activation='relu')(x_recon)   # 224x224\n    x_recon = layers.BatchNormalization()(x_recon)\n    \n    x_recon = layers.Conv2DTranspose(3, 3, padding='same', activation='sigmoid')(x_recon)  # 224x224\n    reconstruction = layers.Lambda(lambda x: x, name='reconstruction')(x_recon)\n    \n    # Decoder for segmentation (from latent + skip connections)\n    x_seg = layers.Dense(14 * 14 * 64, activation='relu')(latent)  # Reduced from 256\n    x_seg = layers.Reshape((14, 14, 64))(x_seg)\n    \n    x_seg = layers.Conv2DTranspose(32, 3, strides=2, padding='same', activation='relu')(x_seg)  # 28x28\n    x_seg = layers.BatchNormalization()(x_seg)\n    \n    x_seg = layers.Conv2DTranspose(16, 3, strides=2, padding='same', activation='relu')(x_seg)   # 56x56\n    x_seg = layers.BatchNormalization()(x_seg)\n    \n    x_seg = layers.Conv2DTranspose(8, 3, strides=2, padding='same', activation='relu')(x_seg)   # 112x112\n    x_seg = layers.BatchNormalization()(x_seg)\n    \n    x_seg = layers.Conv2DTranspose(4, 3, strides=2, padding='same', activation='relu')(x_seg)   # 224x224\n    x_seg = layers.BatchNormalization()(x_seg)\n    \n    segmentation = layers.Conv2D(num_classes, 1, activation='softmax', name='segmentation')(x_seg)\n    \n    model = keras.Model(inputs, [reconstruction, segmentation], name=\"ConvAutoencoder\")\n    return model\n\n# ============ Few-Shot Learning Episode Generator ============\ndef create_support_query_episode(X, Y, n_way=6, k_shot=2, query_size=4):  # Reduced query_size from 6\n    \"\"\"Create a few-shot learning episode with support and query sets\"\"\"\n    episode_x_support = []\n    episode_y_support = []\n    episode_x_query = []\n    episode_y_query = []\n    \n    # Sample classes for this episode (ensure we have data for each class)\n    available_classes = []\n    for class_id in range(n_way):\n        class_indices = np.where(np.any(Y == class_id, axis=(1, 2)))[0]\n        if len(class_indices) >= k_shot:\n            available_classes.append(class_id)\n    \n    if len(available_classes) < n_way:\n        available_classes = list(range(n_way))  # fallback\n    \n    episode_classes = available_classes[:n_way]\n    \n    for class_id in episode_classes:\n        # Find all samples of this class\n        class_indices = np.where(np.any(Y == class_id, axis=(1, 2)))[0]\n        \n        if len(class_indices) < k_shot:\n            # If not enough samples, repeat existing ones\n            selected_indices = np.random.choice(class_indices, k_shot, replace=True)\n            query_indices = np.random.choice(class_indices, 1, replace=True)  # Reduced query size\n        else:\n            # Randomly sample support and query\n            all_selected = np.random.choice(class_indices, \n                                          min(len(class_indices), k_shot + 1),  # Reduced query size\n                                          replace=False)\n            selected_indices = all_selected[:k_shot]\n            query_indices = all_selected[k_shot:] if len(all_selected) > k_shot else selected_indices[:1]\n        \n        episode_x_support.extend(X[selected_indices])\n        episode_y_support.extend(Y[selected_indices])\n        episode_x_query.extend(X[query_indices])\n        episode_y_query.extend(Y[query_indices])\n    \n    return (np.array(episode_x_support), np.array(episode_y_support),\n            np.array(episode_x_query), np.array(episode_y_query))\n\ndef compute_auto_class_weights(Y_int, num_classes, beta=0.9):\n    \"\"\"Compute better class weights using focal loss principles\"\"\"\n    counts = np.bincount(Y_int.flatten(), minlength=num_classes).astype(np.float64)\n    total = counts.sum()\n    frequencies = counts / total\n    \n    # Use focal loss-style weighting: give more weight to rare classes\n    weights = (1 - frequencies) ** beta\n    weights = weights / weights.sum() * num_classes  # Normalize\n    \n    # Ensure background gets lower weight\n    weights[0] = max(weights[0] * 0.3, 0.1)\n    \n    print(\"Class frequencies:\", frequencies)\n    print(\"Class weights:\", weights)\n    return weights\n\ndef contrastive_segmentation_loss(y_true, y_pred, margin=1.0, alpha=0.25, gamma=2.0):\n    \"\"\"Focal loss for better handling of class imbalance\"\"\"\n    y_true_flat = tf.reshape(y_true, [-1])\n    y_pred_flat = tf.reshape(y_pred, [-1, tf.shape(y_pred)[-1]])\n    \n    # Convert to one-hot\n    y_true_oh = tf.one_hot(tf.cast(y_true_flat, tf.int32), NUM_CLASSES)\n    \n    # Focal loss calculation\n    cross_entropy = tf.keras.losses.categorical_crossentropy(y_true_oh, y_pred_flat)\n    p_t = tf.reduce_sum(y_true_oh * y_pred_flat, axis=-1)\n    modulating_factor = tf.pow(1.0 - p_t, gamma)\n    loss = alpha * modulating_factor * cross_entropy\n    \n    return tf.reduce_mean(loss)\n\nclass FewShotTrainer(keras.Model):\n    \"\"\"Simplified few-shot trainer using standard segmentation loss\"\"\"\n    def __init__(self, base_model, **kwargs):\n        super().__init__(**kwargs)\n        self.base_model = base_model\n        \n    def call(self, inputs):\n        return self.base_model(inputs)\n        \n    def train_step(self, data):\n        x, y = data\n        \n        with tf.GradientTape() as tape:\n            y_pred = self.base_model(x, training=True)\n            loss = contrastive_segmentation_loss(y, y_pred)\n        \n        gradients = tape.gradient(loss, self.base_model.trainable_variables)\n        self.optimizer.apply_gradients(zip(gradients, self.base_model.trainable_variables))\n        \n        # Compute metrics - FIXED: Ensure both tensors have the same dtype\n        y_pred_classes = tf.argmax(y_pred, axis=-1)\n        y_true_classes = tf.cast(y, tf.int64)  # Changed from int32 to int64 to match y_pred_classes\n        accuracy = tf.reduce_mean(tf.cast(tf.equal(y_pred_classes, y_true_classes), tf.float32))\n        \n        return {\"loss\": loss, \"accuracy\": accuracy}\n\n# ============ Loss and Metrics ============\nSMOOTH = 1e-6\n\ndef _resize_to_label(y_pred, y_true):\n    ph = tf.shape(y_pred)[1]; pw = tf.shape(y_pred)[2]\n    th = tf.shape(y_true)[1]; tw = tf.shape(y_true)[2]\n    need = tf.logical_or(tf.not_equal(ph, th), tf.not_equal(pw, tw))\n    def _do(): return tf.image.resize(y_pred, (th, tw), method='bilinear')\n    return tf.cond(need, _do, lambda: y_pred)\n\ndef autoencoder_loss(inputs):\n    \"\"\"Combined loss for autoencoder: reconstruction + segmentation\"\"\"\n    y_true_img, y_true_seg, y_pred_recon, y_pred_seg = inputs\n    \n    # Reconstruction loss (MSE)\n    recon_loss = tf.reduce_mean(tf.square(y_true_img - y_pred_recon))\n    \n    # Segmentation loss (categorical crossentropy)\n    y_pred_seg = _resize_to_label(y_pred_seg, y_true_seg)\n    seg_loss = tf.reduce_mean(\n        tf.keras.losses.categorical_crossentropy(y_true_seg, y_pred_seg)\n    )\n    \n    return RECONSTRUCTION_WEIGHT * recon_loss + SEGMENTATION_WEIGHT * seg_loss\n\n@tf.function\ndef iou_metric(y_true, y_pred):\n    y_pred = _resize_to_label(y_pred, y_true)\n    yt = tf.argmax(y_true, -1); yp = tf.argmax(y_pred, -1)\n    yt_oh = tf.one_hot(yt, NUM_CLASSES, dtype=tf.float32)\n    yp_oh = tf.one_hot(yp, NUM_CLASSES, dtype=tf.float32)\n    inter = tf.reduce_sum(yt_oh * yp_oh, axis=[0,1,2])\n    union = tf.reduce_sum(yt_oh + yp_oh - yp_oh*yt_oh, axis=[0,1,2])\n    inter_nb = inter[1:]; union_nb = union[1:]\n    iou = tf.where(union_nb > 0.0, inter_nb / (union_nb + 1e-7), 0.0)\n    return tf.reduce_mean(iou)\n\n# ============ Data Preparation ============\ndef prepare_autoencoder_data(X, Y):\n    \"\"\"Prepare data for autoencoder training\"\"\"\n    Y_one_hot = tf.one_hot(Y, NUM_CLASSES).numpy()\n    return X, Y_one_hot\n\ndef prepare_few_shot_episodes(X, Y, num_episodes=100):\n    \"\"\"Prepare episodes for few-shot learning\"\"\"\n    episodes = []\n    for _ in range(num_episodes):\n        episode = create_support_query_episode(X, Y, N_WAY, K_SHOT, query_size=4)  # Reduced query size\n        episodes.append(episode)\n    return episodes\n\ndef augment_data(X, Y):\n    \"\"\"Simple data augmentation\"\"\"\n    augmented_X, augmented_Y = [], []\n    \n    for i in range(len(X)):\n        img, mask = X[i], Y[i]\n        \n        # Original\n        augmented_X.append(img)\n        augmented_Y.append(mask)\n        \n        # Horizontal flip\n        augmented_X.append(np.fliplr(img))\n        augmented_Y.append(np.fliplr(mask))\n        \n        # Vertical flip\n        augmented_X.append(np.flipud(img))\n        augmented_Y.append(np.flipud(mask))\n        \n        # Brightness adjustment\n        bright_img = img * np.random.uniform(0.8, 1.2)\n        bright_img = np.clip(bright_img, 0, 1)\n        augmented_X.append(bright_img)\n        augmented_Y.append(mask)\n    \n    return np.array(augmented_X), np.array(augmented_Y)\n\n# ============ Visualization ============\ndef compute_severity_percentages(mask_int):\n    m = np.asarray(mask_int, dtype=np.uint8)\n    leaf = (m != 0)\n    leaf_pixels = int(leaf.sum())\n    if leaf_pixels == 0:\n        per_class = {CLASS_NAMES[c]: 0.0 for c in range(2, NUM_CLASSES)}\n        healthy_pct = 0.0\n        disease_total = 0.0\n        return per_class, healthy_pct, disease_total\n    per_class = {CLASS_NAMES[c]: 100.0 * float((m == c).sum()) / leaf_pixels\n                 for c in range(2, NUM_CLASSES)}\n    healthy_pct = 100.0 * float((m == 1).sum()) / leaf_pixels\n    disease_total = 100.0 - healthy_pct\n    return per_class, healthy_pct, disease_total\n\ndef visualize_autoencoder_results(model, X_test, Y_test, n=4, outdir=\"outputs\"):\n    \"\"\"Visualize autoencoder reconstruction and segmentation results\"\"\"\n    os.makedirs(outdir, exist_ok=True)\n    indices = np.random.choice(len(X_test), n, replace=False)\n    \n    fig, axes = plt.subplots(n, 4, figsize=(16, 4*n))\n    if n == 1: axes = axes.reshape(1, -1)\n    \n    for i, idx in enumerate(indices):\n        img = X_test[idx]\n        true_mask = Y_test[idx]\n        \n        # Predict\n        recon, seg_pred = model.predict(img[None], verbose=0)\n        recon = recon[0]\n        seg_pred = seg_pred[0]\n        pred_mask = np.argmax(seg_pred, axis=-1)\n        \n        # Compute severity\n        per_class, healthy_pct, disease_total = compute_severity_percentages(pred_mask)\n        \n        # Plot\n        axes[i, 0].imshow(img)\n        axes[i, 0].set_title(\"Original\")\n        axes[i, 0].axis('off')\n        \n        axes[i, 1].imshow(np.clip(recon, 0, 1))\n        axes[i, 1].set_title(\"Reconstructed\")\n        axes[i, 1].axis('off')\n        \n        axes[i, 2].imshow(mask_to_color(true_mask))\n        axes[i, 2].set_title(\"True Mask\")\n        axes[i, 2].axis('off')\n        \n        axes[i, 3].imshow(mask_to_color(pred_mask))\n        axes[i, 3].set_title(f\"Pred Mask\\nDisease: {disease_total:.1f}%\")\n        axes[i, 3].axis('off')\n    \n    plt.tight_layout()\n    save_path = os.path.join(outdir, \"autoencoder_results.png\")\n    plt.savefig(save_path, dpi=150, bbox_inches='tight')\n    plt.close()\n    print(f\"Saved autoencoder visualization: {save_path}\")\n\ndef visualize_few_shot_results(model, X_test, Y_test, n=4, outdir=\"outputs\"):\n    \"\"\"Visualize few-shot learning results\"\"\"\n    os.makedirs(outdir, exist_ok=True)\n    indices = np.random.choice(len(X_test), n, replace=False)\n    \n    fig, axes = plt.subplots(n, 3, figsize=(12, 4*n))\n    if n == 1: axes = axes.reshape(1, -1)\n    \n    for i, idx in enumerate(indices):\n        img = X_test[idx]\n        true_mask = Y_test[idx]\n        \n        # Predict using few-shot model\n        pred_mask = model.predict(img[None], verbose=0)[0]\n        pred_mask = np.argmax(pred_mask, axis=-1)\n        \n        # Compute severity\n        per_class, healthy_pct, disease_total = compute_severity_percentages(pred_mask)\n        \n        # Plot\n        axes[i, 0].imshow(img)\n        axes[i, 0].set_title(\"Original\")\n        axes[i, 0].axis('off')\n        \n        axes[i, 1].imshow(mask_to_color(true_mask))\n        axes[i, 1].set_title(\"True Mask\")\n        axes[i, 1].axis('off')\n        \n        axes[i, 2].imshow(mask_to_color(pred_mask))\n        axes[i, 2].set_title(f\"FSL Pred\\nDisease: {disease_total:.1f}%\")\n        axes[i, 2].axis('off')\n    \n    plt.tight_layout()\n    save_path = os.path.join(outdir, \"few_shot_results.png\")\n    plt.savefig(save_path, dpi=150, bbox_inches='tight')\n    plt.close()\n    print(f\"Saved few-shot visualization: {save_path}\")\n\n# ============ Inference helpers ============\ndef preprocess_image_for_model(image_path, target_hw):\n    bgr = cv2.imread(image_path, cv2.IMREAD_COLOR)\n    if bgr is None:\n        raise FileNotFoundError(f\"Could not read image: {image_path}\")\n    rgb = cv2.cvtColor(bgr, cv2.COLOR_BGR2RGB)\n    h, w = target_hw\n    rgb_rs = cv2.resize(rgb, (w, h), interpolation=cv2.INTER_AREA)\n    img_f32_01 = rgb_rs.ast(np.float32) / 255.0\n    return img_f32_01\n\ndef overlay_mask_on_image(rgb_01, mask_color, alpha=0.45):\n    rgb_u8 = (np.clip(rgb_01, 0, 1) * 255).astype(np.uint8)\n    return cv2.addWeighted(rgb_u8, 1.0, mask_color, alpha, 0)\n\ndef test_single_image(model, image_path, outdir=\"outputs\", alpha=0.45, model_type=\"autoencoder\"):\n    \"\"\"Test single image with trained model\"\"\"\n    os.makedirs(outdir, exist_ok=True)\n    H, W = IMG_SIZE, IMG_SIZE\n    img_01 = preprocess_image_for_model(image_path, (H, W))\n    \n    if model_type == \"autoencoder\":\n        recon, seg_pred = model.predict(img_01[None], verbose=0)\n        mask = np.argmax(seg_pred[0], axis=-1).astype(np.uint8)\n    else:  # few-shot\n        seg_pred = model.predict(img_01[None], verbose=0)[0]\n        mask = np.argmax(seg_pred, axis=-1).astype(np.uint8)\n    \n    per_class, healthy_pct, disease_total = compute_severity_percentages(mask)\n\n    # Save visuals\n    base = os.path.splitext(os.path.basename(image_path))[0]\n    mask_color = mask_to_color(mask)\n    overlay = overlay_mask_on_image(img_01, mask_color, alpha=alpha)\n    save_mask     = os.path.join(outdir, f\"{base}_{model_type}_pred_mask.png\")\n    save_overlay  = os.path.join(outdir, f\"{base}_{model_type}_overlay.png\")\n    save_json     = os.path.join(outdir, f\"{base}_{model_type}_severity.json\")\n    \n    cv2.imwrite(save_mask, cv2.cvtColor(mask_color, cv2.COLOR_RGB2BGR))\n    cv2.imwrite(save_overlay, cv2.cvtColor(overlay, cv2.COLOR_RGB2BGR))\n    with open(save_json, \"w\") as f:\n        json.dump({\"healthy_pct\": healthy_pct,\n                   \"disease_total_pct\": disease_total,\n                   \"per_disease_pct\": per_class}, f, indent=2)\n\n    # Quick show\n    if model_type == \"autoencoder\":\n        plt.figure(figsize=(16,4))\n        plt.subplot(1,4,1); plt.imshow((img_01*255).astype(np.uint8)); plt.title(\"Original\"); plt.axis('off')\n        plt.subplot(1,4,2); plt.imshow(np.clip(recon[0], 0, 1)); plt.title(\"Reconstructed\"); plt.axis('off')\n        plt.subplot(1,4,3); plt.imshow(mask_color); plt.title(\"Pred Mask\"); plt.axis('off')\n        plt.subplot(1,4,4); plt.imshow(overlay); plt.title(\"Overlay\"); plt.axis('off')\n    else:\n        plt.figure(figsize=(12,4))\n        plt.subplot(1,3,1); plt.imshow((img_01*255).astype(np.uint8)); plt.title(\"Original\"); plt.axis('off')\n        plt.subplot(1,3,2); plt.imshow(mask_color); plt.title(\"Pred Mask\"); plt.axis('off')\n        plt.subplot(1,3,3); plt.imshow(overlay); plt.title(\"Overlay\"); plt.axis('off')\n    \n    plt.tight_layout(); plt.show()\n\n    print(f\"==== {model_type.upper()} Severity Report ====\")\n    print(f\"Healthy: {healthy_pct:5.1f}% | Total disease: {disease_total:5.1f}%\")\n    for k, v in per_class.items():\n        print(f\"{k:>20}: {v:5.1f}%\")\n    print(f\"Saved: {save_mask}\")\n    print(f\"Saved: {save_overlay}\")\n    print(f\"Saved: {save_json}\")\n\ndef plot_training_history(history, model_name, outdir):\n    \"\"\"Plot training history\"\"\"\n    plt.figure(figsize=(15, 5))\n    \n    plt.subplot(1, 3, 1)\n    plt.plot(history.history['loss'], label='Training Loss')\n    if 'val_loss' in history.history:\n        plt.plot(history.history['val_loss'], label='Validation Loss')\n    plt.title(f'{model_name} - Loss')\n    plt.xlabel('Epoch')\n    plt.ylabel('Loss')\n    plt.legend()\n    \n    if 'iou_metric' in history.history:\n        plt.subplot(1, 3, 2)\n        plt.plot(history.history['iou_metric'], label='Training IoU')\n        if 'val_iou_metric' in history.history:\n            plt.plot(history.history['val_iou_metric'], label='Validation IoU')\n        plt.title(f'{model_name} - IoU')\n        plt.xlabel('Epoch')\n        plt.ylabel('IoU')\n        plt.legend()\n    \n    if 'accuracy' in history.history:\n        plt.subplot(1, 3, 3)\n        plt.plot(history.history['accuracy'], label='Training Accuracy')\n        if 'val_accuracy' in history.history:\n            plt.plot(history.history['val_accuracy'], label='Validation Accuracy')\n        plt.title(f'{model_name} - Accuracy')\n        plt.xlabel('Epoch')\n        plt.ylabel('Accuracy')\n        plt.legend()\n    \n    plt.tight_layout()\n    save_path = os.path.join(outdir, f\"{model_name}_training_history.png\")\n    plt.savefig(save_path, dpi=150, bbox_inches='tight')\n    plt.close()\n    print(f\"Saved training history: {save_path}\")\n\n# ============ Main Training Functions ============\ndef train_few_shot_model(X_train, Y_train, X_val, Y_val, input_shape):\n    \"\"\"Improved training for Few-Shot Learning model\"\"\"\n    print(\"\\n🚀 Training Improved Few-Shot Learning Model...\")\n    \n    # Build improved model\n    base_model = build_few_shot_segmentation_network(input_shape, NUM_CLASSES, EMBEDDING_DIM)\n    \n    # Use weighted loss to handle class imbalance\n    class_weights = compute_auto_class_weights(Y_train, NUM_CLASSES)\n    \n    def weighted_loss(y_true, y_pred):\n        # Convert y_true to one-hot\n        y_true_oh = tf.one_hot(tf.cast(y_true, tf.int32), NUM_CLASSES)\n        \n        # Calculate crossentropy\n        ce = tf.keras.losses.categorical_crossentropy(y_true_oh, y_pred)\n        \n        # Apply class weights\n        weights = tf.reduce_sum(class_weights * y_true_oh, axis=-1)\n        weighted_ce = weights * ce\n        \n        return tf.reduce_mean(weighted_ce)\n    \n    base_model.compile(\n        optimizer=keras.optimizers.Adam(1e-4),\n        loss=weighted_loss,\n        metrics=[iou_metric, 'accuracy']\n    )\n    \n    # Add better callbacks\n    callbacks = [\n        keras.callbacks.ModelCheckpoint(\n            os.path.join(OUTDIR, \"few_shot_best.h5\"),\n            monitor='val_iou_metric', mode='max',\n            save_best_only=True, verbose=1\n        ),\n        keras.callbacks.EarlyStopping(\n            monitor='val_iou_metric', mode='max',\n            patience=10, restore_best_weights=True\n        ),\n        keras.callbacks.ReduceLROnPlateau(\n            monitor='val_iou_metric', factor=0.5, patience=5,\n            min_lr=1e-6, verbose=1\n        )\n    ]\n    \n    history = base_model.fit(\n        X_train, Y_train,\n        validation_data=(X_val, Y_val),\n        batch_size=BATCH_SIZE,\n        epochs=EPOCHS,\n        callbacks=callbacks,\n        verbose=1\n    )\n    \n    plot_training_history(history, \"FewShotLearning\", OUTDIR)\n    return base_model\n\ndef train_autoencoder_model(X_train, Y_train, X_val, Y_val, input_shape):\n    \"\"\"Train Convolutional Autoencoder model\"\"\"\n    print(\"\\n🚀 Training Convolutional Autoencoder...\")\n    \n    model = build_conv_autoencoder(input_shape, LATENT_DIM, NUM_CLASSES)\n    \n    # Prepare data\n    Y_train_oh = tf.one_hot(Y_train, NUM_CLASSES).numpy()\n    Y_val_oh = tf.one_hot(Y_val, NUM_CLASSES).numpy()\n    \n    # Custom training loop for multi-output model\n    optimizer = keras.optimizers.Adam(1e-3)\n    \n    # Compile model with custom loss\n    model.compile(\n        optimizer=optimizer,\n        loss={\n            'reconstruction': 'mse',\n            'segmentation': 'categorical_crossentropy'\n        },\n        loss_weights={\n            'reconstruction': RECONSTRUCTION_WEIGHT,\n            'segmentation': SEGMENTATION_WEIGHT\n        },\n        metrics={\n            'segmentation': [iou_metric, 'accuracy']\n        }\n    )\n    \n    callbacks = [\n        keras.callbacks.ModelCheckpoint(\n            os.path.join(OUTDIR, \"autoencoder_best.h5\"),\n            monitor='val_segmentation_iou_metric', mode='max',\n            save_best_only=True, verbose=1\n        ),\n        keras.callbacks.EarlyStopping(\n            monitor='val_segmentation_iou_metric', mode='max',\n            patience=10, restore_best_weights=True\n        ),\n        keras.callbacks.ReduceLROnPlateau(\n            monitor='val_loss', factor=0.5, patience=4,\n            min_lr=1e-6, verbose=1\n        )\n    ]\n    \n    history = model.fit(\n        X_train, {'reconstruction': X_train, 'segmentation': Y_train_oh},\n        validation_data=(X_val, {'reconstruction': X_val, 'segmentation': Y_val_oh}),\n        batch_size=BATCH_SIZE,\n        epochs=EPOCHS,\n        callbacks=callbacks,\n        verbose=1\n    )\n    \n    plot_training_history(history, \"ConvAutoencoder\", OUTDIR)\n    return model\n\n# ============ Main ============\ndef main():\n    t0 = time.time()\n    print(\"Loading dataset...\")\n    ds = AppleLeafDataset(BASE_DIR, IMG_SIZE)\n    X, Y = ds.load()\n\n    # splits ≈70/15/15\n    Xtr, Xte, Ytr, Yte = train_test_split(X, Y, test_size=0.15, random_state=SEED, shuffle=True)\n    Xtr, Xva, Ytr, Yva = train_test_split(Xtr, Ytr, test_size=0.1765, random_state=SEED, shuffle=True)\n    print(f\"Shapes -> Train: {Xtr.shape}, Val: {Xva.shape}, Test: {Xte.shape}\")\n\n    # Apply data augmentation\n    print(\"Applying data augmentation...\")\n    Xtr, Ytr = augment_data(Xtr, Ytr)\n    print(f\"After augmentation -> Train: {Xtr.shape}\")\n\n    # class weights\n    if AUTO_CLASS_WEIGHTS:\n        global CLASS_WEIGHTS\n        CLASS_WEIGHTS = tf.constant(compute_auto_class_weights(Ytr, NUM_CLASSES), dtype=tf.float32)\n        print(\"Class weights (auto):\", CLASS_WEIGHTS.numpy())\n\n    input_shape = (IMG_SIZE, IMG_SIZE, 3)\n    os.makedirs(OUTDIR, exist_ok=True)\n    results = []\n\n    # ============ Train Few-Shot Learning Model ============\n    clear_tf_memory()  # Clear memory before training\n    \n    fsl_ckpt = os.path.join(OUTDIR, \"few_shot_best.h5\")\n    if SKIP_TRAIN_IF_CKPT and os.path.exists(fsl_ckpt):\n        print(\"Few-Shot model checkpoint found, loading...\")\n        try:\n            fsl_model = keras.models.load_model(fsl_ckpt, compile=False)\n            fsl_model.compile(\n                optimizer=keras.optimizers.Adam(1e-4),\n                loss='categorical_crossentropy',\n                metrics=[iou_metric, 'accuracy']\n            )\n        except Exception as e:\n            print(f\"Failed to load FSL checkpoint: {e}; training from scratch.\")\n            fsl_model = train_few_shot_model(Xtr, Ytr, Xva, Yva, input_shape)\n    else:\n        fsl_model = train_few_shot_model(Xtr, Ytr, Xva, Yva, input_shape)\n    \n    # Evaluate Few-Shot model\n    print(\"Evaluating Few-Shot Learning model...\")\n    Y_val_oh = tf.one_hot(Yva, NUM_CLASSES).numpy()\n    Y_test_oh = tf.one_hot(Yte, NUM_CLASSES).numpy()\n    \n    val_metrics_fsl = fsl_model.evaluate(Xva, Y_val_oh, verbose=0)\n    test_metrics_fsl = fsl_model.evaluate(Xte, Y_test_oh, verbose=0)\n    \n    fsl_results = {\n        \"Model\": \"FewShotLearning\",\n        \"Val Loss\": float(val_metrics_fsl[0]),\n        \"Val IoU\": float(val_metrics_fsl[1]),\n        \"Val Acc\": float(val_metrics_fsl[2]),\n        \"Test Loss\": float(test_metrics_fsl[0]),\n        \"Test IoU\": float(test_metrics_fsl[1]),\n        \"Test Acc\": float(test_metrics_fsl[2]),\n    }\n    results.append(fsl_results)\n    \n    # Visualize Few-Shot results\n    visualize_few_shot_results(fsl_model, Xva, Yva, n=4, outdir=OUTDIR)\n    \n    # ============ Train Convolutional Autoencoder ============\n    clear_tf_memory()  # Clear memory before training\n    \n    cae_ckpt = os.path.join(OUTDIR, \"autoencoder_best.h5\")\n    if SKIP_TRAIN_IF_CKPT and os.path.exists(cae_ckpt):\n        print(\"Autoencoder checkpoint found, loading...\")\n        try:\n            cae_model = keras.models.load_model(cae_ckpt, compile=False)\n            cae_model.compile(\n                optimizer=keras.optimizers.Adam(1e-3),\n                loss={\n                    'reconstruction': 'mse',\n                    'segmentation': 'categorical_crossentropy'\n                },\n                loss_weights={\n                    'reconstruction': RECONSTRUCTION_WEIGHT,\n                    'segmentation': SEGMENTATION_WEIGHT\n                },\n                metrics={\n                    'segmentation': [iou_metric, 'accuracy']\n                }\n            )\n        except Exception as e:\n            print(f\"Failed to load CAE checkpoint: {e}; training from scratch.\")\n            cae_model = train_autoencoder_model(Xtr, Ytr, Xva, Yva, input_shape)\n    else:\n        cae_model = train_autoencoder_model(Xtr, Ytr, Xva, Yva, input_shape)\n    \n    # Evaluate Autoencoder\n    print(\"Evaluating Convolutional Autoencoder...\")\n    val_metrics_cae = cae_model.evaluate(\n        Xva, {'reconstruction': Xva, 'segmentation': Y_val_oh}, verbose=0\n    )\n    test_metrics_cae = cae_model.evaluate(\n        Xte, {'reconstruction': Xte, 'segmentation': Y_test_oh}, verbose=0\n    )\n    \n    cae_results = {\n        \"Model\": \"ConvAutoencoder\",\n        \"Val Loss\": float(val_metrics_cae[0]),\n        \"Val IoU\": float(val_metrics_cae[3]),  # segmentation_iou_metric\n        \"Val Acc\": float(val_metrics_cae[4]),  # segmentation_accuracy\n        \"Test Loss\": float(test_metrics_cae[0]),\n        \"Test IoU\": float(test_metrics_cae[3]),\n        \"Test Acc\": float(test_metrics_cae[4]),\n    }\n    results.append(cae_results)\n    \n    # Visualize Autoencoder results\n    visualize_autoencoder_results(cae_model, Xva, Yva, n=4, outdir=OUTDIR)\n    \n    # ============ Single Image Inference ============\n    if DO_INFERENCE_AFTER_TRAIN and TEST_IMAGE_PATH and os.path.exists(TEST_IMAGE_PATH):\n        print(f\"\\nRunning single-image inference on: {TEST_IMAGE_PATH}\")\n        \n        print(\"Testing with Few-Shot Learning model:\")\n        test_single_image(fsl_model, TEST_IMAGE_PATH, outdir=OUTDIR, \n                         alpha=OVERLAY_ALPHA, model_type=\"few_shot\")\n        \n        print(\"\\nTesting with Convolutional Autoencoder:\")\n        test_single_image(cae_model, TEST_IMAGE_PATH, outdir=OUTDIR, \n                         alpha=OVERLAY_ALPHA, model_type=\"autoencoder\")\n    \n    elif DO_INFERENCE_AFTER_TRAIN and TEST_IMAGE_PATH:\n        print(f\"TEST_IMAGE_PATH does not exist: {TEST_IMAGE_PATH}\")\n\n    # Save comparison results\n    cmp_csv = os.path.join(OUTDIR, \"fsl_cae_comparison.csv\")\n    df = pd.DataFrame(results)\n    df = df.sort_values(\"Test IoU\", ascending=False)\n    df.to_csv(cmp_csv, index=False)\n    \n    print(\"\\n================ Model Comparison ================\")\n    print(df.to_string(index=False))\n    print(f\"\\nSaved: {cmp_csv}\")\n    print(f\"Done in {time.time()-t0:.1f}s\")\n\nif __name__ == \"__main__\":\n    main()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-31T17:34:34.033193Z","iopub.execute_input":"2025-08-31T17:34:34.033567Z","iopub.status.idle":"2025-08-31T17:35:30.406076Z","shell.execute_reply.started":"2025-08-31T17:34:34.033532Z","shell.execute_reply":"2025-08-31T17:35:30.405313Z"}},"outputs":[{"name":"stdout","text":"GPU mem-growth not set: Physical devices cannot be modified after being initialized\nLoading dataset...\nAlternaria leaf spot | imgs: 278 | masks: 278 | paired: 278\nBrown spot           | imgs: 215 | masks: 215 | paired: 215\nGray spot            | imgs: 395 | masks: 395 | paired: 395\nHealthy leaf         | imgs: 409 | masks: 409 | paired: 409\nRust                 | imgs: 344 | masks: 344 | paired: 344\nPaired samples: 1641\n","output_type":"stream"},{"name":"stderr","text":"Loading data: 100%|██████████| 1641/1641 [00:18<00:00, 86.56it/s] \n","output_type":"stream"},{"name":"stdout","text":"Shapes -> Train: (1147, 224, 224, 3), Val: (247, 224, 224, 3), Test: (247, 224, 224, 3)\nApplying data augmentation...\nAfter augmentation -> Train: (4588, 224, 224, 3)\nClass frequencies: [0.66392998 0.32279709 0.00422985 0.00074823 0.00138131 0.00691354]\nClass weights: [0.13314099 0.83377842 1.17963299 1.18334438 1.18266961 1.17677131]\nClass weights (auto): [0.13314098 0.83377844 1.179633   1.1833444  1.1826696  1.1767713 ]\nFew-Shot model checkpoint found, loading...\nEvaluating Few-Shot Learning model...\nSaved few-shot visualization: outputs/few_shot_results.png\nAutoencoder checkpoint found, loading...\nEvaluating Convolutional Autoencoder...\nSaved autoencoder visualization: outputs/autoencoder_results.png\nTEST_IMAGE_PATH does not exist: /kaggle/input/test-data/apple disease 1.jpg\n\n================ Model Comparison ================\n          Model  Val Loss  Val IoU  Val Acc  Test Loss  Test IoU  Test Acc\nConvAutoencoder  0.579071 0.922966 0.157745   0.598428  0.921912  0.157431\nFewShotLearning  0.205526 0.290041 0.942531   0.176663  0.285767  0.943960\n\nSaved: outputs/fsl_cae_comparison.csv\nDone in 56.2s\n","output_type":"stream"}],"execution_count":8},{"cell_type":"code","source":"# =========================================================\n# Improved Apple Leaf Segmentation — Few-Shot Learning + Convolutional Autoencoder\n# Enhanced with better architectures, proper metrics, and optimized training\n# =========================================================\nimport os\nos.environ[\"TF_CPP_MIN_LOG_LEVEL\"] = \"2\"\nos.environ[\"TF_ENABLE_ONEDNN_OPTS\"] = \"0\"\nos.environ[\"TF_DISABLE_PROFILER\"] = \"1\"\n\nimport cv2\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom tqdm import tqdm\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.utils.class_weight import compute_class_weight\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nimport pandas as pd\nimport time\nimport random\nimport json\nfrom collections import Counter\n\n# ============ Enhanced Config ============\nBASE_DIR    = \"/kaggle/input/apple-dataset/ATLDSD\"   # <--- change if needed\nIMG_SIZE    = 256  # Increased back for better feature learning\nBATCH_SIZE  = 6    # Optimized batch size\nEPOCHS      = 50\nSEED        = 2025\n\nOUTDIR = \"outputs\"\nSKIP_TRAIN_IF_CKPT = True\n\n# Few-Shot Learning specific configs\nN_WAY = 6           # Number of classes (including background)\nK_SHOT = 3          # Support samples per class\nQUERY_SHOT = 2      # Query samples per class\nSUPPORT_SET_SIZE = N_WAY * K_SHOT\nEMBEDDING_DIM = 64  # Increased for better feature representation\nPROTOTYPE_EPISODES = 100  # More episodes for better training\n\n# Convolutional Autoencoder configs\nLATENT_DIM = 128    # Increased for better representation\nRECONSTRUCTION_WEIGHT = 0.5  # Reduced reconstruction weight\nSEGMENTATION_WEIGHT = 2.0    # Increased segmentation weight\nFEATURE_WEIGHT = 0.3         # New: weight for feature consistency\n\n# Training enhancements\nAUTO_CLASS_WEIGHTS = True\nUSE_DATA_AUGMENTATION = True\nUSE_FOCAL_LOSS = True\nFOCAL_ALPHA = 0.25\nFOCAL_GAMMA = 2.0\nUSE_MIXUP = True\nMIXUP_ALPHA = 0.2\n\n# Inference settings\nDO_INFERENCE_AFTER_TRAIN = True\nTEST_IMAGE_PATH = \"/kaggle/input/test-data/apple disease 1.jpg\"  # <--- change or set to None\nOVERLAY_ALPHA = 0.45\n\nrandom.seed(SEED); np.random.seed(SEED); tf.random.set_seed(SEED)\n\nCLASS_NAMES = [\n    \"Background\",           # 0\n    \"Healthy\",              # 1\n    \"Brown spot\",           # 2\n    \"Alternaria leaf spot\", # 3\n    \"Gray spot\",            # 4\n    \"Rust\"                  # 5\n]\nNUM_CLASSES = len(CLASS_NAMES)\n\nCOLOR_MAP = {\n    (0,   0,   0): 0,   # Background\n    (128, 0,   0): 1,   # Healthy\n    (128, 0, 128): 2,   # Brown spot\n    (128,128,  0): 3,   # Alternaria\n    (0,   0, 128): 4,   # Gray\n    (0, 128,   0): 5,   # Rust\n}\n\n# Default weights (overridden if AUTO_CLASS_WEIGHTS)\nCLASS_WEIGHTS = tf.constant([0.25, 0.7, 1.1, 1.1, 1.1, 1.2], dtype=tf.float32)\n\n# ============ Enhanced Utils ============\ndef set_gpu_growth():\n    try:\n        gpus = tf.config.list_physical_devices('GPU')\n        if gpus:\n            for g in gpus:\n                tf.config.experimental.set_memory_growth(g, True)\n            print(f\"GPU found: {len(gpus)}; memory growth enabled\")\n        else:\n            print(\"No GPU detected; running on CPU\")\n    except Exception as e:\n        print(\"GPU mem-growth not set:\", e)\nset_gpu_growth()\n\ndef clear_tf_memory():\n    \"\"\"Clear TensorFlow GPU memory\"\"\"\n    tf.keras.backend.clear_session()\n    import gc\n    gc.collect()\n\ndef rgb_mask_to_classes(mask_rgb, tol=15):\n    \"\"\"Enhanced RGB to class mapping with better tolerance\"\"\"\n    out = np.zeros(mask_rgb.shape[:2], dtype=np.uint8)\n    \n    # Use Manhattan distance for better color matching\n    for (r, g, b), cls in COLOR_MAP.items():\n        target_color = np.array([r, g, b])\n        diff = np.sum(np.abs(mask_rgb - target_color), axis=-1)\n        mask = diff <= tol * 3  # Manhattan distance threshold\n        out[mask] = cls\n    \n    return out\n\nPALETTE = {0:(0,0,0), 1:(128,0,0), 2:(128,0,128), 3:(128,128,0), 4:(0,0,128), 5:(0,128,0)}\ndef mask_to_color(mask):\n    h, w = mask.shape\n    out = np.zeros((h, w, 3), dtype=np.uint8)\n    for c, col in PALETTE.items():\n        out[mask == c] = col\n    return out\n\n# ============ Data Augmentation ============\n@tf.function\ndef augment_data(image, mask):\n    \"\"\"Enhanced data augmentation\"\"\"\n    # Random horizontal flip\n    if tf.random.uniform(()) > 0.5:\n        image = tf.image.flip_left_right(image)\n        mask = tf.image.flip_left_right(mask)\n    \n    # Random rotation\n    angle = tf.random.uniform((), -15, 15) * np.pi / 180\n    image = tf.keras.preprocessing.image.rotate(image, angle, fill_mode='reflect')\n    mask = tf.keras.preprocessing.image.rotate(mask, angle, fill_mode='constant', fill_value=0)\n    \n    # Random brightness and contrast\n    image = tf.image.random_brightness(image, 0.1)\n    image = tf.image.random_contrast(image, 0.9, 1.1)\n    \n    # Random saturation\n    image = tf.image.random_saturation(image, 0.8, 1.2)\n    \n    # Ensure values are in valid range\n    image = tf.clip_by_value(image, 0.0, 1.0)\n    \n    return image, mask\n\ndef mixup_data(x1, y1, x2, y2, alpha=0.2):\n    \"\"\"Mixup augmentation for better generalization\"\"\"\n    lam = np.random.beta(alpha, alpha)\n    mixed_x = lam * x1 + (1 - lam) * x2\n    mixed_y = lam * y1 + (1 - lam) * y2\n    return mixed_x, mixed_y\n\n# ============ Enhanced Dataset ============\nclass EnhancedAppleLeafDataset:\n    IMG_EXTS = (\".png\", \".jpg\", \".jpeg\", \".bmp\", \".tif\", \".tiff\")\n    \n    def __init__(self, base_dir, image_size=256):\n        self.base_dir = base_dir\n        self.image_size = image_size\n        self.image_paths, self.mask_paths = self._discover_pairs()\n        print(f\"Paired samples: {len(self.image_paths)}\")\n\n    def _list_images(self, d):\n        acc = []\n        for r, _, fs in os.walk(d):\n            for f in fs:\n                if f.lower().endswith(self.IMG_EXTS):\n                    acc.append(os.path.join(r, f))\n        return acc\n\n    def _discover_pairs(self):\n        imgs, msks = [], []\n        if not os.path.exists(self.base_dir):\n            raise FileNotFoundError(f\"Base dir not found: {self.base_dir}\")\n        \n        class_stats = {}\n        for cls_folder in sorted(os.listdir(self.base_dir)):\n            cpath = os.path.join(self.base_dir, cls_folder)\n            if not os.path.isdir(cpath): \n                continue\n                \n            img_dir = os.path.join(cpath, \"image\")\n            msk_dir = os.path.join(cpath, \"label\")\n            if not (os.path.exists(img_dir) and os.path.exists(msk_dir)): \n                continue\n\n            img_files = self._list_images(img_dir)\n            msk_files = self._list_images(msk_dir)\n            img_by = {os.path.splitext(os.path.basename(p))[0].lower(): p for p in img_files}\n            msk_by = {os.path.splitext(os.path.basename(p))[0].lower(): p for p in msk_files}\n            common = sorted(set(img_by) & set(msk_by))\n            \n            class_stats[cls_folder] = len(common)\n            print(f\"{cls_folder:20} | imgs:{len(img_files):4d} | masks:{len(msk_files):4d} | paired:{len(common):4d}\")\n            \n            for s in common: \n                imgs.append(img_by[s])\n                msks.append(msk_by[s])\n        \n        print(f\"Total class distribution: {class_stats}\")\n        return imgs, msks\n\n    def load_with_quality_check(self):\n        \"\"\"Load data with enhanced quality checks\"\"\"\n        X, Y = [], []\n        skipped = 0\n        \n        for ip, mp in tqdm(list(zip(self.image_paths, self.mask_paths)), desc=\"Loading data\"):\n            # Load and validate image\n            img = cv2.imread(ip, cv2.IMREAD_COLOR)\n            if img is None:\n                skipped += 1\n                continue\n                \n            img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n            \n            # Quality check: skip very dark or very bright images\n            mean_brightness = np.mean(img)\n            if mean_brightness < 20 or mean_brightness > 240:\n                skipped += 1\n                continue\n            \n            img = cv2.resize(img, (self.image_size, self.image_size), interpolation=cv2.INTER_AREA)\n            img = img.astype(np.float32) / 255.0\n\n            # Load and validate mask\n            msk = cv2.imread(mp, cv2.IMREAD_COLOR)\n            if msk is None:\n                skipped += 1\n                continue\n                \n            msk = cv2.cvtColor(msk, cv2.COLOR_BGR2RGB)\n            msk = cv2.resize(msk, (self.image_size, self.image_size), interpolation=cv2.INTER_NEAREST)\n            msk = rgb_mask_to_classes(msk)\n            \n            # Quality check: skip masks with no foreground\n            if np.sum(msk > 0) < 100:  # At least 100 non-background pixels\n                skipped += 1\n                continue\n\n            X.append(img)\n            Y.append(msk)\n        \n        print(f\"Loaded {len(X)} samples, skipped {skipped} due to quality issues\")\n        return np.asarray(X, np.float32), np.asarray(Y, np.uint8)\n\n# ============ Enhanced Loss Functions ============\ndef focal_loss(y_true, y_pred, alpha=0.25, gamma=2.0):\n    \"\"\"Focal loss for handling class imbalance\"\"\"\n    # Convert to one-hot if needed\n    if len(y_true.shape) == 3:  # If y_true is not one-hot\n        y_true = tf.one_hot(tf.cast(y_true, tf.int32), NUM_CLASSES)\n    \n    # Compute focal loss\n    ce = tf.keras.losses.categorical_crossentropy(y_true, y_pred)\n    p = tf.exp(-ce)\n    focal_loss_value = alpha * tf.pow(1 - p, gamma) * ce\n    return tf.reduce_mean(focal_loss_value)\n\ndef dice_loss(y_true, y_pred, smooth=1e-6):\n    \"\"\"Dice loss for better boundary segmentation\"\"\"\n    if len(y_true.shape) == 3:  # Convert to one-hot if needed\n        y_true = tf.one_hot(tf.cast(y_true, tf.int32), NUM_CLASSES)\n    \n    intersection = tf.reduce_sum(y_true * y_pred, axis=[1, 2])\n    union = tf.reduce_sum(y_true + y_pred, axis=[1, 2])\n    dice = (2.0 * intersection + smooth) / (union + smooth)\n    return 1.0 - tf.reduce_mean(dice)\n\ndef combined_segmentation_loss(y_true, y_pred):\n    \"\"\"Combined loss for better segmentation performance\"\"\"\n    if USE_FOCAL_LOSS:\n        ce_loss = focal_loss(y_true, y_pred, FOCAL_ALPHA, FOCAL_GAMMA)\n    else:\n        if len(y_true.shape) == 3:\n            y_true = tf.one_hot(tf.cast(y_true, tf.int32), NUM_CLASSES)\n        ce_loss = tf.keras.losses.categorical_crossentropy(y_true, y_pred)\n        ce_loss = tf.reduce_mean(ce_loss)\n    \n    d_loss = dice_loss(y_true, y_pred)\n    return 0.7 * ce_loss + 0.3 * d_loss\n\n# ============ Enhanced Metrics ============\n@tf.function\ndef segmentation_accuracy(y_true, y_pred):\n    \"\"\"Proper segmentation accuracy calculation\"\"\"\n    y_pred_classes = tf.argmax(y_pred, axis=-1)\n    if len(y_true.shape) == 4:  # One-hot encoded\n        y_true_classes = tf.argmax(y_true, axis=-1)\n    else:\n        y_true_classes = tf.cast(y_true, tf.int64)\n    \n    return tf.reduce_mean(tf.cast(tf.equal(y_pred_classes, y_true_classes), tf.float32))\n\n@tf.function\ndef mean_iou_metric(y_true, y_pred):\n    \"\"\"Enhanced IoU calculation\"\"\"\n    if len(y_true.shape) == 3:\n        y_true = tf.one_hot(tf.cast(y_true, tf.int32), NUM_CLASSES)\n    \n    y_pred_classes = tf.argmax(y_pred, axis=-1)\n    y_true_classes = tf.argmax(y_true, axis=-1)\n    \n    # Calculate IoU for each class\n    ious = []\n    for class_id in range(NUM_CLASSES):\n        pred_mask = tf.equal(y_pred_classes, class_id)\n        true_mask = tf.equal(y_true_classes, class_id)\n        \n        intersection = tf.reduce_sum(tf.cast(tf.logical_and(pred_mask, true_mask), tf.float32))\n        union = tf.reduce_sum(tf.cast(tf.logical_or(pred_mask, true_mask), tf.float32))\n        \n        iou = tf.where(union > 0, intersection / (union + 1e-7), 1.0)\n        ious.append(iou)\n    \n    # Return mean IoU excluding background\n    return tf.reduce_mean(tf.stack(ious[1:]))  # Exclude background class\n\n@tf.function\ndef disease_detection_accuracy(y_true, y_pred):\n    \"\"\"Accuracy for disease vs healthy classification\"\"\"\n    y_pred_classes = tf.argmax(y_pred, axis=-1)\n    if len(y_true.shape) == 4:\n        y_true_classes = tf.argmax(y_true, axis=-1)\n    else:\n        y_true_classes = tf.cast(y_true, tf.int64)\n    \n    # Convert to binary: 0=background, 1=healthy, 2+=disease\n    y_true_binary = tf.where(y_true_classes == 0, 0,  # background\n                            tf.where(y_true_classes == 1, 1, 2))  # healthy=1, disease=2\n    y_pred_binary = tf.where(y_pred_classes == 0, 0,\n                            tf.where(y_pred_classes == 1, 1, 2))\n    \n    # Calculate accuracy only on leaf pixels (non-background)\n    leaf_mask = y_true_binary > 0\n    if tf.reduce_sum(tf.cast(leaf_mask, tf.float32)) > 0:\n        leaf_accuracy = tf.reduce_mean(\n            tf.cast(tf.equal(y_true_binary, y_pred_binary), tf.float32)[leaf_mask]\n        )\n        return leaf_accuracy\n    else:\n        return 1.0\n\n# ============ Enhanced Few-Shot Learning Architecture ============\ndef build_enhanced_feature_extractor(input_shape, embedding_dim=64):\n    \"\"\"Enhanced feature extractor with attention mechanism\"\"\"\n    inputs = keras.Input(shape=input_shape)\n    \n    # Initial convolutions\n    x = layers.Conv2D(32, 3, padding='same', activation='relu')(inputs)\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(32, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    skip1 = x\n    x = layers.MaxPooling2D(2)(x)  # 128x128\n    \n    # Second block\n    x = layers.Conv2D(64, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(64, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    skip2 = x\n    x = layers.MaxPooling2D(2)(x)  # 64x64\n    \n    # Third block with attention\n    x = layers.Conv2D(128, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(128, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    \n    # Simple attention mechanism\n    attention = layers.Conv2D(1, 1, activation='sigmoid')(x)\n    x = layers.Multiply()([x, attention])\n    \n    # Feature embedding\n    features = layers.Conv2D(embedding_dim, 1, activation='relu')(x)\n    features = layers.BatchNormalization()(features)\n    \n    # Decoder path\n    x = layers.Conv2DTranspose(64, 3, strides=2, padding='same', activation='relu')(features)\n    x = layers.BatchNormalization()(x)\n    x = layers.Concatenate()([x, skip2])\n    x = layers.Conv2D(64, 3, padding='same', activation='relu')(x)\n    \n    x = layers.Conv2DTranspose(32, 3, strides=2, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    x = layers.Concatenate()([x, skip1])\n    x = layers.Conv2D(32, 3, padding='same', activation='relu')(x)\n    \n    # Final prediction\n    outputs = layers.Conv2D(NUM_CLASSES, 1, activation='softmax')(x)\n    \n    return keras.Model(inputs, outputs, name=\"EnhancedFeatureExtractor\")\n\n# ============ Enhanced Convolutional Autoencoder ============\ndef build_enhanced_autoencoder(input_shape, latent_dim=128, num_classes=6):\n    \"\"\"Enhanced autoencoder with better skip connections and attention\"\"\"\n    inputs = keras.Input(shape=input_shape)\n    \n    # Encoder with progressive downsampling\n    x = layers.Conv2D(32, 3, padding='same', activation='relu')(inputs)\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(32, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    skip1 = x  # 256x256\n    x = layers.MaxPooling2D(2)(x)\n    \n    x = layers.Conv2D(64, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(64, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    skip2 = x  # 128x128\n    x = layers.MaxPooling2D(2)(x)\n    \n    x = layers.Conv2D(128, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(128, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    skip3 = x  # 64x64\n    x = layers.MaxPooling2D(2)(x)\n    \n    x = layers.Conv2D(256, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(256, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    skip4 = x  # 32x32\n    x = layers.MaxPooling2D(2)(x)\n    \n    # Bottleneck\n    x = layers.Conv2D(512, 3, padding='same', activation='relu')(x)  # 16x16\n    x = layers.BatchNormalization()(x)\n    \n    # Global features for latent representation\n    global_pool = layers.GlobalAveragePooling2D()(x)\n    latent = layers.Dense(latent_dim, activation='relu', name='latent_representation')(global_pool)\n    \n    # Reshape latent for decoder\n    x_latent = layers.Dense(16 * 16 * 256, activation='relu')(latent)\n    x_latent = layers.Reshape((16, 16, 256))(x_latent)\n    x = layers.Add()([x, x_latent])  # Combine with spatial features\n    \n    # Reconstruction decoder\n    x_recon = layers.Conv2DTranspose(256, 3, strides=2, padding='same', activation='relu')(x)  # 32x32\n    x_recon = layers.BatchNormalization()(x_recon)\n    x_recon = layers.Concatenate()([x_recon, skip4])\n    x_recon = layers.Conv2D(128, 3, padding='same', activation='relu')(x_recon)\n    \n    x_recon = layers.Conv2DTranspose(128, 3, strides=2, padding='same', activation='relu')(x_recon)  # 64x64\n    x_recon = layers.BatchNormalization()(x_recon)\n    x_recon = layers.Concatenate()([x_recon, skip3])\n    x_recon = layers.Conv2D(64, 3, padding='same', activation='relu')(x_recon)\n    \n    x_recon = layers.Conv2DTranspose(64, 3, strides=2, padding='same', activation='relu')(x_recon)  # 128x128\n    x_recon = layers.BatchNormalization()(x_recon)\n    x_recon = layers.Concatenate()([x_recon, skip2])\n    x_recon = layers.Conv2D(32, 3, padding='same', activation='relu')(x_recon)\n    \n    x_recon = layers.Conv2DTranspose(32, 3, strides=2, padding='same', activation='relu')(x_recon)  # 256x256\n    x_recon = layers.BatchNormalization()(x_recon)\n    x_recon = layers.Concatenate()([x_recon, skip1])\n    x_recon = layers.Conv2D(16, 3, padding='same', activation='relu')(x_recon)\n    \n    reconstruction = layers.Conv2D(3, 3, padding='same', activation='sigmoid', name='reconstruction')(x_recon)\n    \n    # Segmentation decoder (separate path)\n    x_seg = layers.Conv2DTranspose(256, 3, strides=2, padding='same', activation='relu')(x)  # 32x32\n    x_seg = layers.BatchNormalization()(x_seg)\n    x_seg = layers.Conv2D(128, 3, padding='same', activation='relu')(x_seg)\n    \n    x_seg = layers.Conv2DTranspose(128, 3, strides=2, padding='same', activation='relu')(x_seg)  # 64x64\n    x_seg = layers.BatchNormalization()(x_seg)\n    x_seg = layers.Conv2D(64, 3, padding='same', activation='relu')(x_seg)\n    \n    x_seg = layers.Conv2DTranspose(64, 3, strides=2, padding='same', activation='relu')(x_seg)  # 128x128\n    x_seg = layers.BatchNormalization()(x_seg)\n    x_seg = layers.Conv2D(32, 3, padding='same', activation='relu')(x_seg)\n    \n    x_seg = layers.Conv2DTranspose(32, 3, strides=2, padding='same', activation='relu')(x_seg)  # 256x256\n    x_seg = layers.BatchNormalization()(x_seg)\n    x_seg = layers.Conv2D(16, 3, padding='same', activation='relu')(x_seg)\n    \n    # Attention for segmentation\n    seg_attention = layers.Conv2D(1, 1, activation='sigmoid')(x_seg)\n    x_seg = layers.Multiply()([x_seg, seg_attention])\n    \n    segmentation = layers.Conv2D(num_classes, 1, activation='softmax', name='segmentation')(x_seg)\n    \n    model = keras.Model(inputs, [reconstruction, segmentation], name=\"EnhancedAutoencoder\")\n    return model\n\n# ============ Enhanced Few-Shot Learning ============\ndef create_balanced_episode(X, Y, n_way=6, k_shot=3, query_shot=2):\n    \"\"\"Create more balanced few-shot episodes\"\"\"\n    episode_x_support = []\n    episode_y_support = []\n    episode_x_query = []\n    episode_y_query = []\n    \n    # Ensure we have samples for each class\n    class_samples = {}\n    for class_id in range(n_way):\n        # Find samples that contain this class (not just background)\n        if class_id == 0:  # Background - present in all images\n            class_indices = list(range(len(X)))\n        else:\n            class_indices = []\n            for i, mask in enumerate(Y):\n                if np.sum(mask == class_id) > 50:  # At least 50 pixels of this class\n                    class_indices.append(i)\n        \n        class_samples[class_id] = class_indices\n    \n    # Sample for each class\n    for class_id in range(n_way):\n        available_indices = class_samples[class_id]\n        \n        if len(available_indices) < k_shot + query_shot:\n            # Not enough samples, use replacement\n            selected_indices = np.random.choice(available_indices, \n                                              k_shot + query_shot, replace=True)\n        else:\n            selected_indices = np.random.choice(available_indices, \n                                              k_shot + query_shot, replace=False)\n        \n        support_indices = selected_indices[:k_shot]\n        query_indices = selected_indices[k_shot:]\n        \n        episode_x_support.extend(X[support_indices])\n        episode_y_support.extend(Y[support_indices])\n        episode_x_query.extend(X[query_indices])\n        episode_y_query.extend(Y[query_indices])\n    \n    return (np.array(episode_x_support), np.array(episode_y_support),\n            np.array(episode_x_query), np.array(episode_y_query))\n\nclass EnhancedFewShotTrainer(keras.Model):\n    \"\"\"Enhanced few-shot trainer with better loss and metrics\"\"\"\n    def __init__(self, base_model, **kwargs):\n        super().__init__(**kwargs)\n        self.base_model = base_model\n        self.loss_tracker = keras.metrics.Mean(name=\"loss\")\n        self.accuracy_tracker = keras.metrics.Mean(name=\"accuracy\")\n        self.iou_tracker = keras.metrics.Mean(name=\"iou\")\n        \n    def call(self, inputs):\n        return self.base_model(inputs)\n    \n    @property\n    def metrics(self):\n        return [self.loss_tracker, self.accuracy_tracker, self.iou_tracker]\n        \n    def train_step(self, data):\n        x, y = data\n        \n        with tf.GradientTape() as tape:\n            y_pred = self.base_model(x, training=True)\n            loss = combined_segmentation_loss(y, y_pred)\n        \n        gradients = tape.gradient(loss, self.base_model.trainable_variables)\n        self.optimizer.apply_gradients(zip(gradients, self.base_model.trainable_variables))\n        \n        # Update metrics\n        accuracy = segmentation_accuracy(y, y_pred)\n        iou = mean_iou_metric(y, y_pred)\n        \n        self.loss_tracker.update_state(loss)\n        self.accuracy_tracker.update_state(accuracy)\n        self.iou_tracker.update_state(iou)\n        \n        return {\n            \"loss\": self.loss_tracker.result(),\n            \"accuracy\": self.accuracy_tracker.result(),\n            \"iou\": self.iou_tracker.result()\n        }\n\n# ============ Data Generators ============\ndef create_augmented_generator(X, Y, batch_size, use_mixup=False):\n    \"\"\"Create data generator with augmentation\"\"\"\n    dataset_size = len(X)\n    \n    while True:\n        indices = np.random.permutation(dataset_size)\n        for start_idx in range(0, dataset_size, batch_size):\n            end_idx = min(start_idx + batch_size, dataset_size)\n            batch_indices = indices[start_idx:end_idx]\n            \n            batch_x = X[batch_indices]\n            batch_y = Y[batch_indices]\n            \n            # Apply augmentation\n            if USE_DATA_AUGMENTATION:\n                augmented_x = []\n                augmented_y = []\n                \n                for img, mask in zip(batch_x, batch_y):\n                    if np.random.random() > 0.5:  # 50% chance of augmentation\n                        # Convert to tensor for augmentation\n                        img_tensor = tf.convert_to_tensor(img)\n                        mask_tensor = tf.convert_to_tensor(mask[..., None])  # Add channel dim\n                        aug_img, aug_mask = augment_data(img_tensor, mask_tensor)\n                        aug_img = aug_img.numpy()\n                        aug_mask = aug_mask.numpy().squeeze(-1)  # Remove channel dim\n                        augmented_x.append(aug_img)\n                        augmented_y.append(aug_mask)\n                    else:\n                        augmented_x.append(img)\n                        augmented_y.append(mask)\n                \n                batch_x = np.array(augmented_x)\n                batch_y = np.array(augmented_y)\n            \n            # Apply mixup\n            if use_mixup and USE_MIXUP and np.random.random() > 0.7:  # 30% chance\n                # Randomly pair samples for mixup\n                indices1 = np.arange(len(batch_x))\n                indices2 = np.random.permutation(len(batch_x))\n                \n                for i in range(len(batch_x)):\n                    if i != indices2[i]:  # Don't mix with itself\n                        mixed_x, mixed_y = mixup_data(\n                            batch_x[i], batch_y[i],\n                            batch_x[indices2[i]], batch_y[indices2[i]],\n                            MIXUP_ALPHA\n                        )\n                        batch_x[i] = mixed_x\n                        batch_y[i] = mixed_y\n            \n            # Convert masks to one-hot for training\n            batch_y_oh = tf.one_hot(batch_y, NUM_CLASSES).numpy()\n            \n            yield batch_x, batch_y_oh\n\n# ============ Enhanced Training Functions ============\ndef train_enhanced_few_shot_model(X_train, Y_train, X_val, Y_val, input_shape):\n    \"\"\"Train enhanced few-shot learning model\"\"\"\n    print(\"\\n🚀 Training Enhanced Few-Shot Learning Model...\")\n    \n    # Build enhanced model\n    base_model = build_enhanced_feature_extractor(input_shape, EMBEDDING_DIM)\n    fsl_trainer = EnhancedFewShotTrainer(base_model)\n    \n    # Use different learning rates for different phases\n    initial_lr = 1e-3\n    fsl_trainer.compile(optimizer=keras.optimizers.Adam(initial_lr))\n    \n    # Phase 1: Episodic pre-training\n    print(\"Phase 1: Episodic pre-training...\")\n    for episode in range(PROTOTYPE_EPISODES):\n        support_x, support_y, query_x, query_y = create_balanced_episode(\n            X_train, Y_train, N_WAY, K_SHOT, QUERY_SHOT\n        )\n        \n        # Train on support + query\n        episode_x = np.concatenate([support_x, query_x], axis=0)\n        episode_y = np.concatenate([support_y, query_y], axis=0)\n        \n        loss_dict = fsl_trainer.train_step([episode_x, episode_y])\n        \n        if episode % 20 == 0:\n            print(f\"Episode {episode}/{PROTOTYPE_EPISODES} - \"\n                  f\"Loss: {loss_dict['loss']:.4f}, \"\n                  f\"Acc: {loss_dict['accuracy']:.4f}, \"\n                  f\"IoU: {loss_dict['iou']:.4f}\")\n    \n    # Phase 2: Standard fine-tuning with enhanced data\n    print(\"Phase 2: Fine-tuning with full dataset...\")\n    Y_train_oh = tf.one_hot(Y_train, NUM_CLASSES).numpy()\n    Y_val_oh = tf.one_hot(Y_val, NUM_CLASSES).numpy()\n    \n    # Recompile with lower learning rate and proper metrics\n    base_model.compile(\n        optimizer=keras.optimizers.Adam(1e-4),\n        loss=combined_segmentation_loss,\n        metrics=[segmentation_accuracy, mean_iou_metric, disease_detection_accuracy]\n    )\n    \n    # Enhanced callbacks\n    callbacks = [\n        keras.callbacks.ModelCheckpoint(\n            os.path.join(OUTDIR, \"enhanced_few_shot_best.h5\"),\n            monitor='val_mean_iou_metric', mode='max',\n            save_best_only=True, verbose=1\n        ),\n        keras.callbacks.EarlyStopping(\n            monitor='val_mean_iou_metric', mode='max',\n            patience=8, restore_best_weights=True\n        ),\n        keras.callbacks.ReduceLROnPlateau(\n            monitor='val_loss', factor=0.7, patience=3,\n            min_lr=1e-6, verbose=1\n        ),\n        keras.callbacks.LearningRateScheduler(\n            lambda epoch: initial_lr * (0.95 ** epoch), verbose=0\n        )\n    ]\n    \n    # Create data generators\n    steps_per_epoch = len(X_train) // BATCH_SIZE\n    validation_steps = len(X_val) // BATCH_SIZE\n    \n    train_gen = create_augmented_generator(X_train, Y_train, BATCH_SIZE, use_mixup=True)\n    val_gen = create_augmented_generator(X_val, Y_val, BATCH_SIZE, use_mixup=False)\n    \n    history = base_model.fit(\n        train_gen,\n        steps_per_epoch=steps_per_epoch,\n        validation_data=val_gen,\n        validation_steps=validation_steps,\n        epochs=EPOCHS//2,\n        callbacks=callbacks,\n        verbose=1\n    )\n    \n    plot_enhanced_training_history(history, \"EnhancedFewShotLearning\", OUTDIR)\n    return base_model\n\ndef train_enhanced_autoencoder_model(X_train, Y_train, X_val, Y_val, input_shape):\n    \"\"\"Train enhanced convolutional autoencoder\"\"\"\n    print(\"\\n🚀 Training Enhanced Convolutional Autoencoder...\")\n    \n    model = build_enhanced_autoencoder(input_shape, LATENT_DIM, NUM_CLASSES)\n    \n    # Prepare data\n    Y_train_oh = tf.one_hot(Y_train, NUM_CLASSES).numpy()\n    Y_val_oh = tf.one_hot(Y_val, NUM_CLASSES).numpy()\n    \n    # Enhanced compilation with proper metrics\n    model.compile(\n        optimizer=keras.optimizers.Adam(1e-3),\n        loss={\n            'reconstruction': 'mse',\n            'segmentation': combined_segmentation_loss\n        },\n        loss_weights={\n            'reconstruction': RECONSTRUCTION_WEIGHT,\n            'segmentation': SEGMENTATION_WEIGHT\n        },\n        metrics={\n            'reconstruction': ['mae'],  # Mean Absolute Error for reconstruction\n            'segmentation': [segmentation_accuracy, mean_iou_metric, disease_detection_accuracy]\n        }\n    )\n    \n    # Enhanced callbacks\n    callbacks = [\n        keras.callbacks.ModelCheckpoint(\n            os.path.join(OUTDIR, \"enhanced_autoencoder_best.h5\"),\n            monitor='val_segmentation_mean_iou_metric', mode='max',\n            save_best_only=True, verbose=1\n        ),\n        keras.callbacks.EarlyStopping(\n            monitor='val_segmentation_mean_iou_metric', mode='max',\n            patience=12, restore_best_weights=True\n        ),\n        keras.callbacks.ReduceLROnPlateau(\n            monitor='val_loss', factor=0.7, patience=4,\n            min_lr=1e-6, verbose=1\n        ),\n        keras.callbacks.LearningRateScheduler(\n            lambda epoch: 1e-3 * (0.9 ** epoch), verbose=0\n        )\n    ]\n    \n    # Create augmented data generators\n    steps_per_epoch = len(X_train) // BATCH_SIZE\n    validation_steps = len(X_val) // BATCH_SIZE\n    \n    def autoencoder_generator(X, Y, batch_size, augment=True):\n        dataset_size = len(X)\n        while True:\n            indices = np.random.permutation(dataset_size)\n            for start_idx in range(0, dataset_size, batch_size):\n                end_idx = min(start_idx + batch_size, dataset_size)\n                batch_indices = indices[start_idx:end_idx]\n                \n                batch_x = X[batch_indices]\n                batch_y = Y[batch_indices]\n                \n                # Apply augmentation\n                if augment and USE_DATA_AUGMENTATION:\n                    augmented_x = []\n                    augmented_y = []\n                    \n                    for img, mask in zip(batch_x, batch_y):\n                        if np.random.random() > 0.4:  # 60% chance of augmentation\n                            img_tensor = tf.convert_to_tensor(img)\n                            mask_tensor = tf.convert_to_tensor(mask[..., None])\n                            aug_img, aug_mask = augment_data(img_tensor, mask_tensor)\n                            aug_img = aug_img.numpy()\n                            aug_mask = aug_mask.numpy().squeeze(-1)\n                            augmented_x.append(aug_img)\n                            augmented_y.append(aug_mask)\n                        else:\n                            augmented_x.append(img)\n                            augmented_y.append(mask)\n                    \n                    batch_x = np.array(augmented_x)\n                    batch_y = np.array(augmented_y)\n                \n                # Convert to one-hot\n                batch_y_oh = tf.one_hot(batch_y, NUM_CLASSES).numpy()\n                \n                yield batch_x, {\n                    'reconstruction': batch_x,\n                    'segmentation': batch_y_oh\n                }\n    \n    train_gen = autoencoder_generator(X_train, Y_train, BATCH_SIZE, augment=True)\n    val_gen = autoencoder_generator(X_val, Y_val, BATCH_SIZE, augment=False)\n    \n    history = model.fit(\n        train_gen,\n        steps_per_epoch=steps_per_epoch,\n        validation_data=val_gen,\n        validation_steps=validation_steps,\n        epochs=EPOCHS,\n        callbacks=callbacks,\n        verbose=1\n    )\n    \n    plot_enhanced_training_history(history, \"EnhancedAutoencoder\", OUTDIR)\n    return model\n\n# ============ Enhanced Visualization ============\ndef plot_enhanced_training_history(history, model_name, outdir):\n    \"\"\"Enhanced training history visualization\"\"\"\n    plt.figure(figsize=(20, 5))\n    \n    # Loss plot\n    plt.subplot(1, 4, 1)\n    plt.plot(history.history['loss'], label='Training Loss', linewidth=2)\n    if 'val_loss' in history.history:\n        plt.plot(history.history['val_loss'], label='Validation Loss', linewidth=2)\n    plt.title(f'{model_name} - Loss', fontsize=12, fontweight='bold')\n    plt.xlabel('Epoch')\n    plt.ylabel('Loss')\n    plt.legend()\n    plt.grid(True, alpha=0.3)\n    \n    # Accuracy plot\n    accuracy_key = 'segmentation_accuracy' if 'segmentation_accuracy' in history.history else 'accuracy'\n    if accuracy_key in history.history:\n        plt.subplot(1, 4, 2)\n        plt.plot(history.history[accuracy_key], label='Training Accuracy', linewidth=2)\n        val_acc_key = f'val_{accuracy_key}'\n        if val_acc_key in history.history:\n            plt.plot(history.history[val_acc_key], label='Validation Accuracy', linewidth=2)\n        plt.title(f'{model_name} - Segmentation Accuracy', fontsize=12, fontweight='bold')\n        plt.xlabel('Epoch')\n        plt.ylabel('Accuracy')\n        plt.legend()\n        plt.grid(True, alpha=0.3)\n    \n    # IoU plot\n    iou_key = 'segmentation_mean_iou_metric' if 'segmentation_mean_iou_metric' in history.history else 'mean_iou_metric'\n    if iou_key in history.history:\n        plt.subplot(1, 4, 3)\n        plt.plot(history.history[iou_key], label='Training IoU', linewidth=2)\n        val_iou_key = f'val_{iou_key}'\n        if val_iou_key in history.history:\n            plt.plot(history.history[val_iou_key], label='Validation IoU', linewidth=2)\n        plt.title(f'{model_name} - Mean IoU', fontsize=12, fontweight='bold')\n        plt.xlabel('Epoch')\n        plt.ylabel('IoU')\n        plt.legend()\n        plt.grid(True, alpha=0.3)\n    \n    # Disease detection accuracy\n    disease_acc_key = 'segmentation_disease_detection_accuracy' if 'segmentation_disease_detection_accuracy' in history.history else 'disease_detection_accuracy'\n    if disease_acc_key in history.history:\n        plt.subplot(1, 4, 4)\n        plt.plot(history.history[disease_acc_key], label='Training Disease Acc', linewidth=2)\n        val_disease_key = f'val_{disease_acc_key}'\n        if val_disease_key in history.history:\n            plt.plot(history.history[val_disease_key], label='Validation Disease Acc', linewidth=2)\n        plt.title(f'{model_name} - Disease Detection', fontsize=12, fontweight='bold')\n        plt.xlabel('Epoch')\n        plt.ylabel('Accuracy')\n        plt.legend()\n        plt.grid(True, alpha=0.3)\n    \n    plt.tight_layout()\n    save_path = os.path.join(outdir, f\"{model_name}_enhanced_training_history.png\")\n    plt.savefig(save_path, dpi=150, bbox_inches='tight')\n    plt.close()\n    print(f\"Saved enhanced training history: {save_path}\")\n\ndef visualize_enhanced_results(model, X_test, Y_test, model_type=\"autoencoder\", n=6, outdir=\"outputs\"):\n    \"\"\"Enhanced visualization with detailed analysis\"\"\"\n    os.makedirs(outdir, exist_ok=True)\n    indices = np.random.choice(len(X_test), n, replace=False)\n    \n    fig, axes = plt.subplots(n, 5, figsize=(25, 5*n))\n    if n == 1: \n        axes = axes.reshape(1, -1)\n    \n    detailed_results = []\n    \n    for i, idx in enumerate(indices):\n        img = X_test[idx]\n        true_mask = Y_test[idx]\n        \n        # Predict based on model type\n        if model_type == \"autoencoder\":\n            recon, seg_pred = model.predict(img[None], verbose=0)\n            recon = recon[0]\n            seg_pred = seg_pred[0]\n        else:  # few-shot\n            seg_pred = model.predict(img[None], verbose=0)[0]\n            recon = img  # Use original for visualization\n        \n        pred_mask = np.argmax(seg_pred, axis=-1)\n        \n        # Compute detailed statistics\n        per_class, healthy_pct, disease_total = compute_enhanced_severity_percentages(pred_mask, true_mask)\n        \n        # Calculate per-pixel accuracy for this sample\n        sample_accuracy = np.mean(pred_mask == true_mask)\n        \n        # Calculate IoU for this sample\n        sample_iou = calculate_sample_iou(true_mask, pred_mask)\n        \n        detailed_results.append({\n            'sample_idx': idx,\n            'accuracy': sample_accuracy,\n            'iou': sample_iou,\n            'healthy_pct': healthy_pct,\n            'disease_total': disease_total,\n            'per_class': per_class\n        })\n        \n        # Create difference mask\n        diff_mask = (pred_mask != true_mask).astype(np.uint8) * 255\n        \n        # Plot results\n        axes[i, 0].imshow(img)\n        axes[i, 0].set_title(f\"Original Image #{idx}\", fontsize=10)\n        axes[i, 0].axis('off')\n        \n        if model_type == \"autoencoder\":\n            axes[i, 1].imshow(np.clip(recon, 0, 1))\n            axes[i, 1].set_title(\"Reconstructed\", fontsize=10)\n        else:\n            axes[i, 1].imshow(img)\n            axes[i, 1].set_title(\"Input\", fontsize=10)\n        axes[i, 1].axis('off')\n        \n        axes[i, 2].imshow(mask_to_color(true_mask))\n        axes[i, 2].set_title(\"Ground Truth\", fontsize=10)\n        axes[i, 2].axis('off')\n        \n        axes[i, 3].imshow(mask_to_color(pred_mask))\n        axes[i, 3].set_title(f\"Prediction\\nAcc: {sample_accuracy:.3f}\\nIoU: {sample_iou:.3f}\", fontsize=10)\n        axes[i, 3].axis('off')\n        \n        axes[i, 4].imshow(diff_mask, cmap='Reds')\n        axes[i, 4].set_title(f\"Errors\\nDisease: {disease_total:.1f}%\", fontsize=10)\n        axes[i, 4].axis('off')\n    \n    plt.tight_layout()\n    save_path = os.path.join(outdir, f\"enhanced_{model_type}_results.png\")\n    plt.savefig(save_path, dpi=150, bbox_inches='tight')\n    plt.close()\n    print(f\"Saved enhanced {model_type} visualization: {save_path}\")\n    \n    # Save detailed results\n    results_df = pd.DataFrame(detailed_results)\n    results_csv = os.path.join(outdir, f\"enhanced_{model_type}_detailed_results.csv\")\n    results_df.to_csv(results_csv, index=False)\n    print(f\"Saved detailed results: {results_csv}\")\n    \n    return detailed_results\n\ndef compute_enhanced_severity_percentages(pred_mask, true_mask=None):\n    \"\"\"Enhanced severity calculation with comparison to ground truth\"\"\"\n    m = np.asarray(pred_mask, dtype=np.uint8)\n    leaf = (m != 0)\n    leaf_pixels = int(leaf.sum())\n    \n    if leaf_pixels == 0:\n        per_class = {CLASS_NAMES[c]: 0.0 for c in range(2, NUM_CLASSES)}\n        healthy_pct = 0.0\n        disease_total = 0.0\n        return per_class, healthy_pct, disease_total\n    \n    # Calculate percentages\n    per_class = {}\n    for c in range(2, NUM_CLASSES):\n        class_pixels = int((m == c).sum())\n        per_class[CLASS_NAMES[c]] = 100.0 * class_pixels / leaf_pixels\n    \n    healthy_pixels = int((m == 1).sum())\n    healthy_pct = 100.0 * healthy_pixels / leaf_pixels\n    disease_total = 100.0 - healthy_pct\n    \n    return per_class, healthy_pct, disease_total\n\ndef calculate_sample_iou(true_mask, pred_mask):\n    \"\"\"Calculate IoU for a single sample\"\"\"\n    ious = []\n    for class_id in range(1, NUM_CLASSES):  # Exclude background\n        true_class = (true_mask == class_id)\n        pred_class = (pred_mask == class_id)\n        \n        intersection = np.sum(true_class & pred_class)\n        union = np.sum(true_class | pred_class)\n        \n        if union > 0:\n            iou = intersection / union\n        else:\n            iou = 1.0 if intersection == 0 else 0.0\n        \n        ious.append(iou)\n    \n    return np.mean(ious)\n\n# ============ Enhanced Data Analysis ============\ndef analyze_dataset_distribution(Y):\n    \"\"\"Analyze class distribution in dataset\"\"\"\n    print(\"\\n=== Dataset Analysis ===\")\n    \n    total_pixels = Y.size\n    class_counts = {}\n    \n    for class_id in range(NUM_CLASSES):\n        count = np.sum(Y == class_id)\n        percentage = 100.0 * count / total_pixels\n        class_counts[CLASS_NAMES[class_id]] = {\n            'pixels': count,\n            'percentage': percentage\n        }\n        print(f\"{CLASS_NAMES[class_id]:20}: {count:12,} pixels ({percentage:6.2f}%)\")\n    \n    # Analyze sample distribution\n    sample_distribution = {}\n    for class_id in range(NUM_CLASSES):\n        samples_with_class = 0\n        for mask in Y:\n            if np.sum(mask == class_id) > 0:\n                samples_with_class += 1\n        sample_distribution[CLASS_NAMES[class_id]] = samples_with_class\n        print(f\"Samples with {CLASS_NAMES[class_id]:15}: {samples_with_class:4d}\")\n    \n    return class_counts, sample_distribution\n\ndef compute_enhanced_class_weights(Y, method='balanced'):\n    \"\"\"Enhanced class weight computation\"\"\"\n    if method == 'balanced':\n        # Standard sklearn balanced weights\n        classes = np.arange(NUM_CLASSES)\n        weights = compute_class_weight('balanced', classes=classes, y=Y.flatten())\n        \n        # Adjust background weight (usually too high)\n        weights[0] = min(weights[0], 0.5)\n        \n        # Boost minority disease classes\n        for i in range(2, NUM_CLASSES):\n            if weights[i] > 2.0:\n                weights[i] = min(weights[i], 3.0)  # Cap very high weights\n    \n    elif method == 'focal':\n        # Focal loss inspired weights\n        counts = np.bincount(Y.flatten(), minlength=NUM_CLASSES).astype(np.float64)\n        total = counts.sum()\n        frequencies = counts / total\n        \n        # Inverse frequency with smoothing\n        weights = 1.0 / (frequencies + 0.01)\n        weights = weights / weights.sum() * NUM_CLASSES  # Normalize\n        \n        # Special handling for background\n        weights[0] *= 0.3\n    \n    return tf.constant(weights, dtype=tf.float32)\n\n# ============ Model Ensemble ============\nclass ModelEnsemble:\n    \"\"\"Ensemble of multiple models for better performance\"\"\"\n    def __init__(self, models, weights=None):\n        self.models = models\n        self.weights = weights if weights else [1.0/len(models)] * len(models)\n    \n    def predict(self, x):\n        \"\"\"Ensemble prediction with weighted averaging\"\"\"\n        predictions = []\n        \n        for model in self.models:\n            if hasattr(model, 'predict'):\n                pred = model.predict(x, verbose=0)\n                if isinstance(pred, list):  # Autoencoder returns [recon, seg]\n                    pred = pred[1]  # Use segmentation output\n                predictions.append(pred)\n        \n        # Weighted average\n        ensemble_pred = np.zeros_like(predictions[0])\n        for pred, weight in zip(predictions, self.weights):\n            ensemble_pred += weight * pred\n        \n        return ensemble_pred\n\n# ============ Enhanced Testing ============\ndef test_single_image_enhanced(models, image_path, outdir=\"outputs\", alpha=0.45):\n    \"\"\"Enhanced single image testing with model ensemble\"\"\"\n    os.makedirs(outdir, exist_ok=True)\n    H, W = IMG_SIZE, IMG_SIZE\n    \n    try:\n        img_01 = preprocess_image_for_model(image_path, (H, W))\n    except Exception as e:\n        print(f\"Error loading image {image_path}: {e}\")\n        return\n    \n    base = os.path.splitext(os.path.basename(image_path))[0]\n    \n    # Test each model individually\n    model_results = {}\n    \n    for model_name, model in models.items():\n        try:\n            if model_name == \"autoencoder\":\n                recon, seg_pred = model.predict(img_01[None], verbose=0)\n                mask = np.argmax(seg_pred[0], axis=-1).astype(np.uint8)\n                recon_img = recon[0]\n            else:  # few-shot\n                seg_pred = model.predict(img_01[None], verbose=0)[0]\n                mask = np.argmax(seg_pred, axis=-1).astype(np.uint8)\n                recon_img = img_01  # No reconstruction for few-shot\n            \n            per_class, healthy_pct, disease_total = compute_enhanced_severity_percentages(mask)\n            \n            model_results[model_name] = {\n                'mask': mask,\n                'reconstruction': recon_img,\n                'severity': {\n                    'healthy_pct': healthy_pct,\n                    'disease_total': disease_total,\n                    'per_class': per_class\n                }\n            }\n            \n            # Save individual results\n            mask_color = mask_to_color(mask)\n            overlay = overlay_mask_on_image(img_01, mask_color, alpha=alpha)\n            \n            cv2.imwrite(\n                os.path.join(outdir, f\"{base}_{model_name}_pred_mask.png\"),\n                cv2.cvtColor(mask_color, cv2.COLOR_RGB2BGR)\n            )\n            cv2.imwrite(\n                os.path.join(outdir, f\"{base}_{model_name}_overlay.png\"),\n                cv2.cvtColor(overlay, cv2.COLOR_RGB2BGR)\n            )\n            \n            with open(os.path.join(outdir, f\"{base}_{model_name}_severity.json\"), \"w\") as f:\n                json.dump(model_results[model_name]['severity'], f, indent=2)\n        \n        except Exception as e:\n            print(f\"Error testing {model_name}: {e}\")\n            continue\n    \n    # Create ensemble prediction if multiple models\n    if len(model_results) > 1:\n        model_list = [models[name] for name in model_results.keys()]\n        ensemble = ModelEnsemble(model_list)\n        \n        try:\n            ensemble_pred = ensemble.predict(img_01[None])\n            ensemble_mask = np.argmax(ensemble_pred[0], axis=-1).astype(np.uint8)\n            \n            per_class, healthy_pct, disease_total = compute_enhanced_severity_percentages(ensemble_mask)\n            \n            model_results['ensemble'] = {\n                'mask': ensemble_mask,\n                'reconstruction': img_01,\n                'severity': {\n                    'healthy_pct': healthy_pct,\n                    'disease_total': disease_total,\n                    'per_class': per_class\n                }\n            }\n        except Exception as e:\n            print(f\"Error creating ensemble: {e}\")\n    \n    # Enhanced visualization\n    n_models = len(model_results)\n    fig, axes = plt.subplots(2, max(3, n_models), figsize=(5*max(3, n_models), 10))\n    \n    # Original image\n    axes[0, 0].imshow((img_01*255).astype(np.uint8))\n    axes[0, 0].set_title(\"Original Image\", fontsize=12, fontweight='bold')\n    axes[0, 0].axis('off')\n    \n    # Model predictions\n    col_idx = 1\n    for model_name, results in model_results.items():\n        if col_idx < axes.shape[1]:\n            mask_color = mask_to_color(results['mask'])\n            overlay = overlay_mask_on_image(img_01, mask_color, alpha=alpha)\n            \n            axes[0, col_idx].imshow(mask_color)\n            axes[0, col_idx].set_title(f\"{model_name.title()} Prediction\", fontsize=12, fontweight='bold')\n            axes[0, col_idx].axis('off')\n            \n            axes[1, col_idx].imshow(overlay)\n            axes[1, col_idx].set_title(f\"Disease: {results['severity']['disease_total']:.1f}%\", fontsize=12)\n            axes[1, col_idx].axis('off')\n            \n            col_idx += 1\n    \n    # Hide unused subplots\n    for i in range(col_idx, axes.shape[1]):\n        axes[0, i].axis('off')\n        axes[1, i].axis('off')\n    \n    # Show reconstruction if available\n    if 'autoencoder' in model_results:\n        axes[1, 0].imshow(np.clip(model_results['autoencoder']['reconstruction'], 0, 1))\n        axes[1, 0].set_title(\"Autoencoder Reconstruction\", fontsize=12)\n        axes[1, 0].axis('off')\n    else:\n        axes[1, 0].axis('off')\n    \n    plt.tight_layout()\n    save_path = os.path.join(outdir, f\"{base}_enhanced_comparison.png\")\n    plt.savefig(save_path, dpi=150, bbox_inches='tight')\n    plt.close()\n    \n    # Print detailed results\n    print(f\"\\n==== Enhanced Analysis for {base} ====\")\n    for model_name, results in model_results.items():\n        severity = results['severity']\n        print(f\"\\n{model_name.upper()} Results:\")\n        print(f\"  Healthy: {severity['healthy_pct']:5.1f}%\")\n        print(f\"  Disease Total: {severity['disease_total']:5.1f}%\")\n        for disease, pct in severity['per_class'].items():\n            if pct > 0.1:  # Only show diseases with >0.1% presence\n                print(f\"    {disease}: {pct:5.1f}%\")\n    \n    print(f\"Saved enhanced comparison: {save_path}\")\n    return model_results\n\ndef preprocess_image_for_model(image_path, target_hw):\n    \"\"\"Enhanced image preprocessing\"\"\"\n    bgr = cv2.imread(image_path, cv2.IMREAD_COLOR)\n    if bgr is None:\n        raise FileNotFoundError(f\"Could not read image: {image_path}\")\n    \n    rgb = cv2.cvtColor(bgr, cv2.COLOR_BGR2RGB)\n    h, w = target_hw\n    \n    # Enhanced preprocessing with histogram equalization\n    rgb_rs = cv2.resize(rgb, (w, h), interpolation=cv2.INTER_AREA)\n    \n    # Apply CLAHE (Contrast Limited Adaptive Histogram Equalization) for better contrast\n    lab = cv2.cvtColor(rgb_rs, cv2.COLOR_RGB2LAB)\n    clahe = cv2.createCLAHE(clipLimit=2.0, tileGridSize=(8, 8))\n    lab[:, :, 0] = clahe.apply(lab[:, :, 0])\n    rgb_rs = cv2.cvtColor(lab, cv2.COLOR_LAB2RGB)\n    \n    img_f32_01 = rgb_rs.astype(np.float32) / 255.0\n    return img_f32_01\n\ndef overlay_mask_on_image(rgb_01, mask_color, alpha=0.45):\n    \"\"\"Enhanced overlay with better blending\"\"\"\n    rgb_u8 = (np.clip(rgb_01, 0, 1) * 255).astype(np.uint8)\n    \n    # Create a more sophisticated overlay\n    # Only overlay non-background pixels\n    mask_binary = np.any(mask_color > 0, axis=-1)\n    overlay = rgb_u8.copy()\n    overlay[mask_binary] = cv2.addWeighted(\n        rgb_u8[mask_binary], 1.0 - alpha, \n        mask_color[mask_binary], alpha, 0\n    )\n    \n    return overlay\n\n# ============ Enhanced Model Evaluation ============\ndef comprehensive_model_evaluation(model, X_test, Y_test, model_name, model_type=\"autoencoder\"):\n    \"\"\"Comprehensive model evaluation with multiple metrics\"\"\"\n    print(f\"\\n=== Comprehensive Evaluation: {model_name} ===\")\n    \n    # Prepare data\n    Y_test_oh = tf.one_hot(Y_test, NUM_CLASSES).numpy()\n    \n    # Batch prediction to handle memory\n    all_predictions = []\n    batch_size = 4\n    \n    for i in range(0, len(X_test), batch_size):\n        batch_x = X_test[i:i+batch_size]\n        \n        if model_type == \"autoencoder\":\n            _, batch_pred = model.predict(batch_x, verbose=0)\n        else:\n            batch_pred = model.predict(batch_x, verbose=0)\n        \n        all_predictions.append(batch_pred)\n    \n    y_pred = np.concatenate(all_predictions, axis=0)\n    y_pred_classes = np.argmax(y_pred, axis=-1)\n    \n    # Calculate comprehensive metrics\n    metrics = {}\n    \n    # Overall accuracy\n    metrics['overall_accuracy'] = np.mean(y_pred_classes == Y_test)\n    \n    # Per-class accuracy\n    class_accuracies = {}\n    for class_id in range(NUM_CLASSES):\n        class_mask = (Y_test == class_id)\n        if np.sum(class_mask) > 0:\n            class_acc = np.mean(y_pred_classes[class_mask] == Y_test[class_mask])\n            class_accuracies[CLASS_NAMES[class_id]] = class_acc\n        else:\n            class_accuracies[CLASS_NAMES[class_id]] = 0.0\n    \n    metrics['class_accuracies'] = class_accuracies\n    \n    # Disease detection metrics (binary: healthy vs disease)\n    y_true_binary = np.where(Y_test == 0, 0, np.where(Y_test == 1, 1, 2))  # 0=bg, 1=healthy, 2=disease\n    y_pred_binary = np.where(y_pred_classes == 0, 0, np.where(y_pred_classes == 1, 1, 2))\n    \n    # Only calculate on leaf pixels\n    leaf_mask = y_true_binary > 0\n    if np.sum(leaf_mask) > 0:\n        leaf_accuracy = np.mean(y_true_binary[leaf_mask] == y_pred_binary[leaf_mask])\n        \n        # Disease detection accuracy (healthy vs any disease)\n        disease_true = (y_true_binary == 2)[leaf_mask]\n        disease_pred = (y_pred_binary == 2)[leaf_mask]\n        \n        if np.sum(disease_true) > 0:  # If there are disease samples\n            from sklearn.metrics import precision_score, recall_score, f1_score\n            disease_precision = precision_score(disease_true, disease_pred, zero_division=0)\n            disease_recall = recall_score(disease_true, disease_pred, zero_division=0)\n            disease_f1 = f1_score(disease_true, disease_pred, zero_division=0)\n        else:\n            disease_precision = disease_recall = disease_f1 = 0.0\n        \n        metrics['leaf_accuracy'] = leaf_accuracy\n        metrics['disease_precision'] = disease_precision\n        metrics['disease_recall'] = disease_recall\n        metrics['disease_f1'] = disease_f1\n    \n    # Mean IoU calculation\n    sample_ious = []\n    for i in range(len(Y_test)):\n        sample_iou = calculate_sample_iou(Y_test[i], y_pred_classes[i])\n        sample_ious.append(sample_iou)\n    \n    metrics['mean_iou'] = np.mean(sample_ious)\n    metrics['std_iou'] = np.std(sample_ious)\n    \n    # Print results\n    print(f\"Overall Accuracy: {metrics['overall_accuracy']:.4f}\")\n    print(f\"Leaf Accuracy: {metrics.get('leaf_accuracy', 0):.4f}\")\n    print(f\"Mean IoU: {metrics['mean_iou']:.4f} ± {metrics['std_iou']:.4f}\")\n    print(f\"Disease Detection - Precision: {metrics.get('disease_precision', 0):.4f}, \"\n          f\"Recall: {metrics.get('disease_recall', 0):.4f}, F1: {metrics.get('disease_f1', 0):.4f}\")\n    \n    print(\"\\nPer-class Accuracies:\")\n    for class_name, acc in class_accuracies.items():\n        print(f\"  {class_name:20}: {acc:.4f}\")\n    \n    return metrics\n\n# ============ Main Enhanced Training Pipeline ============\ndef main():\n    \"\"\"Enhanced main training pipeline\"\"\"\n    t0 = time.time()\n    print(\"=\" * 80)\n    print(\"🍃 Enhanced Apple Leaf Disease Segmentation Pipeline\")\n    print(\"=\" * 80)\n    \n    # Load and analyze dataset\n    print(\"Loading enhanced dataset...\")\n    ds = EnhancedAppleLeafDataset(BASE_DIR, IMG_SIZE)\n    X, Y = ds.load_with_quality_check()\n    \n    # Analyze dataset\n    class_counts, sample_distribution = analyze_dataset_distribution(Y)\n    \n    # Enhanced data splitting with stratification\n    print(\"Creating stratified data splits...\")\n    # Create stratification labels based on dominant disease class per sample\n    stratify_labels = []\n    for mask in Y:\n        # Get the most common non-background class\n        unique, counts = np.unique(mask[mask > 0], return_counts=True)\n        if len(unique) > 0:\n            dominant_class = unique[np.argmax(counts)]\n            stratify_labels.append(dominant_class)\n        else:\n            stratify_labels.append(0)  # Background only\n    \n    stratify_labels = np.array(stratify_labels)\n    \n    # Split with stratification\n    Xtr, Xte, Ytr, Yte, str_tr, str_te = train_test_split(\n        X, Y, stratify_labels, test_size=0.15, random_state=SEED, \n        shuffle=True, stratify=stratify_labels\n    )\n    Xtr, Xva, Ytr, Yva, str_tr, str_va = train_test_split(\n        Xtr, Ytr, str_tr, test_size=0.1765, random_state=SEED, \n        shuffle=True, stratify=str_tr\n    )\n    \n    print(f\"Enhanced splits -> Train: {Xtr.shape}, Val: {Xva.shape}, Test: {Xte.shape}\")\n    \n    # Enhanced class weights\n    if AUTO_CLASS_WEIGHTS:\n        global CLASS_WEIGHTS\n        CLASS_WEIGHTS = compute_enhanced_class_weights(Ytr, method='balanced')\n        print(\"Enhanced class weights:\", CLASS_WEIGHTS.numpy())\n\n    input_shape = (IMG_SIZE, IMG_SIZE, 3)\n    os.makedirs(OUTDIR, exist_ok=True)\n    \n    trained_models = {}\n    all_results = []\n    \n    # ============ Train Enhanced Few-Shot Learning Model ============\n    print(\"\\n\" + \"=\"*60)\n    print(\"Training Enhanced Few-Shot Learning Model\")\n    print(\"=\"*60)\n    \n    clear_tf_memory()\n    \n    fsl_ckpt = os.path.join(OUTDIR, \"enhanced_few_shot_best.h5\")\n    if SKIP_TRAIN_IF_CKPT and os.path.exists(fsl_ckpt):\n        print(\"Enhanced Few-Shot model checkpoint found, loading...\")\n        try:\n            fsl_model = keras.models.load_model(fsl_ckpt, compile=False)\n            fsl_model.compile(\n                optimizer=keras.optimizers.Adam(1e-4),\n                loss=combined_segmentation_loss,\n                metrics=[segmentation_accuracy, mean_iou_metric, disease_detection_accuracy]\n            )\n        except Exception as e:\n            print(f\"Failed to load FSL checkpoint: {e}; training from scratch.\")\n            fsl_model = train_enhanced_few_shot_model(Xtr, Ytr, Xva, Yva, input_shape)\n    else:\n        fsl_model = train_enhanced_few_shot_model(Xtr, Ytr, Xva, Yva, input_shape)\n    \n    trained_models['few_shot'] = fsl_model\n    \n    # Comprehensive evaluation\n    fsl_metrics = comprehensive_model_evaluation(fsl_model, Xte, Yte, \"Few-Shot Learning\", \"few_shot\")\n    fsl_results = {\n        \"Model\": \"EnhancedFewShotLearning\",\n        \"Overall_Acc\": fsl_metrics['overall_accuracy'],\n        \"Leaf_Acc\": fsl_metrics.get('leaf_accuracy', 0),\n        \"Mean_IoU\": fsl_metrics['mean_iou'],\n        \"Disease_F1\": fsl_metrics.get('disease_f1', 0),\n        \"Disease_Precision\": fsl_metrics.get('disease_precision', 0),\n        \"Disease_Recall\": fsl_metrics.get('disease_recall', 0)\n    }\n    all_results.append(fsl_results)\n    \n    # Visualize results\n    visualize_enhanced_results(fsl_model, Xva, Yva, \"few_shot\", n=4, outdir=OUTDIR)\n    \n    # ============ Train Enhanced Convolutional Autoencoder ============\n    print(\"\\n\" + \"=\"*60)\n    print(\"Training Enhanced Convolutional Autoencoder\")\n    print(\"=\"*60)\n    \n    clear_tf_memory()\n    \n    cae_ckpt = os.path.join(OUTDIR, \"enhanced_autoencoder_best.h5\")\n    if SKIP_TRAIN_IF_CKPT and os.path.exists(cae_ckpt):\n        print(\"Enhanced Autoencoder checkpoint found, loading...\")\n        try:\n            cae_model = keras.models.load_model(cae_ckpt, compile=False)\n            cae_model.compile(\n                optimizer=keras.optimizers.Adam(1e-3),\n                loss={\n                    'reconstruction': 'mse',\n                    'segmentation': combined_segmentation_loss\n                },\n                loss_weights={\n                    'reconstruction': RECONSTRUCTION_WEIGHT,\n                    'segmentation': SEGMENTATION_WEIGHT\n                },\n                metrics={\n                    'reconstruction': ['mae'],\n                    'segmentation': [segmentation_accuracy, mean_iou_metric, disease_detection_accuracy]\n                }\n            )\n        except Exception as e:\n            print(f\"Failed to load CAE checkpoint: {e}; training from scratch.\")\n            cae_model = train_enhanced_autoencoder_model(Xtr, Ytr, Xva, Yva, input_shape)\n    else:\n        cae_model = train_enhanced_autoencoder_model(Xtr, Ytr, Xva, Yva, input_shape)\n    \n    trained_models['autoencoder'] = cae_model\n    \n    # Comprehensive evaluation\n    cae_metrics = comprehensive_model_evaluation(cae_model, Xte, Yte, \"Convolutional Autoencoder\", \"autoencoder\")\n    cae_results = {\n        \"Model\": \"EnhancedConvAutoencoder\",\n        \"Overall_Acc\": cae_metrics['overall_accuracy'],\n        \"Leaf_Acc\": cae_metrics.get('leaf_accuracy', 0),\n        \"Mean_IoU\": cae_metrics['mean_iou'],\n        \"Disease_F1\": cae_metrics.get('disease_f1', 0),\n        \"Disease_Precision\": cae_metrics.get('disease_precision', 0),\n        \"Disease_Recall\": cae_metrics.get('disease_recall', 0)\n    }\n    all_results.append(cae_results)\n    \n    # Visualize results\n    visualize_enhanced_results(cae_model, Xva, Yva, \"autoencoder\", n=4, outdir=OUTDIR)\n    \n    # ============ Model Comparison and Analysis ============\n    print(\"\\n\" + \"=\"*60)\n    print(\"Model Comparison and Analysis\")\n    print(\"=\"*60)\n    \n    # Create comprehensive comparison\n    comparison_df = pd.DataFrame(all_results)\n    comparison_df = comparison_df.sort_values(\"Mean_IoU\", ascending=False)\n    \n    # Save detailed comparison\n    comparison_csv = os.path.join(OUTDIR, \"enhanced_model_comparison.csv\")\n    comparison_df.to_csv(comparison_csv, index=False)\n    \n    print(\"\\n📊 Enhanced Model Comparison Results:\")\n    print(\"=\" * 100)\n    print(comparison_df.to_string(index=False, float_format='%.4f'))\n    print(\"=\" * 100)\n    \n    # Create comparison visualization\n    create_model_comparison_plot(comparison_df, OUTDIR)\n    \n    # ============ Single Image Inference with All Models ============\n    if DO_INFERENCE_AFTER_TRAIN and TEST_IMAGE_PATH and os.path.exists(TEST_IMAGE_PATH):\n        print(f\"\\n🔍 Running enhanced inference on: {TEST_IMAGE_PATH}\")\n        test_results = test_single_image_enhanced(\n            trained_models, TEST_IMAGE_PATH, \n            outdir=OUTDIR, alpha=OVERLAY_ALPHA\n        )\n    elif DO_INFERENCE_AFTER_TRAIN and TEST_IMAGE_PATH:\n        print(f\"⚠️  TEST_IMAGE_PATH does not exist: {TEST_IMAGE_PATH}\")\n    \n    # ============ Generate Final Report ============\n    generate_final_report(comparison_df, class_counts, sample_distribution, OUTDIR)\n    \n    print(f\"\\n✅ Enhanced pipeline completed in {time.time()-t0:.1f}s\")\n    print(f\"📁 All results saved in: {OUTDIR}\")\n    \n    return trained_models, all_results\n\ndef create_model_comparison_plot(comparison_df, outdir):\n    \"\"\"Create comprehensive model comparison visualization\"\"\"\n    fig, axes = plt.subplots(2, 3, figsize=(18, 12))\n    \n    models = comparison_df['Model'].values\n    metrics = ['Overall_Acc', 'Leaf_Acc', 'Mean_IoU', 'Disease_F1', 'Disease_Precision', 'Disease_Recall']\n    titles = ['Overall Accuracy', 'Leaf Accuracy', 'Mean IoU', 'Disease F1 Score', 'Disease Precision', 'Disease Recall']\n    \n    for idx, (metric, title) in enumerate(zip(metrics, titles)):\n        row, col = idx // 3, idx % 3\n        values = comparison_df[metric].values\n        \n        bars = axes[row, col].bar(models, values, \n                                 color=['#FF6B6B', '#4ECDC4', '#45B7D1'][:len(models)],\n                                 alpha=0.8, edgecolor='black', linewidth=1)\n        \n        axes[row, col].set_title(title, fontsize=14, fontweight='bold')\n        axes[row, col].set_ylim(0, 1.1)\n        axes[row, col].grid(True, alpha=0.3)\n        \n        # Add value labels on bars\n        for bar, value in zip(bars, values):\n            height = bar.get_height()\n            axes[row, col].text(bar.get_x() + bar.get_width()/2., height + 0.01,\n                               f'{value:.3f}', ha='center', va='bottom', fontweight='bold')\n        \n        # Rotate x-axis labels if needed\n        plt.setp(axes[row, col].get_xticklabels(), rotation=45, ha='right')\n    \n    plt.tight_layout()\n    save_path = os.path.join(outdir, \"enhanced_model_comparison.png\")\n    plt.savefig(save_path, dpi=150, bbox_inches='tight')\n    plt.close()\n    print(f\"📊 Saved model comparison plot: {save_path}\")\n\ndef generate_final_report(comparison_df, class_counts, sample_distribution, outdir):\n    \"\"\"Generate comprehensive final report\"\"\"\n    report_path = os.path.join(outdir, \"enhanced_analysis_report.md\")\n    \n    with open(report_path, 'w') as f:\n        f.write(\"# Enhanced Apple Leaf Disease Segmentation Report\\n\\n\")\n        f.write(f\"Generated on: {time.strftime('%Y-%m-%d %H:%M:%S')}\\n\\n\")\n        \n        f.write(\"## Dataset Analysis\\n\\n\")\n        f.write(\"### Class Distribution (Pixels)\\n\")\n        for class_name, stats in class_counts.items():\n            f.write(f\"- **{class_name}**: {stats['pixels']:,} pixels ({stats['percentage']:.2f}%)\\n\")\n        \n        f.write(\"\\n### Sample Distribution\\n\")\n        for class_name, count in sample_distribution.items():\n            f.write(f\"- **{class_name}**: {count} samples\\n\")\n        \n        f.write(\"\\n## Model Performance Comparison\\n\\n\")\n        f.write(\"| Model | Overall Acc | Leaf Acc | Mean IoU | Disease F1 | Disease Precision | Disease Recall |\\n\")\n        f.write(\"|-------|-------------|----------|----------|------------|-------------------|----------------|\\n\")\n        \n        for _, row in comparison_df.iterrows():\n            f.write(f\"| {row['Model']} | {row['Overall_Acc']:.4f} | {row['Leaf_Acc']:.4f} | \"\n                   f\"{row['Mean_IoU']:.4f} | {row['Disease_F1']:.4f} | \"\n                   f\"{row['Disease_Precision']:.4f} | {row['Disease_Recall']:.4f} |\\n\")\n        \n        f.write(\"\\n## Key Improvements\\n\\n\")\n        f.write(\"1. **Enhanced Architecture**: Improved feature extraction with attention mechanisms\\n\")\n        f.write(\"2. **Better Loss Functions**: Combined focal loss and dice loss for class imbalance\\n\")\n        f.write(\"3. **Proper Metrics**: Segmentation-specific accuracy calculations\\n\")\n        f.write(\"4. **Data Augmentation**: Advanced augmentation with mixup\\n\")\n        f.write(\"5. **Quality Control**: Enhanced data loading with quality checks\\n\")\n        f.write(\"6. **Comprehensive Evaluation**: Multiple metrics for thorough analysis\\n\")\n        \n        f.write(\"\\n## Recommendations\\n\\n\")\n        best_model = comparison_df.iloc[0]['Model']\n        best_iou = comparison_df.iloc[0]['Mean_IoU']\n        f.write(f\"- **Best performing model**: {best_model} (IoU: {best_iou:.4f})\\n\")\n        f.write(\"- Consider ensemble methods for production deployment\\n\")\n        f.write(\"- Further data collection for underrepresented disease classes\\n\")\n        f.write(\"- Model interpretability analysis for clinical validation\\n\")\n    \n    print(f\"📋 Generated comprehensive report: {report_path}\")\n\n# ============ Data Quality Enhancements ============\ndef enhance_dataset_quality(X, Y):\n    \"\"\"Additional dataset quality improvements\"\"\"\n    print(\"Enhancing dataset quality...\")\n    \n    enhanced_X, enhanced_Y = [], []\n    quality_stats = {'good': 0, 'enhanced': 0, 'skipped': 0}\n    \n    for img, mask in zip(X, Y):\n        # Check image quality\n        img_gray = cv2.cvtColor((img * 255).astype(np.uint8), cv2.COLOR_RGB2GRAY)\n        \n        # Skip very blurry images (low variance in Laplacian)\n        laplacian_var = cv2.Laplacian(img_gray, cv2.CV_64F).var()\n        if laplacian_var < 50:  # Threshold for blur detection\n            quality_stats['skipped'] += 1\n            continue\n        \n        # Enhance low-contrast images\n        if laplacian_var < 200:\n            # Apply histogram equalization\n            img_enhanced = img.copy()\n            for channel in range(3):\n                img_channel = (img[:, :, channel] * 255).astype(np.uint8)\n                img_channel = cv2.equalizeHist(img_channel)\n                img_enhanced[:, :, channel] = img_channel / 255.0\n            \n            enhanced_X.append(img_enhanced)\n            quality_stats['enhanced'] += 1\n        else:\n            enhanced_X.append(img)\n            quality_stats['good'] += 1\n        \n        enhanced_Y.append(mask)\n    \n    print(f\"Quality enhancement: {quality_stats}\")\n    return np.array(enhanced_X), np.array(enhanced_Y)\n\nif __name__ == \"__main__\":\n    main()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-31T17:40:08.857848Z","iopub.execute_input":"2025-08-31T17:40:08.858721Z","iopub.status.idle":"2025-08-31T17:43:17.699807Z","shell.execute_reply.started":"2025-08-31T17:40:08.858694Z","shell.execute_reply":"2025-08-31T17:43:17.698822Z"}},"outputs":[{"name":"stdout","text":"GPU mem-growth not set: Physical devices cannot be modified after being initialized\n================================================================================\n🍃 Enhanced Apple Leaf Disease Segmentation Pipeline\n================================================================================\nLoading enhanced dataset...\nAlternaria leaf spot | imgs: 278 | masks: 278 | paired: 278\nBrown spot           | imgs: 215 | masks: 215 | paired: 215\nGray spot            | imgs: 395 | masks: 395 | paired: 395\nHealthy leaf         | imgs: 409 | masks: 409 | paired: 409\nRust                 | imgs: 344 | masks: 344 | paired: 344\nTotal class distribution: {'Alternaria leaf spot': 278, 'Brown spot': 215, 'Gray spot': 395, 'Healthy leaf': 409, 'Rust': 344}\nPaired samples: 1641\n","output_type":"stream"},{"name":"stderr","text":"Loading data: 100%|██████████| 1641/1641 [00:29<00:00, 54.95it/s]\n","output_type":"stream"},{"name":"stdout","text":"Loaded 1641 samples, skipped 0 due to quality issues\n\n=== Dataset Analysis ===\nBackground          :   71,568,306 pixels ( 66.55%)\nHealthy             :   34,557,476 pixels ( 32.13%)\nBrown spot          :      462,758 pixels (  0.43%)\nAlternaria leaf spot:       74,955 pixels (  0.07%)\nGray spot           :      142,992 pixels (  0.13%)\nRust                :      738,089 pixels (  0.69%)\nSamples with Background     : 1641\nSamples with Healthy        : 1641\nSamples with Brown spot     :  183\nSamples with Alternaria leaf spot:  277\nSamples with Gray spot      :  387\nSamples with Rust           :  341\nCreating stratified data splits...\nEnhanced splits -> Train: (1147, 256, 256, 3), Val: (247, 256, 256, 3), Test: (247, 256, 256, 3)\nEnhanced class weights: [0.24978787 0.520244   3.         3.         3.         3.        ]\n\n============================================================\nTraining Enhanced Few-Shot Learning Model\n============================================================\n\n🚀 Training Enhanced Few-Shot Learning Model...\nPhase 1: Episodic pre-training...\nEpisode 0/100 - Loss: 0.7190, Acc: 0.0898, IoU: 0.0452\nEpisode 20/100 - Loss: 0.3454, Acc: 0.6471, IoU: 0.1113\nEpisode 40/100 - Loss: 0.2964, Acc: 0.7476, IoU: 0.1561\nEpisode 60/100 - Loss: 0.2744, Acc: 0.7978, IoU: 0.1876\nEpisode 80/100 - Loss: 0.2615, Acc: 0.8261, IoU: 0.2161\nPhase 2: Fine-tuning with full dataset...\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_36/2742943901.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m   1679\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1680\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0m__name__\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"__main__\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1681\u001b[0;31m     \u001b[0mmain\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/tmp/ipykernel_36/2742943901.py\u001b[0m in \u001b[0;36mmain\u001b[0;34m()\u001b[0m\n\u001b[1;32m   1451\u001b[0m             \u001b[0mfsl_model\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtrain_enhanced_few_shot_model\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mXtr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mYtr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mXva\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mYva\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput_shape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1452\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1453\u001b[0;31m         \u001b[0mfsl_model\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtrain_enhanced_few_shot_model\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mXtr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mYtr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mXva\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mYva\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput_shape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1454\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1455\u001b[0m     \u001b[0mtrained_models\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'few_shot'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfsl_model\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/tmp/ipykernel_36/2742943901.py\u001b[0m in \u001b[0;36mtrain_enhanced_few_shot_model\u001b[0;34m(X_train, Y_train, X_val, Y_val, input_shape)\u001b[0m\n\u001b[1;32m    710\u001b[0m     \u001b[0mval_gen\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcreate_augmented_generator\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_val\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mY_val\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mBATCH_SIZE\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0muse_mixup\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    711\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 712\u001b[0;31m     history = base_model.fit(\n\u001b[0m\u001b[1;32m    713\u001b[0m         \u001b[0mtrain_gen\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    714\u001b[0m         \u001b[0msteps_per_epoch\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msteps_per_epoch\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/keras/src/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    120\u001b[0m             \u001b[0;31m# To get the full stack trace, call:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    121\u001b[0m             \u001b[0;31m# `keras.config.disable_traceback_filtering()`\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 122\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwith_traceback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiltered_tb\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    123\u001b[0m         \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    124\u001b[0m             \u001b[0;32mdel\u001b[0m \u001b[0mfiltered_tb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/tmp/ipykernel_36/2742943901.py\u001b[0m in \u001b[0;36mcreate_augmented_generator\u001b[0;34m(X, Y, batch_size, use_mixup)\u001b[0m\n\u001b[1;32m    606\u001b[0m                         \u001b[0mimg_tensor\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconvert_to_tensor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    607\u001b[0m                         \u001b[0mmask_tensor\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconvert_to_tensor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m...\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# Add channel dim\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 608\u001b[0;31m                         \u001b[0maug_img\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maug_mask\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maugment_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg_tensor\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmask_tensor\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    609\u001b[0m                         \u001b[0maug_img\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maug_img\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnumpy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    610\u001b[0m                         \u001b[0maug_mask\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maug_mask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnumpy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msqueeze\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# Remove channel dim\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/tmp/__autograph_generated_fileluekdh3h.py\u001b[0m in \u001b[0;36mtf__augment_data\u001b[0;34m(image, mask)\u001b[0m\n\u001b[1;32m     27\u001b[0m                 \u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mif_stmt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconverted_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mld\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrandom\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0muniform\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfscope\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0.5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mif_body\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0melse_body\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mget_state\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mset_state\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;34m'image'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'mask'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     28\u001b[0m                 \u001b[0mangle\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconverted_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mld\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrandom\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0muniform\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m-\u001b[0m\u001b[0;36m15\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m15\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfscope\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mld\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpi\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0;36m180\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 29\u001b[0;31m                 \u001b[0mimage\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconverted_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mld\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkeras\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpreprocessing\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimage\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrotate\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mld\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimage\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mld\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mangle\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfill_mode\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'reflect'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfscope\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     30\u001b[0m                 \u001b[0mmask\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconverted_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mld\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkeras\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpreprocessing\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimage\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrotate\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mld\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mld\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mangle\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfill_mode\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'constant'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfill_value\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfscope\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     31\u001b[0m                 \u001b[0mimage\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconverted_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mld\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimage\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrandom_brightness\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mag__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mld\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimage\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0.1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfscope\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: in user code:\n\n    File \"/tmp/ipykernel_36/2742943901.py\", line 139, in augment_data  *\n        image = tf.keras.preprocessing.image.rotate(image, angle, fill_mode='reflect')\n\n    AttributeError: module 'keras._tf_keras.keras.preprocessing.image' has no attribute 'rotate'\n"],"ename":"AttributeError","evalue":"in user code:\n\n    File \"/tmp/ipykernel_36/2742943901.py\", line 139, in augment_data  *\n        image = tf.keras.preprocessing.image.rotate(image, angle, fill_mode='reflect')\n\n    AttributeError: module 'keras._tf_keras.keras.preprocessing.image' has no attribute 'rotate'\n","output_type":"error"}],"execution_count":9},{"cell_type":"code","source":"# =========================================================\n# Apple Leaf Segmentation — Few-Shot Learning + Convolutional Autoencoder\n# Complete and working version with all enhancements\n# =========================================================\nimport os\nos.environ[\"TF_CPP_MIN_LOG_LEVEL\"] = \"2\"\nos.environ[\"TF_ENABLE_ONEDNN_OPTS\"] = \"0\"\nos.environ[\"TF_DISABLE_PROFILER\"] = \"1\"\n\nimport cv2\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom tqdm import tqdm\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.utils.class_weight import compute_class_weight\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nimport pandas as pd\nimport time\nimport random\nimport json\nfrom collections import Counter\n\n# ============ Config ============\nBASE_DIR = \"/kaggle/input/apple-dataset/ATLDSD\"  # Change if needed\nIMG_SIZE = 224  # Balanced size for memory and performance\nBATCH_SIZE = 4   # Reduced for memory constraints\nEPOCHS = 30      # Reduced for faster training\nSEED = 2025\n\nOUTDIR = \"outputs\"\nSKIP_TRAIN_IF_CKPT = False  # Set to True if you want to use saved checkpoints\n\n# Few-Shot Learning specific configs\nN_WAY = 6           # Number of classes (including background)\nK_SHOT = 2          # Support samples per class\nEMBEDDING_DIM = 32  # Reduced for memory efficiency\nPROTOTYPE_EPISODES = 20  # Reduced for faster training\n\n# Convolutional Autoencoder configs\nLATENT_DIM = 32     # Reduced for memory efficiency\nRECONSTRUCTION_WEIGHT = 0.5\nSEGMENTATION_WEIGHT = 2.0\n\n# Training enhancements\nAUTO_CLASS_WEIGHTS = True\nUSE_DATA_AUGMENTATION = True\nUSE_FOCAL_LOSS = True\nFOCAL_ALPHA = 0.25\nFOCAL_GAMMA = 2.0\n\n# Inference settings\nDO_INFERENCE_AFTER_TRAIN = True\nTEST_IMAGE_PATH = \"/kaggle/input/test-data/apple_disease_sample.jpg\"  # Change or set to None\nOVERLAY_ALPHA = 0.45\n\nrandom.seed(SEED)\nnp.random.seed(SEED)\ntf.random.set_seed(SEED)\n\nCLASS_NAMES = [\n    \"Background\",           # 0\n    \"Healthy\",              # 1\n    \"Brown spot\",           # 2\n    \"Alternaria leaf spot\", # 3\n    \"Gray spot\",            # 4\n    \"Rust\"                  # 5\n]\nNUM_CLASSES = len(CLASS_NAMES)\n\nCOLOR_MAP = {\n    (0,   0,   0): 0,   # Background\n    (128, 0,   0): 1,   # Healthy\n    (128, 0, 128): 2,   # Brown spot\n    (128, 128, 0): 3,   # Alternaria\n    (0,   0, 128): 4,   # Gray\n    (0, 128,   0): 5,   # Rust\n}\n\n# Default weights (overridden if AUTO_CLASS_WEIGHTS)\nCLASS_WEIGHTS = tf.constant([0.25, 0.7, 1.1, 1.1, 1.1, 1.2], dtype=tf.float32)\n\n# ============ Utils ============\ndef set_gpu_growth():\n    try:\n        gpus = tf.config.list_physical_devices('GPU')\n        if gpus:\n            for g in gpus:\n                tf.config.experimental.set_memory_growth(g, True)\n            print(f\"GPU found: {len(gpus)}; memory growth enabled\")\n        else:\n            print(\"No GPU detected; running on CPU\")\n    except Exception as e:\n        print(\"GPU mem-growth not set:\", e)\nset_gpu_growth()\n\ndef clear_tf_memory():\n    \"\"\"Clear TensorFlow GPU memory\"\"\"\n    tf.keras.backend.clear_session()\n    import gc\n    gc.collect()\n\ndef rgb_mask_to_classes(mask_rgb, tol=15):\n    \"\"\"Enhanced RGB to class mapping with better tolerance\"\"\"\n    out = np.zeros(mask_rgb.shape[:2], dtype=np.uint8)\n    \n    # Use Manhattan distance for better color matching\n    for (r, g, b), cls in COLOR_MAP.items():\n        target_color = np.array([r, g, b])\n        diff = np.sum(np.abs(mask_rgb - target_color), axis=-1)\n        mask = diff <= tol * 3  # Manhattan distance threshold\n        out[mask] = cls\n    \n    return out\n\nPALETTE = {0: (0, 0, 0), 1: (128, 0, 0), 2: (128, 0, 128), \n           3: (128, 128, 0), 4: (0, 0, 128), 5: (0, 128, 0)}\n\ndef mask_to_color(mask):\n    h, w = mask.shape\n    out = np.zeros((h, w, 3), dtype=np.uint8)\n    for c, col in PALETTE.items():\n        out[mask == c] = col\n    return out\n\n# ============ Dataset ============\nclass AppleLeafDataset:\n    IMG_EXTS = (\".png\", \".jpg\", \".jpeg\", \".bmp\", \".tif\", \".tiff\")\n    \n    def __init__(self, base_dir, image_size=224):\n        self.base_dir = base_dir\n        self.image_size = image_size\n        self.image_paths, self.mask_paths = self._discover_pairs()\n        print(f\"Paired samples: {len(self.image_paths)}\")\n\n    def _list_images(self, d):\n        acc = []\n        for r, _, fs in os.walk(d):\n            for f in fs:\n                if f.lower().endswith(self.IMG_EXTS):\n                    acc.append(os.path.join(r, f))\n        return acc\n\n    def _discover_pairs(self):\n        imgs, msks = [], []\n        if not os.path.exists(self.base_dir):\n            raise FileNotFoundError(f\"Base dir not found: {self.base_dir}\")\n        \n        for cls_folder in sorted(os.listdir(self.base_dir)):\n            cpath = os.path.join(self.base_dir, cls_folder)\n            if not os.path.isdir(cpath): \n                continue\n                \n            img_dir = os.path.join(cpath, \"image\")\n            msk_dir = os.path.join(cpath, \"label\")\n            if not (os.path.exists(img_dir) and os.path.exists(msk_dir)): \n                continue\n\n            img_files = self._list_images(img_dir)\n            msk_files = self._list_images(msk_dir)\n            img_by = {os.path.splitext(os.path.basename(p))[0].lower(): p for p in img_files}\n            msk_by = {os.path.splitext(os.path.basename(p))[0].lower(): p for p in msk_files}\n            common = sorted(set(img_by) & set(msk_by))\n            \n            print(f\"{cls_folder:20} | imgs:{len(img_files):4d} | masks:{len(msk_files):4d} | paired:{len(common):4d}\")\n            \n            for s in common: \n                imgs.append(img_by[s])\n                msks.append(msk_by[s])\n        \n        return imgs, msks\n\n    def load(self):\n        X, Y = [], []\n        for ip, mp in tqdm(list(zip(self.image_paths, self.mask_paths)), desc=\"Loading data\"):\n            img = cv2.imread(ip, cv2.IMREAD_COLOR)\n            if img is None: \n                continue\n                \n            img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n            img = cv2.resize(img, (self.image_size, self.image_size), interpolation=cv2.INTER_AREA)\n            img = img.astype(np.float32) / 255.0\n\n            msk = cv2.imread(mp, cv2.IMREAD_COLOR)\n            if msk is None: \n                continue\n                \n            msk = cv2.cvtColor(msk, cv2.COLOR_BGR2RGB)\n            msk = cv2.resize(msk, (self.image_size, self.image_size), interpolation=cv2.INTER_NEAREST)\n            msk = rgb_mask_to_classes(msk)\n\n            X.append(img)\n            Y.append(msk)\n        \n        return np.asarray(X, np.float32), np.asarray(Y, np.uint8)\n\n# ============ Loss Functions ============\ndef focal_loss(y_true, y_pred, alpha=0.25, gamma=2.0):\n    \"\"\"Focal loss for handling class imbalance\"\"\"\n    # Convert to one-hot if needed\n    if len(y_true.shape) == 3:  # If y_true is not one-hot\n        y_true = tf.one_hot(tf.cast(y_true, tf.int32), NUM_CLASSES)\n    \n    # Compute focal loss\n    ce = tf.keras.losses.categorical_crossentropy(y_true, y_pred)\n    p = tf.exp(-ce)\n    focal_loss_value = alpha * tf.pow(1 - p, gamma) * ce\n    return tf.reduce_mean(focal_loss_value)\n\ndef dice_loss(y_true, y_pred, smooth=1e-6):\n    \"\"\"Dice loss for better boundary segmentation\"\"\"\n    if len(y_true.shape) == 3:  # Convert to one-hot if needed\n        y_true = tf.one_hot(tf.cast(y_true, tf.int32), NUM_CLASSES)\n    \n    intersection = tf.reduce_sum(y_true * y_pred, axis=[1, 2])\n    union = tf.reduce_sum(y_true + y_pred, axis=[1, 2])\n    dice = (2.0 * intersection + smooth) / (union + smooth)\n    return 1.0 - tf.reduce_mean(dice)\n\ndef combined_segmentation_loss(y_true, y_pred):\n    \"\"\"Combined loss for better segmentation performance\"\"\"\n    if USE_FOCAL_LOSS:\n        ce_loss = focal_loss(y_true, y_pred, FOCAL_ALPHA, FOCAL_GAMMA)\n    else:\n        if len(y_true.shape) == 3:\n            y_true = tf.one_hot(tf.cast(y_true, tf.int32), NUM_CLASSES)\n        ce_loss = tf.keras.losses.categorical_crossentropy(y_true, y_pred)\n        ce_loss = tf.reduce_mean(ce_loss)\n    \n    d_loss = dice_loss(y_true, y_pred)\n    return 0.7 * ce_loss + 0.3 * d_loss\n\n# ============ Metrics ============\n@tf.function\ndef segmentation_accuracy(y_true, y_pred):\n    \"\"\"Proper segmentation accuracy calculation\"\"\"\n    y_pred_classes = tf.argmax(y_pred, axis=-1)\n    if len(y_true.shape) == 4:  # One-hot encoded\n        y_true_classes = tf.argmax(y_true, axis=-1)\n    else:\n        y_true_classes = tf.cast(y_true, tf.int64)\n    \n    return tf.reduce_mean(tf.cast(tf.equal(y_pred_classes, y_true_classes), tf.float32))\n\n@tf.function\ndef mean_iou_metric(y_true, y_pred):\n    \"\"\"Enhanced IoU calculation\"\"\"\n    if len(y_true.shape) == 3:\n        y_true = tf.one_hot(tf.cast(y_true, tf.int32), NUM_CLASSES)\n    \n    y_pred_classes = tf.argmax(y_pred, axis=-1)\n    y_true_classes = tf.argmax(y_true, axis=-1)\n    \n    # Calculate IoU for each class\n    ious = []\n    for class_id in range(NUM_CLASSES):\n        pred_mask = tf.equal(y_pred_classes, class_id)\n        true_mask = tf.equal(y_true_classes, class_id)\n        \n        intersection = tf.reduce_sum(tf.cast(tf.logical_and(pred_mask, true_mask), tf.float32))\n        union = tf.reduce_sum(tf.cast(tf.logical_or(pred_mask, true_mask), tf.float32))\n        \n        iou = tf.where(union > 0, intersection / (union + 1e-7), 1.0)\n        ious.append(iou)\n    \n    # Return mean IoU excluding background\n    return tf.reduce_mean(tf.stack(ious[1:]))  # Exclude background class\n\n# ============ Model Architectures ============\ndef build_few_shot_segmentation_network(input_shape, num_classes, embedding_dim=32):\n    \"\"\"Simplified few-shot segmentation network\"\"\"\n    inputs = keras.Input(shape=input_shape)\n    \n    # Encoder\n    x = layers.Conv2D(16, 3, padding='same', activation='relu')(inputs)\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(16, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    s1 = x\n    x = layers.MaxPooling2D(2)(x)  # 112x112\n    \n    x = layers.Conv2D(32, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(32, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    s2 = x\n    x = layers.MaxPooling2D(2)(x)  # 56x56\n    \n    x = layers.Conv2D(64, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(64, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    s3 = x\n    \n    # Decoder with skip connections\n    x = layers.Conv2DTranspose(32, 3, strides=2, padding='same', activation='relu')(x)  # 112x112\n    x = layers.Concatenate()([x, s2])\n    x = layers.Conv2D(32, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    \n    x = layers.Conv2DTranspose(16, 3, strides=2, padding='same', activation='relu')(x)   # 224x224\n    x = layers.Concatenate()([x, s1])\n    x = layers.Conv2D(16, 3, padding='same', activation='relu')(x)\n    x = layers.BatchNormalization()(x)\n    \n    # Feature embedding\n    features = layers.Conv2D(embedding_dim, 3, padding='same', activation='relu')(x)\n    features = layers.BatchNormalization(name='feature_embeddings')(features)\n    \n    # Classification head\n    outputs = layers.Conv2D(num_classes, 1, activation='softmax')(features)\n    \n    return keras.Model(inputs, outputs, name=\"FewShotSegNet\")\n\ndef build_conv_autoencoder(input_shape, latent_dim=32, num_classes=6):\n    \"\"\"Simplified Convolutional Autoencoder\"\"\"\n    inputs = keras.Input(shape=input_shape)\n    \n    # Encoder\n    x = layers.Conv2D(16, 3, strides=2, padding='same', activation='relu')(inputs)  # 112x112\n    x = layers.BatchNormalization()(x)\n    x = layers.Conv2D(32, 3, strides=2, padding='same', activation='relu')(x)      # 56x56\n    x = layers.BatchNormalization()(x)\n    e1 = x\n    \n    x = layers.Conv2D(64, 3, strides=2, padding='same', activation='relu')(x)     # 28x28\n    x = layers.BatchNormalization()(x)\n    e2 = x\n    \n    x = layers.Conv2D(128, 3, strides=2, padding='same', activation='relu')(x)     # 14x14\n    x = layers.BatchNormalization()(x)\n    e3 = x\n    \n    # Bottleneck\n    x = layers.Flatten()(x)\n    latent = layers.Dense(latent_dim, activation='relu', name='latent_representation')(x)\n    x = layers.Dense(14 * 14 * 128, activation='relu')(latent)\n    x = layers.Reshape((14, 14, 128))(x)\n    \n    # Decoder for reconstruction\n    x_recon = layers.Conv2DTranspose(64, 3, strides=2, padding='same', activation='relu')(x)  # 28x28\n    x_recon = layers.BatchNormalization()(x_recon)\n    # Adjust e3 to match decoder shape\n    e3_adjusted = layers.Conv2D(64, 1, padding='same')(e3)\n    e3_adjusted = layers.UpSampling2D(2)(e3_adjusted)\n    x_recon = layers.Add()([x_recon, e3_adjusted])\n    \n    x_recon = layers.Conv2DTranspose(32, 3, strides=2, padding='same', activation='relu')(x_recon)  # 56x56\n    x_recon = layers.BatchNormalization()(x_recon)\n    # Adjust e2 to match decoder shape\n    e2_adjusted = layers.Conv2D(32, 1, padding='same')(e2)\n    e2_adjusted = layers.UpSampling2D(2)(e2_adjusted)\n    x_recon = layers.Add()([x_recon, e2_adjusted])\n    \n    x_recon = layers.Conv2DTranspose(16, 3, strides=2, padding='same', activation='relu')(x_recon)   # 112x112\n    x_recon = layers.BatchNormalization()(x_recon)\n    # Adjust e1 to match decoder shape\n    e1_adjusted = layers.Conv2D(16, 1, padding='same')(e1)\n    e1_adjusted = layers.UpSampling2D(2)(e1_adjusted)\n    x_recon = layers.Add()([x_recon, e1_adjusted])\n    \n    x_recon = layers.Conv2DTranspose(8, 3, strides=2, padding='same', activation='relu')(x_recon)   # 224x224\n    x_recon = layers.BatchNormalization()(x_recon)\n    \n    x_recon = layers.Conv2DTranspose(3, 3, padding='same', activation='sigmoid')(x_recon)\n    reconstruction = layers.Lambda(lambda x: x, name='reconstruction')(x_recon)\n    \n    # Decoder for segmentation\n    x_seg = layers.Dense(14 * 14 * 64, activation='relu')(latent)\n    x_seg = layers.Reshape((14, 14, 64))(x_seg)\n    \n    x_seg = layers.Conv2DTranspose(32, 3, strides=2, padding='same', activation='relu')(x_seg)  # 28x28\n    x_seg = layers.BatchNormalization()(x_seg)\n    \n    x_seg = layers.Conv2DTranspose(16, 3, strides=2, padding='same', activation='relu')(x_seg)   # 56x56\n    x_seg = layers.BatchNormalization()(x_seg)\n    \n    x_seg = layers.Conv2DTranspose(8, 3, strides=2, padding='same', activation='relu')(x_seg)   # 112x112\n    x_seg = layers.BatchNormalization()(x_seg)\n    \n    x_seg = layers.Conv2DTranspose(4, 3, strides=2, padding='same', activation='relu')(x_seg)   # 224x224\n    x_seg = layers.BatchNormalization()(x_seg)\n    \n    segmentation = layers.Conv2D(num_classes, 1, activation='softmax', name='segmentation')(x_seg)\n    \n    return keras.Model(inputs, [reconstruction, segmentation], name=\"ConvAutoencoder\")\n\n# ============ Few-Shot Learning ============\nclass FewShotTrainer(keras.Model):\n    \"\"\"Few-shot trainer with proper dtype handling\"\"\"\n    def __init__(self, base_model, **kwargs):\n        super().__init__(**kwargs)\n        self.base_model = base_model\n        \n    def call(self, inputs):\n        return self.base_model(inputs)\n        \n    def train_step(self, data):\n        x, y = data\n        \n        with tf.GradientTape() as tape:\n            y_pred = self.base_model(x, training=True)\n            loss = combined_segmentation_loss(y, y_pred)\n        \n        gradients = tape.gradient(loss, self.base_model.trainable_variables)\n        self.optimizer.apply_gradients(zip(gradients, self.base_model.trainable_variables))\n        \n        # Compute metrics - FIXED: Ensure both tensors have the same dtype\n        y_pred_classes = tf.argmax(y_pred, axis=-1)\n        y_true_classes = tf.cast(y, tf.int64)  # Changed from int32 to int64 to match y_pred_classes\n        accuracy = tf.reduce_mean(tf.cast(tf.equal(y_pred_classes, y_true_classes), tf.float32))\n        \n        # Calculate IoU\n        iou = mean_iou_metric(y, y_pred)\n        \n        return {\"loss\": loss, \"accuracy\": accuracy, \"iou\": iou}\n\ndef create_support_query_episode(X, Y, n_way=6, k_shot=2, query_size=4):\n    \"\"\"Create a few-shot learning episode\"\"\"\n    episode_x_support = []\n    episode_y_support = []\n    episode_x_query = []\n    episode_y_query = []\n    \n    # Sample classes for this episode\n    available_classes = []\n    for class_id in range(n_way):\n        class_indices = np.where(np.any(Y == class_id, axis=(1, 2)))[0]\n        if len(class_indices) >= k_shot:\n            available_classes.append(class_id)\n    \n    if len(available_classes) < n_way:\n        available_classes = list(range(n_way))  # fallback\n    \n    episode_classes = available_classes[:n_way]\n    \n    for class_id in episode_classes:\n        # Find all samples of this class\n        class_indices = np.where(np.any(Y == class_id, axis=(1, 2)))[0]\n        \n        if len(class_indices) < k_shot:\n            # If not enough samples, repeat existing ones\n            selected_indices = np.random.choice(class_indices, k_shot, replace=True)\n            query_indices = np.random.choice(class_indices, 1, replace=True)\n        else:\n            # Randomly sample support and query\n            all_selected = np.random.choice(class_indices, \n                                          min(len(class_indices), k_shot + 1),\n                                          replace=False)\n            selected_indices = all_selected[:k_shot]\n            query_indices = all_selected[k_shot:] if len(all_selected) > k_shot else selected_indices[:1]\n        \n        episode_x_support.extend(X[selected_indices])\n        episode_y_support.extend(Y[selected_indices])\n        episode_x_query.extend(X[query_indices])\n        episode_y_query.extend(Y[query_indices])\n    \n    return (np.array(episode_x_support), np.array(episode_y_support),\n            np.array(episode_x_query), np.array(episode_y_query))\n\n# ============ Training Functions ============\ndef train_few_shot_model(X_train, Y_train, X_val, Y_val, input_shape):\n    \"\"\"Train Few-Shot Learning model\"\"\"\n    print(\"\\n🚀 Training Few-Shot Learning Model...\")\n    \n    # Build model\n    base_model = build_few_shot_segmentation_network(input_shape, NUM_CLASSES, EMBEDDING_DIM)\n    fsl_trainer = FewShotTrainer(base_model)\n    fsl_trainer.compile(optimizer=keras.optimizers.Adam(1e-3))\n    \n    # Create episodic training data\n    print(\"Generating few-shot episodes for training...\")\n    train_episodes = []\n    for _ in range(PROTOTYPE_EPISODES):\n        support_x, support_y, query_x, query_y = create_support_query_episode(\n            X_train, Y_train, N_WAY, K_SHOT, query_size=6\n        )\n        # Combine support and query for standard training\n        episode_x = np.concatenate([support_x, query_x], axis=0)\n        episode_y = np.concatenate([support_y, query_y], axis=0)\n        train_episodes.append((episode_x, episode_y))\n    \n    # Train with episodes\n    print(\"Training with episodic data...\")\n    for episode in range(len(train_episodes)):\n        episode_x, episode_y = train_episodes[episode]\n        loss_dict = fsl_trainer.train_step([episode_x, episode_y])\n        \n        if episode % 10 == 0:\n            print(f\"Episode {episode}/{len(train_episodes)}, Loss: {loss_dict['loss']:.4f}, \"\n                  f\"Acc: {loss_dict['accuracy']:.4f}, IoU: {loss_dict['iou']:.4f}\")\n    \n    # Fine-tune with standard segmentation training\n    print(\"Fine-tuning with standard segmentation...\")\n    Y_train_oh = tf.one_hot(Y_train, NUM_CLASSES).numpy()\n    Y_val_oh = tf.one_hot(Y_val, NUM_CLASSES).numpy()\n    \n    base_model.compile(\n        optimizer=keras.optimizers.Adam(1e-4),\n        loss=combined_segmentation_loss,\n        metrics=[segmentation_accuracy, mean_iou_metric]\n    )\n    \n    callbacks = [\n        keras.callbacks.ModelCheckpoint(\n            os.path.join(OUTDIR, \"few_shot_best.h5\"),\n            monitor='val_mean_iou_metric', mode='max',\n            save_best_only=True, verbose=1\n        ),\n        keras.callbacks.EarlyStopping(\n            monitor='val_mean_iou_metric', mode='max',\n            patience=6, restore_best_weights=True\n        ),\n        keras.callbacks.ReduceLROnPlateau(\n            monitor='val_loss', factor=0.5, patience=3,\n            min_lr=1e-6, verbose=1\n        )\n    ]\n    \n    history = base_model.fit(\n        X_train, Y_train_oh,\n        validation_data=(X_val, Y_val_oh),\n        batch_size=BATCH_SIZE,\n        epochs=EPOCHS//2,\n        callbacks=callbacks,\n        verbose=1\n    )\n    \n    plot_training_history(history, \"FewShotLearning\", OUTDIR)\n    return base_model\n\ndef train_autoencoder_model(X_train, Y_train, X_val, Y_val, input_shape):\n    \"\"\"Train Convolutional Autoencoder model\"\"\"\n    print(\"\\n🚀 Training Convolutional Autoencoder...\")\n    \n    model = build_conv_autoencoder(input_shape, LATENT_DIM, NUM_CLASSES)\n    \n    # Prepare data\n    Y_train_oh = tf.one_hot(Y_train, NUM_CLASSES).numpy()\n    Y_val_oh = tf.one_hot(Y_val, NUM_CLASSES).numpy()\n    \n    # Compile model\n    model.compile(\n        optimizer=keras.optimizers.Adam(1e-3),\n        loss={\n            'reconstruction': 'mse',\n            'segmentation': combined_segmentation_loss\n        },\n        loss_weights={\n            'reconstruction': RECONSTRUCTION_WEIGHT,\n            'segmentation': SEGMENTATION_WEIGHT\n        },\n        metrics={\n            'segmentation': [segmentation_accuracy, mean_iou_metric]\n        }\n    )\n    \n    callbacks = [\n        keras.callbacks.ModelCheckpoint(\n            os.path.join(OUTDIR, \"autoencoder_best.h5\"),\n            monitor='val_segmentation_mean_iou_metric', mode='max',\n            save_best_only=True, verbose=1\n        ),\n        keras.callbacks.EarlyStopping(\n            monitor='val_segmentation_mean_iou_metric', mode='max',\n            patience=10, restore_best_weights=True\n        ),\n        keras.callbacks.ReduceLROnPlateau(\n            monitor='val_loss', factor=0.5, patience=4,\n            min_lr=1e-6, verbose=1\n        )\n    ]\n    \n    history = model.fit(\n        X_train, {'reconstruction': X_train, 'segmentation': Y_train_oh},\n        validation_data=(X_val, {'reconstruction': X_val, 'segmentation': Y_val_oh}),\n        batch_size=BATCH_SIZE,\n        epochs=EPOCHS,\n        callbacks=callbacks,\n        verbose=1\n    )\n    \n    plot_training_history(history, \"ConvAutoencoder\", OUTDIR)\n    return model\n\n# ============ Visualization ============\ndef plot_training_history(history, model_name, outdir):\n    \"\"\"Plot training history\"\"\"\n    plt.figure(figsize=(15, 5))\n    \n    plt.subplot(1, 3, 1)\n    plt.plot(history.history['loss'], label='Training Loss')\n    if 'val_loss' in history.history:\n        plt.plot(history.history['val_loss'], label='Validation Loss')\n    plt.title(f'{model_name} - Loss')\n    plt.xlabel('Epoch')\n    plt.ylabel('Loss')\n    plt.legend()\n    \n    if 'mean_iou_metric' in history.history:\n        plt.subplot(1, 3, 2)\n        plt.plot(history.history['mean_iou_metric'], label='Training IoU')\n        if 'val_mean_iou_metric' in history.history:\n            plt.plot(history.history['val_mean_iou_metric'], label='Validation IoU')\n        plt.title(f'{model_name} - IoU')\n        plt.xlabel('Epoch')\n        plt.ylabel('IoU')\n        plt.legend()\n    \n    if 'segmentation_accuracy' in history.history:\n        plt.subplot(1, 3, 3)\n        plt.plot(history.history['segmentation_accuracy'], label='Training Accuracy')\n        if 'val_segmentation_accuracy' in history.history:\n            plt.plot(history.history['val_segmentation_accuracy'], label='Validation Accuracy')\n        plt.title(f'{model_name} - Accuracy')\n        plt.xlabel('Epoch')\n        plt.ylabel('Accuracy')\n        plt.legend()\n    \n    plt.tight_layout()\n    save_path = os.path.join(outdir, f\"{model_name}_training_history.png\")\n    plt.savefig(save_path, dpi=150, bbox_inches='tight')\n    plt.close()\n    print(f\"Saved training history: {save_path}\")\n\ndef visualize_results(model, X_test, Y_test, model_type=\"autoencoder\", n=4, outdir=\"outputs\"):\n    \"\"\"Visualize model results\"\"\"\n    os.makedirs(outdir, exist_ok=True)\n    indices = np.random.choice(len(X_test), n, replace=False)\n    \n    if model_type == \"autoencoder\":\n        fig, axes = plt.subplots(n, 4, figsize=(16, 4*n))\n    else:\n        fig, axes = plt.subplots(n, 3, figsize=(12, 4*n))\n    \n    if n == 1: \n        axes = axes.reshape(1, -1)\n    \n    for i, idx in enumerate(indices):\n        img = X_test[idx]\n        true_mask = Y_test[idx]\n        \n        # Predict based on model type\n        if model_type == \"autoencoder\":\n            recon, seg_pred = model.predict(img[None], verbose=0)\n            recon = recon[0]\n            seg_pred = seg_pred[0]\n        else:  # few-shot\n            seg_pred = model.predict(img[None], verbose=0)[0]\n        \n        pred_mask = np.argmax(seg_pred, axis=-1)\n        \n        # Compute severity\n        per_class, healthy_pct, disease_total = compute_severity_percentages(pred_mask)\n        \n        # Plot results\n        axes[i, 0].imshow(img)\n        axes[i, 0].set_title(\"Original\")\n        axes[i, 0].axis('off')\n        \n        if model_type == \"autoencoder\":\n            axes[i, 1].imshow(np.clip(recon, 0, 1))\n            axes[i, 1].set_title(\"Reconstructed\")\n            axes[i, 1].axis('off')\n            \n            axes[i, 2].imshow(mask_to_color(true_mask))\n            axes[i, 2].set_title(\"True Mask\")\n            axes[i, 2].axis('off')\n            \n            axes[i, 3].imshow(mask_to_color(pred_mask))\n            axes[i, 3].set_title(f\"Pred Mask\\nDisease: {disease_total:.1f}%\")\n            axes[i, 3].axis('off')\n        else:\n            axes[i, 1].imshow(mask_to_color(true_mask))\n            axes[i, 1].set_title(\"True Mask\")\n            axes[i, 1].axis('off')\n            \n            axes[i, 2].imshow(mask_to_color(pred_mask))\n            axes[i, 2].set_title(f\"Pred Mask\\nDisease: {disease_total:.1f}%\")\n            axes[i, 2].axis('off')\n    \n    plt.tight_layout()\n    save_path = os.path.join(outdir, f\"{model_type}_results.png\")\n    plt.savefig(save_path, dpi=150, bbox_inches='tight')\n    plt.close()\n    print(f\"Saved {model_type} visualization: {save_path}\")\n\ndef compute_severity_percentages(mask_int):\n    \"\"\"Compute disease severity percentages\"\"\"\n    m = np.asarray(mask_int, dtype=np.uint8)\n    leaf = (m != 0)\n    leaf_pixels = int(leaf.sum())\n    if leaf_pixels == 0:\n        per_class = {CLASS_NAMES[c]: 0.0 for c in range(2, NUM_CLASSES)}\n        healthy_pct = 0.0\n        disease_total = 0.0\n        return per_class, healthy_pct, disease_total\n    \n    per_class = {CLASS_NAMES[c]: 100.0 * float((m == c).sum()) / leaf_pixels\n                 for c in range(2, NUM_CLASSES)}\n    healthy_pct = 100.0 * float((m == 1).sum()) / leaf_pixels\n    disease_total = 100.0 - healthy_pct\n    \n    return per_class, healthy_pct, disease_total\n\n# ============ Inference ============\ndef preprocess_image_for_model(image_path, target_hw):\n    \"\"\"Preprocess image for model inference\"\"\"\n    bgr = cv2.imread(image_path, cv2.IMREAD_COLOR)\n    if bgr is None:\n        raise FileNotFoundError(f\"Could not read image: {image_path}\")\n    \n    rgb = cv2.cvtColor(bgr, cv2.COLOR_BGR2RGB)\n    h, w = target_hw\n    rgb_rs = cv2.resize(rgb, (w, h), interpolation=cv2.INTER_AREA)\n    img_f32_01 = rgb_rs.astype(np.float32) / 255.0\n    \n    return img_f32_01\n\ndef overlay_mask_on_image(rgb_01, mask_color, alpha=0.45):\n    \"\"\"Overlay mask on image\"\"\"\n    rgb_u8 = (np.clip(rgb_01, 0, 1) * 255).astype(np.uint8)\n    return cv2.addWeighted(rgb_u8, 1.0, mask_color, alpha, 0)\n\ndef test_single_image(model, image_path, outdir=\"outputs\", alpha=0.45, model_type=\"autoencoder\"):\n    \"\"\"Test single image with trained model\"\"\"\n    os.makedirs(outdir, exist_ok=True)\n    H, W = IMG_SIZE, IMG_SIZE\n    \n    try:\n        img_01 = preprocess_image_for_model(image_path, (H, W))\n    except Exception as e:\n        print(f\"Error loading image: {e}\")\n        return\n    \n    if model_type == \"autoencoder\":\n        recon, seg_pred = model.predict(img_01[None], verbose=0)\n        mask = np.argmax(seg_pred[0], axis=-1).astype(np.uint8)\n    else:  # few-shot\n        seg_pred = model.predict(img_01[None], verbose=0)[0]\n        mask = np.argmax(seg_pred, axis=-1).astype(np.uint8)\n    \n    per_class, healthy_pct, disease_total = compute_severity_percentages(mask)\n    \n    # Save visuals\n    base = os.path.splitext(os.path.basename(image_path))[0]\n    mask_color = mask_to_color(mask)\n    overlay = overlay_mask_on_image(img_01, mask_color, alpha=alpha)\n    \n    cv2.imwrite(os.path.join(outdir, f\"{base}_{model_type}_pred_mask.png\"),\n                cv2.cvtColor(mask_color, cv2.COLOR_RGB2BGR))\n    cv2.imwrite(os.path.join(outdir, f\"{base}_{model_type}_overlay.png\"),\n                cv2.cvtColor(overlay, cv2.COLOR_RGB2BGR))\n    \n    with open(os.path.join(outdir, f\"{base}_{model_type}_severity.json\"), \"w\") as f:\n        json.dump({\n            \"healthy_pct\": healthy_pct,\n            \"disease_total_pct\": disease_total,\n            \"per_disease_pct\": per_class\n        }, f, indent=2)\n    \n    # Display results\n    print(f\"==== {model_type.upper()} Severity Report ====\")\n    print(f\"Healthy: {healthy_pct:5.1f}% | Total disease: {disease_total:5.1f}%\")\n    for k, v in per_class.items():\n        print(f\"{k:>20}: {v:5.1f}%\")\n\n# ============ Class Weight Calculation ============\ndef compute_auto_class_weights(Y_int, num_classes):\n    \"\"\"Compute class weights for imbalanced data\"\"\"\n    counts = np.bincount(Y_int.flatten(), minlength=num_classes).astype(np.float64)\n    total = counts.sum()\n    frequencies = counts / total\n    \n    # Use inverse frequency with smoothing\n    weights = 1.0 / (frequencies + 0.01)\n    weights = weights / weights.sum() * num_classes  # Normalize\n    \n    # Reduce background weight\n    weights[0] = max(weights[0] * 0.3, 0.1)\n    \n    print(\"Class frequencies:\", frequencies)\n    print(\"Class weights:\", weights)\n    return weights\n\n# ============ Main ============\ndef main():\n    t0 = time.time()\n    print(\"Loading dataset...\")\n    ds = AppleLeafDataset(BASE_DIR, IMG_SIZE)\n    X, Y = ds.load()\n\n    # splits ≈70/15/15\n    Xtr, Xte, Ytr, Yte = train_test_split(X, Y, test_size=0.15, random_state=SEED, shuffle=True)\n    Xtr, Xva, Ytr, Yva = train_test_split(Xtr, Ytr, test_size=0.1765, random_state=SEED, shuffle=True)\n    print(f\"Shapes -> Train: {Xtr.shape}, Val: {Xva.shape}, Test: {Xte.shape}\")\n\n    # class weights\n    if AUTO_CLASS_WEIGHTS:\n        global CLASS_WEIGHTS\n        CLASS_WEIGHTS = tf.constant(compute_auto_class_weights(Ytr, NUM_CLASSES), dtype=tf.float32)\n        print(\"Class weights (auto):\", CLASS_WEIGHTS.numpy())\n\n    input_shape = (IMG_SIZE, IMG_SIZE, 3)\n    os.makedirs(OUTDIR, exist_ok=True)\n    results = []\n\n    # ============ Train Few-Shot Learning Model ============\n    clear_tf_memory()\n    \n    fsl_ckpt = os.path.join(OUTDIR, \"few_shot_best.h5\")\n    if SKIP_TRAIN_IF_CKPT and os.path.exists(fsl_ckpt):\n        print(\"Few-Shot model checkpoint found, loading...\")\n        try:\n            fsl_model = keras.models.load_model(fsl_ckpt, compile=False)\n            fsl_model.compile(\n                optimizer=keras.optimizers.Adam(1e-4),\n                loss=combined_segmentation_loss,\n                metrics=[segmentation_accuracy, mean_iou_metric]\n            )\n        except Exception as e:\n            print(f\"Failed to load FSL checkpoint: {e}; training from scratch.\")\n            fsl_model = train_few_shot_model(Xtr, Ytr, Xva, Yva, input_shape)\n    else:\n        fsl_model = train_few_shot_model(Xtr, Ytr, Xva, Yva, input_shape)\n    \n    # Evaluate Few-Shot model\n    print(\"Evaluating Few-Shot Learning model...\")\n    Y_val_oh = tf.one_hot(Yva, NUM_CLASSES).numpy()\n    Y_test_oh = tf.one_hot(Yte, NUM_CLASSES).numpy()\n    \n    val_metrics_fsl = fsl_model.evaluate(Xva, Y_val_oh, verbose=0)\n    test_metrics_fsl = fsl_model.evaluate(Xte, Y_test_oh, verbose=0)\n    \n    fsl_results = {\n        \"Model\": \"FewShotLearning\",\n        \"Val Loss\": float(val_metrics_fsl[0]),\n        \"Val IoU\": float(val_metrics_fsl[1]),\n        \"Val Acc\": float(val_metrics_fsl[2]),\n        \"Test Loss\": float(test_metrics_fsl[0]),\n        \"Test IoU\": float(test_metrics_fsl[1]),\n        \"Test Acc\": float(test_metrics_fsl[2]),\n    }\n    results.append(fsl_results)\n    \n    # Visualize Few-Shot results\n    visualize_results(fsl_model, Xva, Yva, \"few_shot\", n=4, outdir=OUTDIR)\n    \n    # ============ Train Convolutional Autoencoder ============\n    clear_tf_memory()\n    \n    cae_ckpt = os.path.join(OUTDIR, \"autoencoder_best.h5\")\n    if SKIP_TRAIN_IF_CKPT and os.path.exists(cae_ckpt):\n        print(\"Autoencoder checkpoint found, loading...\")\n        try:\n            cae_model = keras.models.load_model(cae_ckpt, compile=False)\n            cae_model.compile(\n                optimizer=keras.optimizers.Adam(1e-3),\n                loss={\n                    'reconstruction': 'mse',\n                    'segmentation': combined_segmentation_loss\n                },\n                loss_weights={\n                    'reconstruction': RECONSTRUCTION_WEIGHT,\n                    'segmentation': SEGMENTATION_WEIGHT\n                },\n                metrics={\n                    'segmentation': [segmentation_accuracy, mean_iou_metric]\n                }\n            )\n        except Exception as e:\n            print(f\"Failed to load CAE checkpoint: {e}; training from scratch.\")\n            cae_model = train_autoencoder_model(Xtr, Ytr, Xva, Yva, input_shape)\n    else:\n        cae_model = train_autoencoder_model(Xtr, Ytr, Xva, Yva, input_shape)\n    \n    # Evaluate Autoencoder\n    print(\"Evaluating Convolutional Autoencoder...\")\n    val_metrics_cae = cae_model.evaluate(\n        Xva, {'reconstruction': Xva, 'segmentation': Y_val_oh}, verbose=0\n    )\n    test_metrics_cae = cae_model.evaluate(\n        Xte, {'reconstruction': Xte, 'segmentation': Y_test_oh}, verbose=0\n    )\n    \n    cae_results = {\n        \"Model\": \"ConvAutoencoder\",\n        \"Val Loss\": float(val_metrics_cae[0]),\n        \"Val IoU\": float(val_metrics_cae[3]),  # segmentation_iou_metric\n        \"Val Acc\": float(val_metrics_cae[4]),  # segmentation_accuracy\n        \"Test Loss\": float(test_metrics_cae[0]),\n        \"Test IoU\": float(test_metrics_cae[3]),\n        \"Test Acc\": float(test_metrics_cae[4]),\n    }\n    results.append(cae_results)\n    \n    # Visualize Autoencoder results\n    visualize_results(cae_model, Xva, Yva, \"autoencoder\", n=4, outdir=OUTDIR)\n    \n    # ============ Single Image Inference ============\n    if DO_INFERENCE_AFTER_TRAIN and TEST_IMAGE_PATH and os.path.exists(TEST_IMAGE_PATH):\n        print(f\"\\nRunning single-image inference on: {TEST_IMAGE_PATH}\")\n        \n        print(\"Testing with Few-Shot Learning model:\")\n        test_single_image(fsl_model, TEST_IMAGE_PATH, outdir=OUTDIR, \n                         alpha=OVERLAY_ALPHA, model_type=\"few_shot\")\n        \n        print(\"\\nTesting with Convolutional Autoencoder:\")\n        test_single_image(cae_model, TEST_IMAGE_PATH, outdir=OUTDIR, \n                         alpha=OVERLAY_ALPHA, model_type=\"autoencoder\")\n    \n    elif DO_INFERENCE_AFTER_TRAIN and TEST_IMAGE_PATH:\n        print(f\"TEST_IMAGE_PATH does not exist: {TEST_IMAGE_PATH}\")\n\n    # Save comparison results\n    cmp_csv = os.path.join(OUTDIR, \"fsl_cae_comparison.csv\")\n    df = pd.DataFrame(results)\n    df = df.sort_values(\"Test IoU\", ascending=False)\n    df.to_csv(cmp_csv, index=False)\n    \n    print(\"\\n================ Model Comparison ================\")\n    print(df.to_string(index=False))\n    print(f\"\\nSaved: {cmp_csv}\")\n    print(f\"Done in {time.time()-t0:.1f}s\")\n\nif __name__ == \"__main__\":\n    main()","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}